<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/20/2020 4:40:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SPVMPRDBDD03"
  DTS:CreatorName="LPDP\vbarski-admin"
  DTS:DTSID="{53A3AA5D-F5AA-4847-8EC1-428C8CED1647}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.121"
  DTS:LocaleID="1036"
  DTS:ObjectName="ssis_00-PdfToTextInInfoFichier"
  DTS:PackageType="5"
  DTS:VersionBuild="122"
  DTS:VersionGUID="{FB97459A-A1E5-4081-9B1B-594C3F9EAA81}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SPVMPRDAPP12.InfosFichiers2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{77A05B32-6D0C-48A7-ACAA-1CCC4F4D3018}"
      DTS:ObjectName="SPVMPRDAPP12.InfosFichiers2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SPVMPRDAPP12\INTERFACES_EXT;Initial Catalog=InfosFichiers2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SPVMPRDBDD03.GED"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{2A61C683-6EA4-4BB1-B770-206E8929EFA6}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{74FD3EFB-DF9B-4289-AACF-C290E3A11B94}"
      DTS:ObjectName="idFichierDepart">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">68632</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3FF33395-591E-4704-BC2F-67A004D86DC4}"
      DTS:ObjectName="IronOCRLicenceKey">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">IRONOCR-813502F419-896131-8F6570-71B60FC258-900ACD7-UExACA161D835E29D8-SPPP.IRO200612.1470.27115.ORG.5DEV.1YR.SUPPORTED.UNTIL.13.JUN.2021</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FB66580-3A8A-4DB9-8218-ACF761BB3710}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="oPathFiles">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC6DE1BD-9895-4425-97E2-D4A4F32341B9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strIdFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9AE769C-9C7B-433D-850F-8C8BC4D2B611}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strLogs">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2D764A02-CD4D-41C7-B933-03CC412610A0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strPathFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C234EE9A-30CA-4995-8728-AC88DB6AF936}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strTextFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{2A61C683-6EA4-4BB1-B770-206E8929EFA6}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0F7142A8-2876-40BF-8492-B1E62F779BD3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; Â© 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{77A05B32-6D0C-48A7-ACAA-1CCC4F4D3018}"
          SQLTask:SqlStatementSource="select DossierCible, CAST(i.idFichier AS VARCHAR) as idFichier&#xA;from [InfosFichiers2].[dbo].[InfoFichier] i&#xA;left join [InfosFichiers2].dbo.Fichier_A_Ecarte_IronOCR_dll e&#xA;&#x9;on i.IdFichier =e.idFichier&#xA;where &#xA;e.idFichier is null&#xA;and i.FormatFichier = 'PDF'&#xA;and i.TexteDuFichierAvecIronOCR IS NULL&#xA;and i.idFichier &gt;= ?&#xA;order by i.idFichier"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::oPathFiles" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::idFichierDepart"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pour chaque fichier"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{D698EC76-D9A6-43C1-845C-D8D1FA1D2992}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Pour chaque fichier">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachADOEnumerator"
        DTS:DTSID="{ED104509-99F7-4B85-9CA5-5E42FED7DE13}"
        DTS:ObjectName="{ED104509-99F7-4B85-9CA5-5E42FED7DE13}">
        <DTS:ObjectData>
          <FEEADO
            EnumType="EnumerateRowsInFirstTable"
            VarName="User::oPathFiles" />
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Pour chaque fichier\Logs KO"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{9a697724-fee3-45bd-aed7-b6105458bdfe}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logs KO"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A366C29-07AA-4862-A24D-F93E5F254741}"
              SQLTask:SqlStatementSource="exec [dbo].[usp_insertLogs] ?,?,-1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::strLogs"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pour chaque fichier\Logs OK"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{872d66f3-579a-44f1-94ed-1f59f7b7554f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Logs OK"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{6A366C29-07AA-4862-A24D-F93E5F254741}"
              SQLTask:SqlStatementSource="exec [dbo].[usp_insertLogs] ?,?,0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::strLogs"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Pour chaque fichier\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{0A061F6C-B0A4-454D-8F54-59450E9FD6DB}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:MaxErrorCount="0"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Pour chaque fichier\Sequence Container\IronOCR"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Script Task"
              DTS:DTSID="{aff7623f-4f48-4f01-b524-e25c054c4c2b}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="IronOCR"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_ee32c7c3f1e04aa59bf9509a62fd7d18"
                  VSTAMajorVersion="15"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::strPathFile,$Package::IronOCRLicenceKey"
                  ReadWriteVariables="User::strIdFichier,User::strLogs,User::strTextFile">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_ee32c7c3f1e04aa59bf9509a62fd7d18.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E05B86CF-1CDA-48CF-A2B6-9BC391B532B2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_70562bdede474e8496642b7a4dd23400</RootNamespace>
    <AssemblyName>ST_ee32c7c3f1e04aa59bf9509a62fd7d18</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="IronOcr">
      <HintPath>C:\New folder\IronOcr\bin\IronOcr.dll</HintPath>
    </Reference>
    <Reference Include="IronPdf">
      <HintPath>C:\IronPDFetOCR\IronPdf\IronPdf.dll</HintPath>
    </Reference>
    <Reference Include="IronPdf.Assets.Rendering.Windows">
      <HintPath>C:\IronPDFetOCR\IronPdf\IronPdf.Assets.Rendering.Windows.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_70562bdede474e8496642b7a4dd23400.Properties.Settings.get_Default():ST_70562bdede474e8496642b7a4dd23400.Properties.Sett" +
    "ings")]

namespace ST_70562bdede474e8496642b7a4dd23400.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using IronOcr;
using IronPdf;
using System.Drawing;
#endregion

namespace ST_70562bdede474e8496642b7a4dd23400
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here


            PdfDocument PDF1 = PdfDocument.FromFile("C:\\test\\201200334.pdf");
            string AllText1 = PDF1.ExtractAllText();

            PdfDocument PDF2 = PdfDocument.FromFile("C:\\test\\201200335.pdf");
            string AllText2 = PDF2.ExtractAllText();

            PdfDocument PDF3 = PdfDocument.FromFile("C:\\test\\201200340.pdf");
            string AllText3 = PDF3.ExtractAllText();

            try
            {
                string file = Dts.Variables["User::strPathFile"].Value.ToString() + @"\" + Dts.Variables["User::strIdFichier"].Value.ToString() + ".bak";


                if (File.Exists(file))
                {
                    IronOcr.License.LicenseKey = Dts.Variables["$Package::IronOCRLicenceKey"].Value.ToString();
                    var Ocr = new IronOcr.AutoOcr();
                    var Results = Ocr.ReadPdf(file);
                    var Barcodes = Results.Barcodes;
                    var Text = Results.Text;
                    string texte = Text.Replace(Environment.NewLine, "Â§");


                    Dts.Variables["User::strTextFile"].Value = texte;

                    Dts.Variables["User::strLogs"].Value = "OK pour idFile=" + Dts.Variables["User::strIdFichier"].Value.ToString();
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
                else
                {
                    Dts.Variables["User::strLogs"].Value = "Fichier introuvable "  + file;
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
               
            }
            catch (Exception ex)
            {
                Dts.Variables["User::strLogs"].Value = "Erreur sur idFile=" + Dts.Variables["strIdFichier"].Value.ToString() + " - " + ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}


        

       

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_ee32c7c3f1e04aa59bf9509a62fd7d18</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_ee32c7c3f1e04aa59bf9509a62fd7d18</msb:DisplayName>
    <msb:ProjectId>{C0D9B9CD-F0C5-4385-9A6C-B873AE208AD6}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_ee32c7c3f1e04aa59bf9509a62fd7d18.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="6c3ba317638a4412b5cd3549f25bf195">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:LineNumber>100</msb:LineNumber>
      <msb:Condition>
      </msb:Condition>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="packages.config"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="IronOcr" version="4.4.0" targetFramework="net47" />
</packages>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_70562bdede474e8496642b7a4dd23400")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_70562bdede474e8496642b7a4dd23400")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_70562bdede474e8496642b7a4dd23400.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_70562bdede474e8496642b7a4dd23400.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_70562bdede474e8496642b7a4dd23400.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_70562bdede474e8496642b7a4dd23400.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_70562bdede474e8496642b7a4dd23400.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_ee32c7c3f1e04aa59bf9509a62fd7d18.dll">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
2AABAJMiAAAAAJMIXwHdAAEAmyIAAAAAlggVBuMAAgCiIgAAAACGGOwEBgACAKoiAAAAAJEY8gTo
AAIAAAABAHkDCQDsBAEAEQDsBAYAGQDsBAoAKQDsBBAAMQDsBBAAOQDsBBAAQQDsBBAASQDsBBAA
UQDsBBAAWQDsBBAAYQDsBBAAaQDsBAYAiQDsBAYAsQDsBBUAwQDsBAYAyQARASIAyQBbBioAcQDq
BS4A0QDLBTMA2QBKBDgA4QBlAz4AkQCpAyoA6QAHBkIA8QAABkoA+QBqBk8AAQHsBAYAAQF/A1IA
CQGPBV8ACQFSBioAIQE6AWYA6QC1AGoA4QBvA3AA6QAHBnUA0QAhBgEAeQDYACoAcQDsBAYAkQDs
BAYAKQH/AHsAKQF1BoQAmQDsBIoAuQDsBAYACAAUALYACAAYALsAKQBzACMBLgALAPsALgATAAQB
LgAbACMBLgAjACwBLgArAFUBLgAzAFUBLgA7AFUBLgBDACwBLgBLAFsBLgBTAFUBLgBbAHIBQwBj
ALsASQBzACMBYQB7ALsAYwBrALsAGwADAAEABAADAAAA3ATsAAAAcwHxAAAAGQb2AAIABAADAAIA
BQAFAAEABgAFAAIABwAHAASAAAABAAAACx4+VAAAAAAAADMAAAAEAAAAAAAAAAAAAACSAJEAAAAA
AA4AAAAAAAAAAAAAAJsAsgMAAAAABAAAAAAAAAAAAAAAkgBTBAAAAADkBwwAAwAAAAAAAACkAIcD
AAAAAA4AAAAAAAAAAAAAAJsAagAAAAAABAAEAAAAvVIAAAAArQDIBAAAAAAAAAAAAQAAAD0FAAAF
AAIAAAAAU1RfNzA1NjJiZGVkZTQ3NGU4NDk2NjQyYjdhNGRkMjM0MDAASUVudW1lcmFibGVgMQBT
VF9lZTMyYzdjM2YxZTA0YWE1OWJmOTUwOWE2MmZkN2QxOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWlj
cm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAT2NyQmFyY29kZQBnZXRfTWVz
c2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGcm9tRmls
ZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAGdldF9OZXdMaW5lAFR5cGUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAExpY2Vuc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAUmVhZFBkZgBJcm9u
UGRmAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2Ny
aXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2VlMzJjN2MzZjFlMDRhYTU5
YmY5NTA5YTYyZmQ3ZDE4LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBJcm9uT2NyAEF1dG9PY3IAZ2V0X1Jlc291
cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83MDU2MmJkZWRlNDc0ZTg0OTY2
NDJiN2E0ZGQyMzQwMC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAZ2V0X0JhcmNvZGVzAFNUXzcwNTYyYmRlZGU0NzRlODQ5NjY0MmI3YTRkZDIzNDAwLlByb3Bl
cnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBFeGlzdHMAQ29uY2F0AE9iamVjdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABPY3JSZXN1
bHQARW52aXJvbm1lbnQAUGRmRG9jdW1lbnQAZ2V0X1RleHQARXh0cmFjdEFsbFRleHQATGljZW5z
ZUtleQBnZXRfQXNzZW1ibHkAAAAAK0MAOgBcAHQAZQBzAHQAXAAyADAAMQAyADAAMAAzADMANAAu
AHAAZABmAAArQwA6AFwAdABlAHMAdABcADIAMAAxADIAMAAwADMAMwA1AC4AcABkAGYAACtDADoA
XAB0AGUAcwB0AFwAMgAwADEAMgAwADAAMwA0ADAALgBwAGQAZgAAI1UAcwBlAHIAOgA6AHMAdABy
AFAAYQB0AGgARgBpAGwAZQAAA1wAACVVAHMAZQByADoAOgBzAHQAcgBJAGQARgBpAGMAaABpAGUA
cgAACS4AYgBhAGsAADckAFAAYQBjAGsAYQBnAGUAOgA6AEkAcgBvAG4ATwBDAFIATABpAGMAZQBu
AGMAZQBLAGUAeQAAA6cAASNVAHMAZQByADoAOgBzAHQAcgBUAGUAeAB0AEYAaQBsAGUAABtVAHMA
ZQByADoAOgBzAHQAcgBMAG8AZwBzAAAfTwBLACAAcABvAHUAcgAgAGkAZABGAGkAbABlAD0AAClG
AGkAYwBoAGkAZQByACAAaQBuAHQAcgBvAHUAdgBhAGIAbABlACAAACVFAHIAcgBlAHUAcgAgAHMA
dQByACAAaQBkAEYAaQBsAGUAPQAAGXMAdAByAEkAZABGAGkAYwBoAGkAZQByAAAHIAAtACAAAXFT
AFQAXwA3ADAANQA2ADIAYgBkAGUAZABlADQANwA0AGUAOAA0ADkANgA2ADQAMgBiADcAYQA0AGQA
ZAAyADMANAAwADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAA
AADu/iRqpuVGkGf5PBu2Y+gABCABAQgDIAABBSABARERBCABAQ4FIAEBEVUGBwMODhI9BwADEmUO
Dg4DIAAOBCAAEmkEIAASbQUgARJxHAMgABwHAAQODg4ODgQAAQIOAgYODCACEoCFDhUSgIkBCAYg
AB0SgI0DAAAOBSACDg4OBCABARwFAAIODg4IAAESgJURgJkFIAASgJ0HIAIBDhKAnQi3elxWGTTg
iQiJhF3NgIDMkQiU4cMUElY8dQhfNmBI3ENomQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEU
BAAAEk0EAAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNzA1NjJiZGVkZTQ3NGU4NDk2
NjQyYjdhNGRkMjM0MDAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29y
ayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAKDMAAAAAAAAAAAAAQjMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ADQzAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAPlQLHgAAAQA+VAsePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA3ADAANQA2ADIAYgBkAGUAZABlADQANwA0AGUAOAA0ADkANgA2ADQAMgBiADcAYQA0
AGQAZAAyADMANAAwADAAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA2ADkAMQAuADIAMQA1ADYANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBlAGUAMwAyAGMANwBjADMAZgAxAGUAMAA0AGEAYQA1ADkAYgBmADkANQAwADkAYQA2ADIA
ZgBkADcAZAAxADgALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGUAZQAzADIAYwA3AGMAMwBmADEAZQAwADQAYQBhADUAOQBiAGYAOQA1ADAA
OQBhADYAMgBmAGQANwBkADEAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA3ADAANQA2ADIAYgBkAGUAZABlADQANwA0AGUAOAA0ADkANgA2ADQAMgBiADcA
YQA0AGQAZAAyADMANAAwADAAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANgA5ADEALgAyADEANQA2ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANgA5ADEALgAyADEANQA2ADYAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAVDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
                  <Breakpoint
                    Enabled="True"
                    File="ScriptMain.cs"
                    Line="100"
                    Column="13" />
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Pour chaque fichier\Sequence Container\Update InfoFichier"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1be4e1fa-fa67-481d-bf51-ebd0ec948c36}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update InfoFichier"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; Â© 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:LoggingOptions
                DTS:FilterKind="0" />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{77A05B32-6D0C-48A7-ACAA-1CCC4F4D3018}"
                  SQLTask:SqlStatementSource="UPDATE i&#xA;SET i.TexteDuFichierAvecIronOCR = ?&#xA;from InfoFichier i&#xA;where i.IdFichier = CAST(?&#xA; as INT)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::strTextFile"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="1"
                    SQLTask:DtsVariableName="User::strIdFichier"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Pour chaque fichier\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{b1ffcd20-22ff-4fdd-b161-cd4b3ae83ae6}"
              DTS:From="Package\Pour chaque fichier\Sequence Container\IronOCR"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Pour chaque fichier\Sequence Container\Update InfoFichier" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Pour chaque fichier.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{21E9D32F-86E7-4049-945B-251FCB29760C}"
          DTS:From="Package\Pour chaque fichier\Sequence Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Pour chaque fichier\Logs OK" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Pour chaque fichier.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{51D23014-410F-4E19-BC0F-BBCAED99482A}"
          DTS:From="Package\Pour chaque fichier\Sequence Container"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Pour chaque fichier\Logs KO"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{1EFDBB44-4E3F-4C4D-9459-5AC10F5C9C26}"
          DTS:ObjectName="{1EFDBB44-4E3F-4C4D-9459-5AC10F5C9C26}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::strPathFile" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{05722822-4DEE-4AA1-9DA0-843463A03A7D}"
          DTS:ObjectName="{05722822-4DEE-4AA1-9DA0-843463A03A7D}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::strIdFichier" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{259624A7-2EF5-4CFE-AF93-865FEB9EE299}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Pour chaque fichier" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="170,42"
          Id="Package\Execute SQL Task"
          TopLeft="552.666666666667,61.222222222223" />
        <NodeLayout
          Size="122,42"
          Id="Package\Pour chaque fichier\Logs KO"
          TopLeft="290.206349206349,376" />
        <NodeLayout
          Size="122,42"
          Id="Package\Pour chaque fichier\Logs OK"
          TopLeft="57.5714285714287,378.396825396825" />
        <NodeLayout
          Size="122,42"
          Id="Package\Pour chaque fichier\Sequence Container\IronOCR"
          TopLeft="92.4285714285714,83.2857142857143" />
        <NodeLayout
          Size="169,42"
          Id="Package\Pour chaque fichier\Sequence Container\Update InfoFichier"
          TopLeft="68.8888888888888,171.52380952381" />
        <EdgeLayout
          Id="Package\Pour chaque fichier\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="153.40873015873,125.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46.2380952380954"
              Start="0,0"
              End="0,38.7380952380954">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.7380952380954" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="305,253"
          Size="305,296"
          Id="Package\Pour chaque fichier\Sequence Container"
          TopLeft="84,23" />
        <EdgeLayout
          Id="Package\Pour chaque fichier.PrecedenceConstraints[Constraint 1]"
          TopLeft="187,319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-68.4285714285713,59.3968253968251"
              Start="0,0"
              End="-68.4285714285713,51.8968253968251">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.944708476998" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.944708476998"
                    Point2="0,23.944708476998"
                    Point3="-4,23.944708476998" />
                  <mssgle:LineSegment
                    End="-64.4285714285713,23.944708476998" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.4285714285713,23.944708476998"
                    Point2="-68.4285714285713,23.944708476998"
                    Point3="-68.4285714285713,27.944708476998" />
                  <mssgle:LineSegment
                    End="-68.4285714285713,51.8968253968251" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Pour chaque fichier.PrecedenceConstraints[Constraint 2]"
          TopLeft="286,319">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.206349206349,57"
              Start="0,0"
              End="65.206349206349,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9784735812133" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9784735812133"
                    Point2="0,22.9784735812133"
                    Point3="4,22.9784735812133" />
                  <mssgle:LineSegment
                    End="61.206349206349,22.9784735812133" />
                  <mssgle:CubicBezierSegment
                    Point1="61.206349206349,22.9784735812133"
                    Point2="65.206349206349,22.9784735812133"
                    Point3="65.206349206349,26.9784735812133" />
                  <mssgle:LineSegment
                    End="65.206349206349,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="17.3618269469245,27.9784735812133,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="460,475"
          Size="460,518"
          Id="Package\Pour chaque fichier"
          TopLeft="402.888888888889,193.047619047619" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="635.277777777778,103.222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,89.825396825396"
              Start="0,0"
              End="0,82.325396825396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.325396825396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>