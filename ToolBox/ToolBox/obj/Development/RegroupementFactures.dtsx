<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/28/2018 5:25:54 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SPVMDEVAPP33"
  DTS:CreatorName="LPDP\vbarski"
  DTS:DTSID="{1F2ECCA7-C94A-408F-96CF-E3DCB6143417}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1036"
  DTS:ObjectName="RegroupementFactures"
  DTS:PackageType="5"
  DTS:VersionBuild="188"
  DTS:VersionGUID="{23434510-6FB8-4171-8914-EEC891CF589C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InfosFichiers]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B1F8AEA3-F81E-4404-8C03-0EE8D39216BB}"
      DTS:ObjectName="InfosFichiers">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_InfosFichiers]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=InfosFichiers;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL Server]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
      DTS:ObjectName="SQL Server">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_SQLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=ToolBox;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SQL Server"
      DTS:CreationName="DTS.LogProviderSQLServer.3"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{05D8D9EA-891D-45EB-9A58-82CA0568323C}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{1BAB8028-31E1-45E8-A571-E45F4DCAF2D1}"
      DTS:ObjectName="AccuseReception">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{762794DF-1FB5-43FF-B1EA-99A669ADD59D}"
      DTS:ObjectName="Adresse">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8673F87C-C5BC-452C-AEFD-842125643529}"
      DTS:ObjectName="Bcc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B18A4BE4-E1B8-433D-A69B-514B421FF991}"
      DTS:ObjectName="Cc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D96A19EF-22C8-4A1B-A14A-F4BFABA1E842}"
      DTS:ObjectName="ChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2813F64E-9474-42BB-9433-18F58C8CF173}"
      DTS:ObjectName="ChaineDeParametres">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2F9F1BAC-1525-405E-B9D2-9B012D84174D}"
      DTS:ObjectName="ConnectionString_InfosFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=InfosFichiers;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DB2DB1B6-C962-4816-B0C2-C6FD0288E12C}"
      DTS:ObjectName="ConnectionString_SQLServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=ToolBox;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F5534A84-6C52-4E20-8A5F-58DDCF7740CA}"
      DTS:ObjectName="Corps">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{637B0B1E-BAB1-461F-B8FE-F2F133931988}"
      DTS:ObjectName="DossierCible">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\test\out</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{93D9D887-E76F-477F-AD1E-BBC7F0FBB247}"
      DTS:ObjectName="DossierSource">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\test\in</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5140D36D-8EAF-4624-B794-5DD1B6F6D514}"
      DTS:ObjectName="Extension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">pdf</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{84AA49F9-0AE2-46A2-839D-C1AC1B8800A2}"
      DTS:ObjectName="Fichier">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{36394538-11BD-408F-B3FD-AB6BB10F96F6}"
      DTS:ObjectName="From">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{55BD2735-7B71-400C-93E6-C93BF86A3ED5}"
      DTS:ObjectName="FtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{14844B12-730B-4163-8781-4EAA89798FB2}"
      DTS:ObjectName="idAction">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{3C9FB30D-6A5A-4F97-9565-B7756132EF86}"
      DTS:ObjectName="idEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B3F6E8BA-14A4-461E-964A-494BFF2A5B86}"
      DTS:ObjectName="idTypeEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9684783B-6961-4005-933B-BA218F5B524E}"
      DTS:ObjectName="Login">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{0BCAE7A3-ED22-4760-87E8-CBAFD8521CF7}"
      DTS:ObjectName="Longueur">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{55B00252-6E77-421D-93AA-1534E2D07869}"
      DTS:ObjectName="ModeReceptionFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F9DF5467-1247-4F21-A045-07684861036B}"
      DTS:ObjectName="NomBDD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CEA7E6AB-4E89-4FBA-AF2D-72B8DEE850E4}"
      DTS:ObjectName="NomColonneRetour">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{93737160-DB5B-451F-8AFD-3F3F3017EE99}"
      DTS:ObjectName="NomInstance">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3D2EC62B-E0B6-44FB-8FB1-38A5D173870C}"
      DTS:ObjectName="NomProcedureStockee">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{EEA98D9D-D1EE-4276-816D-4E9F4C6BFA95}"
      DTS:ObjectName="Port">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{FC628873-19B8-4CED-9A1F-40C5B6A49266}"
      DTS:ObjectName="Position">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FAE4834E-EC80-458C-82DF-ADDCC5141AC0}"
      DTS:ObjectName="Pwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4EF743A2-EED8-4C0A-BDB3-A58DCA67392A}"
      DTS:ObjectName="RenommerChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{12088D03-2A0C-4D47-B2A1-C283C4A8F252}"
      DTS:ObjectName="RenommerChaineRemplacement">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D235A15F-9CD1-4B71-B5DD-68DD4FA36EC0}"
      DTS:ObjectName="Server">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B74FDB7D-A58D-4672-AA02-BB811AC2E662}"
      DTS:ObjectName="SmtpLogin">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F546168C-B605-4070-A81E-337265DF25E7}"
      DTS:ObjectName="SmtpPwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{FA608FDA-E925-460E-A453-112E575D196F}"
      DTS:ObjectName="SmtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B038F1FA-A63F-4D23-8163-27E58447A068}"
      DTS:ObjectName="Sujet">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C6A57123-65CB-4679-AFC4-21F47644EAE9}"
      DTS:ObjectName="To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{05D8D9EA-891D-45EB-9A58-82CA0568323C}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{650D9BEF-07D3-415E-B035-78ED5392FA97}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Log"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{BBAAF828-D9BC-4AAD-A460-EED20683BA91}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Log.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{3F964104-3624-4644-822D-1FA209C734C4}"
              DTS:EventID="328363780"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{AA08147C-3855-4B41-8D26-8CB098405023}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables />
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
              SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,1,NULL,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::idAction"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::idTypeEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::idEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Regroupement des Factures"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{753573EB-BB09-42E3-9ED7-83A654CDF14C}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Regroupement des Factures"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\Regroupement des Factures.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{A40AEE54-F572-40B0-820E-23F744375FF1}"
              DTS:EventID="123319352"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{38AE1251-24B3-4E5D-B68B-9B9D08505EAA}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Regroupement des Factures.EventHandlers[OnError]\Log"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{EB6FD488-C0F0-469D-BBDB-14EFA9EF8342}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Log"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
                      SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,0,?,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="$Package::idAction"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="$Package::idTypeEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="$Package::idEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="System::ErrorDescription"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_672906e1afbb4cf690c35b9a74d76926"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="$Package::DossierCible,$Package::DossierSource,$Package::Extension">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c3617329c5984393ba9c877ca15d8c60.Properties.Settings.get_Default():ST_c3617329c5984393ba9c877ca15d8c60.Properties.Sett" +
    "ings")]

namespace ST_c3617329c5984393ba9c877ca15d8c60.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Collections.Generic;
using PdfSharp.Pdf;
using PdfSharp.Pdf.IO;
#endregion

namespace ST_c3617329c5984393ba9c877ca15d8c60
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>



        public void Main()
        {
            // TODO: Add your code here



            DirectoryInfo dir = new DirectoryInfo(Dts.Variables["$Package::DossierSource"].Value.ToString());
            FileInfo[] fichiersASupprimer = dir.GetFiles("*." + Dts.Variables["$Package::Extension"].Value.ToString());

            // Suppression des fichiers non factures
            foreach (FileInfo fichier in fichiersASupprimer)
            {
                if (!Facture.IsFacture(fichier.FullName.ToString()))
                {
                    File.Delete(fichier.FullName.ToString());
                }
            }


            while (dir.GetFiles("*." + Dts.Variables["$Package::Extension"].Value.ToString()).Length > 0)
            {
                FileInfo[] fichiers = dir.GetFiles("*." + Dts.Variables["$Package::Extension"].Value.ToString());
                Array.Sort(fichiers, (x, y) => StringComparer.OrdinalIgnoreCase.Compare(x.Name, y.Name));

                Facture f0 = new Facture(fichiers[0].FullName, Dts.Variables["$Package::DossierCible"].Value.ToString());


                for (int i = 1; i < fichiers.Length; i++)
                {
                    Facture fx = new Facture(fichiers[i].FullName, Dts.Variables["$Package::DossierCible"].Value.ToString());

                    // si doublon alors on ne merge pas et on supprime le doublon
                    if (fx.IsDoublon(f0))
                    {
                        File.Delete(fx.CheminFichierSource());
                    }

                    // si facture Equals alors on merge
                    else if (fx.Equals(f0))
                    {
                        string NewNomFichier = f0.NomClient + "_" + f0.DateFacture + "_Facture_" + f0.CodeSociete + "_" + f0.NumFacture + "-" + fx.NumFacture;

                        // si nom < 260 caractère on merge
                        if (Path.Combine(f0.RepertoireFichier, NewNomFichier + f0.ExtensionFichier).Length < 260)
                        {
                            Facture fnew = MergePDF(f0, fx);
                            File.Delete(f0.CheminFichierSource());
                            File.Delete(fx.CheminFichierSource());
                            f0 = fnew;
                        }
                        // sinon on ne merge pas
                        else
                        {
                            // archivage
                            if (File.Exists(f0.CheminFichierDestination()))
                            {
                                File.Delete(f0.CheminFichierDestination());
                            }

                            if (!Directory.Exists(Path.Combine(Path.Combine(Path.Combine(f0.RepertoireDestination, f0.NomClient), f0.Annee()), f0.Mois())))
                            {
                                Directory.CreateDirectory(Path.Combine(Path.Combine(Path.Combine(f0.RepertoireDestination, f0.NomClient), f0.Annee()), f0.Mois()));
                            }

                            File.Move(f0.CheminFichierSource(), f0.CheminFichierDestination());

                            NewNomFichier = fx.NomClient + "_" + fx.DateFacture + "_Facture_" + fx.CodeSociete + "_" + fx.NumFacture;
                            File.Move(fx.CheminFichierSource(), Path.Combine(fx.RepertoireFichier, NewNomFichier + fx.ExtensionFichier));
                            f0 = fx;
                        }
                    }

                }


                // archivage
                if (File.Exists(f0.CheminFichierDestination()))
                {
                    File.Delete(f0.CheminFichierDestination());
                }

                if (!Directory.Exists(Path.Combine(Path.Combine(Path.Combine(f0.RepertoireDestination, f0.NomClient), f0.Annee()), f0.Mois())))
                {
                    Directory.CreateDirectory(Path.Combine(Path.Combine(Path.Combine(f0.RepertoireDestination, f0.NomClient), f0.Annee()), f0.Mois()));
                }

                string d = f0.CheminFichierSource();
                string e = f0.CheminFichierDestination();

                File.Move(f0.CheminFichierSource(), f0.CheminFichierDestination());
            }





            Dts.TaskResult = (int)ScriptResults.Success;
        }


        public Facture MergePDF(Facture f1, Facture f2)
        {

            PdfDocument outputDocument = new PdfDocument();

            PdfDocument inputDocument1 = PdfReader.Open(Path.Combine(f1.RepertoireFichier, f1.NomFichier + f1.ExtensionFichier), PdfDocumentOpenMode.Import);
            PdfDocument inputDocument2 = PdfReader.Open(Path.Combine(f2.RepertoireFichier, f2.NomFichier + f2.ExtensionFichier), PdfDocumentOpenMode.Import);


            // Iterate pages facture 1
            int count = inputDocument1.PageCount;

            for (int idx = 0; idx < count; idx++)
            {
                // Get the page from the external document...
                PdfPage page = inputDocument1.Pages[idx];
                // ...and add them twice to the output document.
                outputDocument.AddPage(page);
            }

            // Iterate pages facture 2
            count = inputDocument2.PageCount;

            for (int idx = 0; idx < count; idx++)
            {
                // Get the page from the external document...
                PdfPage page = inputDocument2.Pages[idx];
                // ...and add them twice to the output document.
                outputDocument.AddPage(page);
            }

            // creer un nouveau PDF
            string NewNomFichier = f1.NomClient + "_" + f1.DateFacture + "_Facture_" + f1.CodeSociete + "_" + f1.MoisAnnee + "_" + f1.NumFacture + "-" + f2.NumFacture;
            try
            {
                outputDocument.Save(Path.Combine(f1.RepertoireFichier, NewNomFichier + f1.ExtensionFichier));
            }
            catch (Exception e)
            {

            }
            finally
            {
                outputDocument.Dispose();
            }
            return new Facture(f1.RepertoireFichier, f1.RepertoireDestination, NewNomFichier, f1.ExtensionFichier, f1.NomClient, f1.MoisAnnee, f1.NumFacture + "-" + f2.NumFacture, f1.NumFactureComplet + "-" + f2.NumFactureComplet, f1.DateFacture, f1.CodeSociete);


        }



        public class Facture
        {
            string _repertoireFichier;
            string _repertoireDestination;
            string _nomFichier;
            string _extensionFichier;
            string _nomClient;
            string _moisAnnee;
            string _dateFacture;
            string _numFacture;
            string _numFactureComplet;
            string _codeSociete;


            public string RepertoireFichier
            {
                get
                {
                    return _repertoireFichier;
                }
            }

            public string RepertoireDestination
            {
                get
                {
                    return _repertoireDestination;
                }
            }

            public string NomFichier
            {
                get
                {
                    return _nomFichier;
                }
                set
                {
                    _nomFichier = value;
                }
            }

            public string ExtensionFichier
            {
                get
                {
                    return _extensionFichier;
                }
            }

            public string NomClient
            {
                get
                {
                    return _nomClient;
                }
            }

            public string MoisAnnee
            {
                get
                {
                    return _moisAnnee;
                }
            }

            public string DateFacture
            {
                get
                {
                    return _dateFacture;
                }
            }

            public string NumFacture
            {
                get
                {
                    return _numFacture;
                }
                set
                {
                    _numFacture = value;
                    this.RenommeNomFichier();
                }

            }

            public string NumFactureComplet
            {
                get
                {
                    return _numFactureComplet;
                }
                set
                {
                    _numFactureComplet = value;
                }
            }

            public string CodeSociete
            {
                get
                {
                    return _codeSociete;
                }
            }

            public Facture()
            {
                _repertoireFichier = "";
                _repertoireDestination = "";
                _nomFichier = "";
                _extensionFichier = "";
                _nomClient = "";
                _moisAnnee = "";
                _numFacture = null;
                _numFactureComplet = "";
                _dateFacture = "";
                _codeSociete = "";
            }

            public Facture(string RepertoireFichier, string RepertoireDestination, string NomFichier, string ExtensionFichier, string NomClient, string MoisAnnee, string NumFacture, string NumFactureComplet, string DateFacture, string CodeSociete)
            {
                _repertoireFichier = RepertoireFichier;
                _repertoireDestination = RepertoireDestination;
                _nomFichier = NomFichier;
                _extensionFichier = ExtensionFichier;
                _nomClient = NomClient;
                _moisAnnee = MoisAnnee;
                _numFacture = NumFacture;
                _numFactureComplet = NumFactureComplet;
                _dateFacture = DateFacture;
                _codeSociete = CodeSociete;

            }

            public Facture(string CheminFichier, string RepertoireDestination)
            {
                string[] s = Path.GetFileNameWithoutExtension(CheminFichier).Split('_');

                _repertoireFichier = Path.GetDirectoryName(CheminFichier);
                _repertoireDestination = RepertoireDestination;
                _nomFichier = Path.GetFileNameWithoutExtension(CheminFichier);
                _extensionFichier = Path.GetExtension(CheminFichier);
                _nomClient = s[0].ToString();
                _moisAnnee = s[2].ToString().Substring(0, 4);
                _numFacture = (Int32.Parse(s[2].ToString().Substring(4, s[2].ToString().Length - 4))).ToString();
                _numFactureComplet = s[2].ToString();
                _dateFacture = s[s.Length - 2].ToString();
                _codeSociete = s[5].ToString();

            }


            public string CheminFichierSource()
            {
                return Path.Combine(_repertoireFichier, _nomFichier + _extensionFichier);
            }

            public string CheminFichierDestination()
            {
                return Path.Combine(Path.Combine(Path.Combine(Path.Combine(_repertoireDestination, _nomClient), this.Annee()), this.Mois()), _nomClient + "_" + _dateFacture + "_Facture_" + _codeSociete + "_" + _moisAnnee + "_" + _numFacture + _extensionFichier);
            }


            public static bool IsFacture(string CheminFichier)
            {
                FileInfo fi = new FileInfo(CheminFichier);

                if (!fi.Extension.Equals(".pdf"))
                    return false;

                if (!fi.Name.Contains("_"))
                    return false;

                if (Path.GetFileNameWithoutExtension(CheminFichier).Split('_').Length != 8)
                    return false;

                if (!fi.Name.Contains("CGV"))
                    return false;

                if (fi.Name.Contains("Copie"))
                    return false;

                return true;
            }


            public void SupprimeFacture()
            {
                File.Delete(this.CheminFichierSource());
            }

            public string Mois()
            {
                return _dateFacture.Substring(3, 2);
            }

            public string Annee()
            {
                return _dateFacture.Substring(6, 4);
            }

            public bool Equals(Facture fa)
            {
                if (this.NomClient.Equals(fa.NomClient) && this.DateFacture.Equals(fa.DateFacture) && this.CodeSociete.Equals(fa.CodeSociete))
                    return true;

                else
                    return false;
            }

            public bool IsDoublon(Facture fa)
            {
                if (this.NomClient.Equals(fa.NomClient) && this.DateFacture.Equals(fa.DateFacture) && this.CodeSociete.Equals(fa.CodeSociete) && fa.NumFactureComplet.Contains(this.NumFactureComplet))
                    return true;
                else
                    return false;
            }

            private void RenommeNomFichier()
            {
                _nomFichier = this._nomClient + "_" + this._dateFacture + "_Facture_" + this._codeSociete + "_" + this._moisAnnee + "_" + this._numFacture;
            }

            public bool IsCheminFichierOK()
            {
                if (Path.Combine(_repertoireFichier, _nomFichier + _extensionFichier).Length > 260)
                    return false;

                else
                    return true;

            }
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="ST_672906e1afbb4cf690c35b9a74d76926.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{C169602C-9CF6-4FB4-AC0A-B40AB72E9B75}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_c3617329c5984393ba9c877ca15d8c60</RootNamespace><AssemblyName>ST_672906e1afbb4cf690c35b9a74d76926</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile /></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><ItemGroup><Reference Include="PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>C:\DLL\PdfSharp.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon><DesignTime>True</DesignTime></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><DesignTimeSharedInput>True</DesignTimeSharedInput></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c3617329c5984393ba9c877ca15d8c60</msb:CodeName>
		<msb:DisplayName>ST_c3617329c5984393ba9c877ca15d8c60</msb:DisplayName>
		<msb:ProjectId>{CB83F5B8-CC54-44ED-9978-D2F1F052FE51}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_672906e1afbb4cf690c35b9a74d76926.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c3617329c5984393ba9c877ca15d8c60")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c3617329c5984393ba9c877ca15d8c60")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c3617329c5984393ba9c877ca15d8c60.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c3617329c5984393ba9c877ca15d8c60.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c3617329c5984393ba9c877ca15d8c60.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c3617329c5984393ba9c877ca15d8c60.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c3617329c5984393ba9c877ca15d8c60.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_672906e1afbb4cf690c35b9a74d76926.dll">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
FppvHQAACn0JAAAEAgYYmm8dAAAKFhpvOwAACn0KAAAEAgYYmm8dAAAKGgYYmm8dAAAKbycAAAoa
WW87AAAKKDwAAAoMEgIoPQAACn0MAAAEAgYYmm8dAAAKfQ0AAAQCBgaOaRhZmm8dAAAKfQsAAAQC
Bhuabx0AAAp9DgAABCp2AnsFAAAEAnsHAAAEAnsIAAAEKB8AAAooJgAACioAABMwBACSAAAABQAA
EQJ7BgAABAJ7CQAABCgmAAAKAighAAAGKCYAAAoCKCAAAAYoJgAACh8KjSMAAAEKBhYCewkAAASi
Bhdy/wAAcKIGGAJ7CwAABKIGGXIDAQBwogYaAnsOAAAEogYbcv8AAHCiBhwCewoAAASiBh1y/wAA
cKIGHgJ7DAAABKIGHwkCewgAAASiBiglAAAKKCYAAAoqAAATMAQAeAAAAAYAABECcz4AAAoKBm8/
AAAKch0BAHBvQAAACi0CFioGbxcAAApy/wAAcG9BAAAKLQIWKgIoNwAACheNLgAAAQsHFh9fnQdv
OAAACo5pHi4CFioGbxcAAApyJwEAcG9BAAAKLQIWKgZvFwAACnIvAQBwb0EAAAosAhYqFyoyAigc
AAAGKCIAAAoqOgJ7CwAABBkYbzsAAAoqOgJ7CwAABBwabzsAAAoq9gIoEQAABgNvEQAABm9AAAAK
LCgCKBMAAAYDbxMAAAZvQAAACiwVAigYAAAGA28YAAAGb0AAAAosAhcqFioAAAADMAIAUAAAAAAA
AAACKBEAAAYDbxEAAAZvQAAACiw7AigTAAAGA28TAAAGb0AAAAosKAIoGAAABgNvGAAABm9AAAAK
LBUDbxYAAAYCKBYAAAZvQQAACiwCFyoWKhMwBABiAAAABQAAEQIfCY0jAAABCgYWAnsJAAAEogYX
cv8AAHCiBhgCewsAAASiBhlyAwEAcKIGGgJ7DgAABKIGG3L/AABwogYcAnsKAAAEogYdcv8AAHCi
Bh4CewwAAASiBiglAAAKfQcAAAQqsgJ7BQAABAJ7BwAABAJ7CAAABCgfAAAKKCYAAApvJwAACiAE
AQAAMQIWKhcqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRl
ciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlU
b2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0
AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwA
AAAsCAAAI34AAJgIAADACgAAI1N0cmluZ3MAAAAAWBMAADwBAAAjVVMAlBQAABAAAAAjR1VJRAAA
AKQUAACMAgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPolMwAWAAABAAAALwAAAAYAAAARAAAA
JQAAABcAAABBAAAAAgAAABEAAAAGAAAAAwAAAA0AAAARAAAAAQAAAAEAAAAFAAAAAQAAAAIAAAAB
AAAAAAAKAAEAAAAAAAYAyQDCAAoA5QDQAA4ARQEcAQYAYQHCAAYAdwFmAQYAqAGTAQYAEwX5BAYA
PgUsBQYAVQUsBQYAcgUsBQYAkQUsBQYAqgUsBQYAwwUsBQYA3gUsBQYA+QUsBQYAEgYsBQYASwYr
BgYAawYrBgYAwAatBgYA3QbCAAYA4gbCAAYABgcsBQoAMgccBwoASwccBwYAYAcrBg4AggccAQYA
rgekBwYAxgfCAAYA+gfCAAYAHwikBw4APwgcARIAmAh4CBIAsAh4CAYA1QikBwYA4wjCAAYABwmk
BwYAEwnCAAYAHgmkBwYAPQmkBxYAgQl0CRYAnQmNCRYApwmNCRYAzgl0CRYA4Ql0CQYA/gnCAAYA
JArCAAYAVwrCAAAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0
AH8ADQAEAAgAAgAQAKMAAAAFAAUADAADAQAAqwAAABEADwAmABEAhwETABEAtAEXABEA/gE5ABEA
0wfMAAEAMAJQAAEAQwJQAAEAWgJQAAEAZgJQAAEAeAJQAAEAgwJQAAEAjgJQAAEAmwJQAAEApwJQ
AAEAugJQAAYGxASDAFaAzASGAFaA1ASGAFAgAAAAAIMYxAEbAAEAWCAAAAAAkwjKAR8AAQCRIAAA
AACTCN4BJAABAJggAAAAAJMI6gEpAAEAoCAAAAAAlggOAj0AAgCzIAAAAACGGMQBGwACAKcgAAAA
AJEYewfAAAIA1CAAAAAAhgAiAhsAAgAgJQAAAACGACcCRwACAPwmAAAAAIYYxAEbAAQAuyAAAAAA
kQC3B8QABAAEJwAAAACGCMcCUwAGAAwnAAAAAIYI3QJTAAYAFCcAAAAAhgj3AlMABgAcJwAAAACG
CAYDVwAGACUnAAAAAIYIFQNTAAcALScAAAAAhggqA1MABwA1JwAAAACGCDgDUwAHAD0nAAAAAIYI
RgNTAAcARScAAAAAhghWA1MABwBNJwAAAACGCGUDVwAHAFwnAAAAAIYIdANTAAgAZCcAAAAAhgiK
A1cACABtJwAAAACGCKADUwAJAHgnAAAAAIYYxAEbAAkA+CcAAAAAhhjEAVwACQBYKAAAAACGGMQB
agATADApAAAAAIYAsANTABUAUCkAAAAAhgDEA1MAFQDwKQAAAACWAN0DcAAVAHQqAAAAAIYA5wMb
ABYAgSoAAAAAhgD3A1MAFgCQKgAAAACGAPwDUwAWAJ8qAAAAAIYAAgR1ABYA4CoAAAAAhgAJBHUA
FwA8KwAAAACBABMEGwAYAKorAAAAAIYAJQR7ABgAAAABANwEAAABAOIEAAACAOUEAAABAMIHAAAC
AMQHAAABANwEAAABANwEAAABANwEAAABADcEAAACAEkEAAADAF8EAAAEAGoEAAAFAHsEAAAGAIUE
AAAHAJsEAAAIAKYEAAAJAI8EAAAKALgEAAABAOgEAAACAEkEAAABAOgEAAABAPYEAAABAPYEOQDE
AVcAQQDEAVcASQDEAVcAUQDEAVcAWQDEAVcAYQDEAVcAaQDEAVcAcQDEAVcAeQDEAVcAgQDEAVcA
iQDEAZQAkQDEARsAmQDEARsACQDEARsAoQD0BpkAoQAPB6AAKQDEAaUAuQDEAbEAyQDEARsAEQDE
ARsA0QDEARsA6QAJCNQA8QAuCFMA6QA3CNkAGQBRCN8A+QCiCOQAAQG5COoACQHCCPEACQDMCFMA
EQHEAVcAGQHqCPUAEQHxCPsA8QD6CFMAIQEMCQIBDADEAQ4BKQEZCRQBGQHqCCcBMQEjCfUAGQEr
CS0BIQE2CXAAOQE2CXAAOQFHCTEBIQFXCTgB+QBcCZQAQQHEARsASQG7CWUBQQHACS0BQQHXCW8B
WQG5CHUBQQHpCXwBQQHxCVcAQQH2CRsAGQHqCIUBGQDEARsAMQEICqQBGQEpCqkBMQEvCqQBMQFA
CqQBGQFNCrABeQFdCrYBeQHMCFMA2QDEAVcA8QBjClMAGQECBMgBGQFxCsgBCABAAIoACABEAI8A
KQCTALcALgATAB4CLgAbAEcCLgBjAG0CLgALANQBLgAzAB4CLgBbAGQCLgArAEcCLgAjAEcCLgA7
AE0CLgBDAEcCQwBrAI8ASQCTALcAYQCbAI8AgQCbAI8AgwCrAI8AYAGbAI8ArAA+AYwBuwHDAc0B
AgABAAMAAwAFAAQAAAB3AS8AAAD2ATQAAAAaAkIAAAA3BH8AAABJBH8AAABfBH8AAABqBH8AAAB7
BH8AAACFBH8AAACPBH8AAACbBH8AAACmBH8AAAC4BH8AAgACAAMAAgADAAUAAQAEAAUAAgAFAAcA
AgAMAAkAAgANAAsAAgAOAA0AAQAPAA0AAgAQAA8AAgARABEAAgASABMAAgATABUAAgAUABcAAQAV
ABcAAgAWABkAAQAXABkAAgAYABsABwEEgAAAAQAAACkaIXUAAAAAAACJBgAABAAAAAAAAAAAAAAA
AQC5AAAAAAAEAAAAAAAAAAAAAAABAMIAAAAAAAsAAAAAAAAAAAAAAAoA/QAAAAAACwAAAAAAAAAA
AAAACgBZCAAAAAABACAAMAoAAAAAAABcAWsJAAAAAAAAAAABAAAAegoAAAUABAAGAAQASQAiAQAA
ADxNb2R1bGU+AFNUXzY3MjkwNmUxYWZiYjRjZjY5MGMzNWI5YTc0ZDc2OTI2LmRsbABSZXNvdXJj
ZXMAU1RfYzM2MTczMjljNTk4NDM5M2JhOWM4NzdjYTE1ZDhjNjAuUHJvcGVydGllcwBTZXR0aW5n
cwBTY3JpcHRNYWluAFNUX2MzNjE3MzI5YzU5ODQzOTNiYTljODc3Y2ExNWQ4YzYwAEZhY3R1cmUA
U2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9u
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNl
TWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3Rv
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBNZXJnZVBERgBfcmVwZXJ0b2ly
ZUZpY2hpZXIAX3JlcGVydG9pcmVEZXN0aW5hdGlvbgBfbm9tRmljaGllcgBfZXh0ZW5zaW9uRmlj
aGllcgBfbm9tQ2xpZW50AF9tb2lzQW5uZWUAX2RhdGVGYWN0dXJlAF9udW1GYWN0dXJlAF9udW1G
YWN0dXJlQ29tcGxldABfY29kZVNvY2lldGUAZ2V0X1JlcGVydG9pcmVGaWNoaWVyAGdldF9SZXBl
cnRvaXJlRGVzdGluYXRpb24AZ2V0X05vbUZpY2hpZXIAc2V0X05vbUZpY2hpZXIAZ2V0X0V4dGVu
c2lvbkZpY2hpZXIAZ2V0X05vbUNsaWVudABnZXRfTW9pc0FubmVlAGdldF9EYXRlRmFjdHVyZQBn
ZXRfTnVtRmFjdHVyZQBzZXRfTnVtRmFjdHVyZQBnZXRfTnVtRmFjdHVyZUNvbXBsZXQAc2V0X051
bUZhY3R1cmVDb21wbGV0AGdldF9Db2RlU29jaWV0ZQBDaGVtaW5GaWNoaWVyU291cmNlAENoZW1p
bkZpY2hpZXJEZXN0aW5hdGlvbgBJc0ZhY3R1cmUAU3VwcHJpbWVGYWN0dXJlAE1vaXMAQW5uZWUA
RXF1YWxzAElzRG91YmxvbgBSZW5vbW1lTm9tRmljaGllcgBJc0NoZW1pbkZpY2hpZXJPSwBSZXBl
cnRvaXJlRmljaGllcgBSZXBlcnRvaXJlRGVzdGluYXRpb24ATm9tRmljaGllcgBFeHRlbnNpb25G
aWNoaWVyAE5vbUNsaWVudABNb2lzQW5uZWUARGF0ZUZhY3R1cmUATnVtRmFjdHVyZQBOdW1GYWN0
dXJlQ29tcGxldABDb2RlU29jaWV0ZQB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBmMQBm
MgBDaGVtaW5GaWNoaWVyAGZhAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1
bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF82NzI5MDZlMWFmYmI0Y2Y2OTBjMzViOWE3NGQ3NjkyNgBT
eXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0
ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0Vu
dHJ5UG9pbnRBdHRyaWJ1dGUAU3lzdGVtLklPAEZpbGVJbmZvADxNYWluPmJfXzAAeAB5AENvbXBh
cmlzb25gMQBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhvZERlbGVnYXRlMQBTdHJpbmdDb21w
YXJlcgBnZXRfT3JkaW5hbElnbm9yZUNhc2UARmlsZVN5c3RlbUluZm8AZ2V0X05hbWUAQ29tcGFy
ZQBTY3JpcHRPYmplY3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERU
UwBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVz
AFZhcmlhYmxlAGdldF9JdGVtAGdldF9WYWx1ZQBUb1N0cmluZwBEaXJlY3RvcnlJbmZvAFN0cmlu
ZwBDb25jYXQAR2V0RmlsZXMAZ2V0X0Z1bGxOYW1lAEZpbGUARGVsZXRlAEFycmF5AFNvcnQAUGF0
aABDb21iaW5lAGdldF9MZW5ndGgARXhpc3RzAERpcmVjdG9yeQBDcmVhdGVEaXJlY3RvcnkATW92
ZQBzZXRfVGFza1Jlc3VsdABQZGZTaGFycABQZGZTaGFycC5QZGYAUGRmRG9jdW1lbnQAUGRmU2hh
cnAuUGRmLklPAFBkZlJlYWRlcgBQZGZEb2N1bWVudE9wZW5Nb2RlAE9wZW4AZ2V0X1BhZ2VDb3Vu
dABQZGZQYWdlcwBnZXRfUGFnZXMAUGRmUGFnZQBBZGRQYWdlAFNhdmUARGlzcG9zZQBFeGNlcHRp
b24AR2V0RmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uAENoYXIAU3BsaXQAR2V0RGlyZWN0b3J5TmFt
ZQBHZXRFeHRlbnNpb24AU3Vic3RyaW5nAEludDMyAFBhcnNlAGdldF9FeHRlbnNpb24AQ29udGFp
bnMAU1RfYzM2MTczMjljNTk4NDM5M2JhOWM4NzdjYTE1ZDhjNjAuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYwAzADYAMQA3ADMAMgA5AGMANQA5ADgANAAzADkAMwBi
AGEAOQBjADgANwA3AGMAYQAxADUAZAA4AGMANgAwAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAvJABQAGEAYwBrAGEAZwBlADoAOgBEAG8AcwBzAGkAZQByAFMAbwB1
AHIAYwBlAAAFKgAuAAAnJABQAGEAYwBrAGEAZwBlADoAOgBFAHgAdABlAG4AcwBpAG8AbgAALSQA
UABhAGMAawBhAGcAZQA6ADoARABvAHMAcwBpAGUAcgBDAGkAYgBsAGUAAANfAAATXwBGAGEAYwB0
AHUAcgBlAF8AAAMtAAEBAAkuAHAAZABmAAAHQwBHAFYAAAtDAG8AcABpAGUAAACxM5hv3fnWQYJC
COYA9FqtAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAAS
FQQIABIZAwYSDAQAABIMBAgAEgwIIAISFBIUEhQCBg4DIAAOBCABAQ4NIAoBDg4ODg4ODg4ODgUg
AgEODgQAAQIOBSABAhIUAyAAAgMoAA4CBggDBhEYBAAAAAAEAQAAAAQgAQEIBgABElERVQQgABJZ
BiACAQ4SWQQHARIVBSABARFhCAEAAgAAAAAAAwAAAQcAAggSbRJtBwYVEnEBEm0EAAASdQUgAggO
DgQgABJ9BSAAEoCBBiABEoCFHAMgABwFAAIODg4GIAEdEm0OBAABAQ4GFRJxARJtBSACARwYDRAB
AgEdHgAVEnEBHgAECgESbQUAAQ4dDgMgAAgGAAESgIkOBQACAQ4OHQcNEoCJHRJtEm0dEm0SFAgS
FA4SFB0SbQgdDh0OCPlGFaoEJPnrCQACEoChDhGAqQUgABKArQYgARKAsQgIIAESgLESgLEGAAMO
Dg4OFwcKEoChEoChEoChCAgSgLEIEoCxDh0OBAABDg4GIAEdDh0DBSACDggIBAABCA4HBwMdDh0D
CAQHAR0OBCABAg4GBwISbR0DSQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUoAQAjU1RfYzM2MTczMjljNTk4NDM5
M2JhOWM4NzdjYTE1ZDhjNjAAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOAAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAehDAAAAAAAAAAAAAP5DAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADwQwAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACw
AwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAIXUpGgAAAQAhdSkaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
EAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAw
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfAGMAMwA2ADEA
NwAzADIAOQBjADUAOQA4ADQAMwA5ADMAYgBhADkAYwA4ADcANwBjAGEAMQA1AGQAOABjADYAMAAA
AEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADYAOQA3AC4AMgA5ADkA
OAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADYANwAyADkAMAA2
AGUAMQBhAGYAYgBiADQAYwBmADYAOQAwAGMAMwA1AGIAOQBhADcANABkADcANgA5ADIANgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADYANwAyADkAMAA2AGUAMQBhAGYAYgBiADQAYwBmADYAOQAwAGMAMwA1AGIAOQBh
ADcANABkADcANgA5ADIANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBjADMANgAxADcAMwAyADkAYwA1ADkAOAA0ADMAOQAzAGIAYQA5AGMAOAA3ADcAYwBh
ADEANQBkADgAYwA2ADAAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYANgA5ADcALgAyADkAOQA4ADUAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYANgA5ADcALgAyADkAOQA4ADUAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAEDQAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F42E3EC6-7BEF-489F-8CAA-3B6667DDA20C}"
          DTS:From="Package\Sequence Container\Regroupement des Factures"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Log" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\Log"
          TopLeft="113,161" />
        <NodeLayout
          Size="211,42"
          Id="Package\Sequence Container\Regroupement des Factures"
          TopLeft="60,60" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="163.25,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="328,259"
          Size="328,302"
          Id="Package\Sequence Container"
          TopLeft="169,51" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\Regroupement des Factures.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\Regroupement des Factures.EventHandlers[OnError]\Log"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>