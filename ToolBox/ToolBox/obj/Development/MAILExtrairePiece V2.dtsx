<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2017 2:30:29 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SPVMDEVAPP33"
  DTS:CreatorName="LPDP\vbarski"
  DTS:DTSID="{3FF4FDEC-B3FC-4529-90EE-5D04D17C435C}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="1036"
  DTS:ObjectName="MAILExtrairePiece V2"
  DTS:PackageType="5"
  DTS:VersionBuild="611"
  DTS:VersionGUID="{958330F3-A9E1-4BDD-A4D7-73F966984B16}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InfosFichiers]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{FA34121C-FB37-437C-AD41-3A466BB34196}"
      DTS:ObjectName="InfosFichiers">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_InfosFichiers]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SPVMPRDAPP12\INTERFACES_EXT;Initial Catalog=InfosFichiers2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL Server]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9FCBF8D3-EF16-4F3B-8921-EEF4EC6317A2}"
      DTS:ObjectName="SQL Server">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_SQLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SPVMPRDAPP12\INTERFACES;Initial Catalog=TraitementsInternes;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SQL Server"
      DTS:CreationName="DTS.LogProviderSQLServer.3"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{CE212061-247E-4795-B9E6-FCDD26AE50A6}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{CEF428D7-5D6D-4685-9CAB-CDA52D4E2554}"
      DTS:ObjectName="AccuseReception">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{62615314-C93D-482D-A404-D4132D1412E0}"
      DTS:ObjectName="Adresse">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9112FB09-C543-40D6-A3CB-3AD06618E16E}"
      DTS:ObjectName="Bcc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8A6F4DFF-9D4E-4F6B-BE0A-9B1312273161}"
      DTS:ObjectName="Cc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4D103F6E-8504-4873-B036-822A8342CF2F}"
      DTS:ObjectName="ChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0F6A26DE-65F9-4A41-A597-1F029CAA3299}"
      DTS:ObjectName="ChaineDeParametres">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3668148F-C9E0-4297-A2FF-9D795E6166CF}"
      DTS:ObjectName="ConnectionString_InfosFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMPRDAPP12\INTERFACES_EXT;Initial Catalog=InfosFichiers2;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B86EFA89-4168-4D2F-9636-A96A44B2C67E}"
      DTS:ObjectName="ConnectionString_SQLServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMPRDAPP12\INTERFACES;Initial Catalog=TraitementsInternes;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B7027E17-F306-46B4-82F8-57C8A4D208EB}"
      DTS:ObjectName="Corps">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B9824B4C-FA45-417C-AD25-811AFBD6C4D6}"
      DTS:ObjectName="DossierCible">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Test trait√©|C:\test\out1|C:\test\out2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CE368E19-6C3B-4480-BCFF-D357134E1FAF}"
      DTS:ObjectName="DossierSource">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Test</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5900FC14-7B7F-4C1A-88C6-1263675E8BD1}"
      DTS:ObjectName="Extension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4BEC8234-A993-4201-BF00-4939C4B8F4D0}"
      DTS:ObjectName="Fichier">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B4F4BB48-DA4A-44F6-BB85-6A5857C92E46}"
      DTS:ObjectName="From">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{6CD66526-92E0-4043-8E2D-F69DE3ECB533}"
      DTS:ObjectName="FtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{5514AC03-E632-42B8-B16D-4969855B1788}"
      DTS:ObjectName="idAction">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{EA3E0C12-1FFB-4488-BE45-A3FF9621BA7E}"
      DTS:ObjectName="idEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{9933CDB4-CC36-4044-866B-B07DF9DCA430}"
      DTS:ObjectName="idTypeEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D67DC8D2-EA59-4D54-9E32-94C375D945D7}"
      DTS:ObjectName="Login">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{F6524569-8A4B-42A5-A9B4-72389703ED50}"
      DTS:ObjectName="Longueur">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{588D1E65-5851-4FDD-8B27-029192633EAC}"
      DTS:ObjectName="ModeReceptionFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{ABA17039-B44D-41FE-997C-26C3066990FD}"
      DTS:ObjectName="NomBDD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3BC01BCC-0044-4E56-A5F1-97F81E3F9AE8}"
      DTS:ObjectName="NomColonneRetour">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6BF11B44-A7E0-4B5F-95AF-B3392661F3C6}"
      DTS:ObjectName="NomInstance">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B957B95B-8681-43BD-A410-99425AA459F5}"
      DTS:ObjectName="NomProcedureStockee">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{88AB54D9-A5A6-413A-8B15-9A947067935F}"
      DTS:ObjectName="Port">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{9B5F300D-C661-4AA1-B19A-0191AE15A804}"
      DTS:ObjectName="Position">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8F532A4D-246A-480C-8781-3520B8D3EAD9}"
      DTS:ObjectName="Pwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{22D4477A-0E29-4ADC-AF63-3597652151DE}"
      DTS:ObjectName="RenommerChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{67BA3A63-8507-45B2-A825-64A333B022A1}"
      DTS:ObjectName="RenommerChaineRemplacement">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5233B8F1-5BB5-4E93-B899-05D7F6522848}"
      DTS:ObjectName="Server">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://mail.grammeo.com/EWS/exchange.asmx</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F715061B-9220-4724-9AE3-BBE67664A64F}"
      DTS:ObjectName="SmtpLogin">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">vbarski</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BD11563B-BEAB-424F-913C-4F5F4232B2BF}"
      DTS:ObjectName="SmtpPwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">barski01</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{4A846297-37DE-42ED-B3FF-B0321128811F}"
      DTS:ObjectName="SmtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">60</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{46F4A66C-D9DA-48E1-B654-F7B6A220486E}"
      DTS:ObjectName="Sujet">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{99043C04-76DC-4009-9E7C-9D17022CD6F6}"
      DTS:ObjectName="To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{389D0C51-FAF2-4487-95F8-AA689623FF20}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="intResultTask">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{50906F00-F3A6-44FC-811B-B622669E9A58}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseDestinataire">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{97036DB5-6024-4630-9033-D5A1BBD0375A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseDestinataireBcc">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9851584A-5ECA-4766-8BC9-13B85B4856F3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseDestinataireCc">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0F1A233A-61BA-4631-932E-7ECD38929E3B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseEmetteur">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AE568B51-2D4C-47A3-B900-4A556823CE97}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCheminCompletFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51124524-26DD-476E-AB0F-B11E37EB3D4B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCheminFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EDE32B8F-486D-4F78-8559-579DFEAC3612}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCorps">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{57209863-972B-4BB9-BF64-E29CDB8E486E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ADB2CF78-3B21-4E3E-82DC-72346A98C521}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateReception">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{583916AA-01EE-433B-BE10-492E06556811}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateTraitement">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ABADA01B-0690-4986-BFBF-53B3A938EB05}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierCible">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{024F2EF2-A8F6-43EC-8BEA-1057558AD5C0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierCibleExchange">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{87F4A8CA-8519-46DB-BC45-0D84E5F11366}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierDeTraitement">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{112CC3F9-F597-42F4-B2DF-697CA90214C4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierOrigine">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BC9F0FF-536C-4647-AC97-4F7F2FCC4537}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strExtension">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02A37119-26F2-4004-B96F-B4FFBD41E50D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strFormatFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{40B0BE1C-A296-4C93-ADF9-3FA2C4685FF1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strIdMail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{04036EDE-1900-4B2B-9E58-E646A5A7B530}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strModeReception">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FC52612-1FBC-45A3-BC50-0158D4AEE19E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strNomFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA5F8780-32BE-4157-B9C9-B45DC7667669}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strObjet">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA3BE615-36B7-4540-9108-77C4BB4DADF5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strResultMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4EAA6E5D-51F8-49AD-9484-BE53FA948B1C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strTexteDuFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{CE212061-247E-4795-B9E6-FCDD26AE50A6}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D6184701-E5B0-429B-87EA-5842DE50FEE8}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1">
        <DTS:Property
          DTS:DataType="8"
          DTS:Name="EventFilter">1,7,OnError</DTS:Property>
        <DTS:Property
          DTS:EventName="OnError"
          DTS:Name="ColumnFilter">
          <DTS:Property
            DTS:Name="Computer">-1</DTS:Property>
          <DTS:Property
            DTS:Name="Operator">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceName">-1</DTS:Property>
          <DTS:Property
            DTS:Name="SourceID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="ExecutionID">-1</DTS:Property>
          <DTS:Property
            DTS:Name="MessageText">-1</DTS:Property>
          <DTS:Property
            DTS:Name="DataBytes">-1</DTS:Property>
        </DTS:Property>
      </DTS:LoggingOptions>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Insert LOG en erreur"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{77336FE1-7060-4F8C-A910-99E89C8A6DBF}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert LOG en erreur"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a2331506826945bbb991786089d690cc"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::strResultMessage,$Package::idAction,$Package::idEtape,$Package::idTypeEtape">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            StringBuilder sb = new StringBuilder("INSERT INTO Log SELECT ");
            
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idAction"].Value.ToString()) ? "0" : Dts.Variables["$Package::idAction"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idTypeEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idTypeEtape"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idEtape"].Value + ",");
            sb.Append("0,");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strResultMessage"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strResultMessage"].Value.ToString().Replace("'","''") + "',");
            sb.Append("getdate()");

            RequeteSQL(Dts.Connections[1].Name, sb.ToString());

			Dts.TaskResult = (int)ScriptResults.Success;
		}


        private void RequeteSQL(string connectionName, string sql)
        {
            using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
            {
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(sql, cnx);
                cnx.Open();
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_a2331506826945bbb991786089d690cc.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{97F04926-4C9D-4E57-B60F-71B4748A59DA}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e2a1050e88b54fa5ac3d6c300b3e9077</RootNamespace><AssemblyName>ST_a2331506826945bbb991786089d690cc</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile /></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon><DesignTime>True</DesignTime></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><DesignTimeSharedInput>True</DesignTimeSharedInput></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_e2a1050e88b54fa5ac3d6c300b3e9077</msb:CodeName>
		<msb:DisplayName>ST_e2a1050e88b54fa5ac3d6c300b3e9077</msb:DisplayName>
		<msb:ProjectId>{22371720-AFE6-4DA1-BAAC-442C7E8DC664}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a2331506826945bbb991786089d690cc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Settings.get_Default():ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Sett" +
    "ings")]

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e2a1050e88b54fa5ac3d6c300b3e9077")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e2a1050e88b54fa5ac3d6c300b3e9077")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a2331506826945bbb991786089d690cc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADqbm1wAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAAjjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQzAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MwAAAAAAAEgAAAACAAUAwCMAAHQPAAABAAAAAAAAAAgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBQDQAQAAAgAAEXJzAABwcxYAAAoKBgIoFwAACm8YAAAKcqMAAHBv
GQAACm8aAAAKbxsAAAooHAAACi0mAigXAAAKbxgAAApyowAAcG8ZAAAKbxoAAApyyQAAcCgdAAAK
KwVyzQAAcG8eAAAKJgYCKBcAAApvGAAACnLRAABwbxkAAApvGgAACm8bAAAKKBwAAAotJgIoFwAA
Cm8YAAAKctEAAHBvGQAACm8aAAAKcskAAHAoHQAACisFcs0AAHBvHgAACiYGAigXAAAKbxgAAApy
/QAAcG8ZAAAKbxoAAApvGwAACigcAAAKLSYCKBcAAApvGAAACnL9AABwbxkAAApvGgAACnLJAABw
KB0AAAorBXLNAABwbx4AAAomBnIhAQBwbx4AAAomBgIoFwAACm8YAAAKcicBAHBvGQAACm8aAAAK
bxsAAAooHAAACi0/clUBAHACKBcAAApvGAAACnInAQBwbxkAAApvGgAACm8bAAAKclUBAHByWQEA
cG8fAAAKcl8BAHAoIAAACisFcmUBAHBvHgAACiYGcnEBAHBvHgAACiYCAigXAAAKbyEAAAoXjCEA
AAFvIgAACm8jAAAKBm8bAAAKKAkAAAYCKBcAAAoWbyQAAAoqGzACAEoAAAADAAARAigXAAAKbyEA
AAoDbyIAAApvJQAACm8bAAAKcyYAAAoKBAZzJwAACgsGbygAAAoHF28pAAAKB28qAAAKJt4KBiwG
Bm8rAAAK3CoAAAEQAAACACEAHj8ACgAAAAAeAigsAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQBAAAI34AAPwEAAAwBwAAI1N0cmluZ3MAAAAALAwA
AIgBAAAjVVMAtA0AABAAAAAjR1VJRAAAAMQNAACwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APolMwAWAAABAAAAKAAAAAUAAAAGAAAACgAAAAMAAAAsAAAAAgAAAA8AAAADAAAAAgAAAAMAAAAE
AAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8B
XgEGAKABiwEGAHUCWwIGAKACjgIGALcCjgIGANQCjgIGAPMCjgIGAAwDjgIGACUDjgIGAEADjgIG
AFsDjgIGAHQDjgIGAK0DjQMGAM0DjQMGACIEDwQGAD8EugAGAEQEugAGAGgEjgIKAJQEfgQKAK0E
fgQGAMIEjQMOAOQEFAEGABIFBgUOACAFFAESAHkFWQUSAJEFWQUGALYFugASAOEFWQUGAP0FugAS
AAMGWQUWAGAGTgYWAHAGTgYWAJAGfQYWAKIGfQYWAKwGQgYGANgGugAAAAAAAQAAAAAAAQABAAAA
EAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAsAEQB/
ARMAEQCsARcAEQD2ATkABgYqAk0AVoAyAlAAVoA6AlAAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIB
HwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEb
AAIApyAAAAAAkRjdBI8AAgC8IAAAAACGABoCGwACAJgiAAAAAIEAHwJHAAIAACMAAAAAhhi8ARsA
BAAAAAEAQgIAAAEASAIAAAIAVwI5ALwBXgBBALwBXgBJALwBXgBRALwBXgBZALwBXgBhALwBXgBp
ALwBXgBxALwBXgB5ALwBXgCBALwBXgCJALwBYwCRALwBGwCZALwBGwAJALwBGwChAFYEaAChAHEE
bwApALwBdAC5ALwBgADJALwBGwARALwBGwDRALwBGwDZALwBXgAZADIFkwDhAIMFmADpAJoFnQDx
AKMFowAJAK0FpwD5AL0FqwD5AMsFsADZANIFtgD5ANkFvAD5AMsFwgDhAO0FyQABAZoFzwARARUG
pwDhAB4GYwARAS0GpwAZAbwBXgAhAbwB2wApAZ0GGwAxAbgG4wAxAcgG6gBBAeQGGwAZALwBGwAI
ABQAVAAIABgAWQApAJMAhgAuABsAagEuACMAagEuAGMAkAEuAAsA9wAuABMAQQEuADMAQQEuACsA
agEuADsAcAEuAEMAagEuAFsAhwFDAGsAWQBJAJMAhgBhAJsAWQCDAKsAWQB7ANYA7gACAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAAcRsldgAA
AAAAAOsDAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAA
AAAACgD1AAAAAAALAAAAAAAAAAAAAAAKADoFAAAAAAQAAAAAAAAAAAAAAAEAQgYAAAAAAAAAAAEA
AADsBgAABQAEAAAAADxNb2R1bGU+AFNUX2EyMzMxNTA2ODI2OTQ1YmJiOTkxNzg2MDg5ZDY5MGNj
LmRsbABSZXNvdXJjZXMAU1RfZTJhMTA1MGU4OGI1NGZhNWFjM2Q2YzMwMGIzZTkwNzcuUHJvcGVy
dGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2UyYTEwNTBlODhiNTRmYTVhYzNkNmMzMDBiM2U5
MDc3AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNv
dXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUA
LmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AUmVxdWV0ZVNRTAB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBjb25uZWN0aW9uTmFtZQBzcWwAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2EyMzMxNTA2
ODI2OTQ1YmJiOTkxNzg2MDg5ZDY5MGNjAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uVGV4dABT
dHJpbmdCdWlsZGVyAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdl
dF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN0cmluZwBJ
c051bGxPckVtcHR5AENvbmNhdABBcHBlbmQAUmVwbGFjZQBDb25uZWN0aW9ucwBnZXRfQ29ubmVj
dGlvbnMASW50MzIAQ29ubmVjdGlvbk1hbmFnZXIAZ2V0X05hbWUAc2V0X1Rhc2tSZXN1bHQAZ2V0
X0Nvbm5lY3Rpb25TdHJpbmcAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAT2xlRGJDb25u
ZWN0aW9uAE9sZURiQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4A
RGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBFeGVjdXRlTm9uUXVlcnkASURp
c3Bvc2FibGUARGlzcG9zZQBTVF9lMmExMDUwZTg4YjU0ZmE1YWMzZDZjMzAwYjNlOTA3Ny5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AZQAyAGEAMQAwADUAMABlADgAOABi
ADUANABmAGEANQBhAGMAMwBkADYAYwAzADAAMABiADMAZQA5ADAANwA3AC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAvSQBOAFMARQBSAFQAIABJAE4AVABPACAATABv
AGcAIABTAEUATABFAEMAVAAgAAAlJABQAGEAYwBrAGEAZwBlADoAOgBpAGQAQQBjAHQAaQBvAG4A
AAMsAAADMAAAKyQAUABhAGMAawBhAGcAZQA6ADoAaQBkAFQAeQBwAGUARQB0AGEAcABlAAAjJABQ
AGEAYwBrAGEAZwBlADoAOgBpAGQARQB0AGEAcABlAAAFMAAsAAAtVQBzAGUAcgA6ADoAcwB0AHIA
UgBlAHMAdQBsAHQATQBlAHMAcwBhAGcAZQAAAycAAQUnACcAAQUnACwAAQtOAFUATABMACwAABNn
AGUAdABkAGEAdABlACgAKQAAAAAAMRLl5FtdxEuOs64AUNzA1QAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBSACAQ4O
AgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFh
CAEAAgAAAAAAAwAAAQQgABJxBCAAEnUFIAESeRwDIAAcAyAADgQAAQIOBQACDhwcBSABEm0OBSAC
Dg4OBgADDg4ODgUgABKAgQYgARKAiRwEBwESbQcgAgEOEoCNBiABARGAnQMgAAgIBwISgI0SgJFJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNSgBACNTVF9lMmExMDUwZTg4YjU0ZmE1YWMzZDZjMzAwYjNlOTA3NwAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBAFwzAAAAAAAAAAAAAH4zAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwMwAA
AAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAJXZxGwAAAQAldnEbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGUAMgBhADEAMAA1ADAAZQA4ADgAYgA1ADQAZgBhADUAYQBjADMAZAA2AGMAMwAwADAAYgAzAGUA
OQAwADcANwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADAAMgA1
AC4AMwAwADIANAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEA
MgAzADMAMQA1ADAANgA4ADIANgA5ADQANQBiAGIAYgA5ADkAMQA3ADgANgAwADgAOQBkADYAOQAw
AGMAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfAGEAMgAzADMAMQA1ADAANgA4ADIANgA5ADQANQBiAGIAYgA5ADkA
MQA3ADgANgAwADgAOQBkADYAOQAwAGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwBlADIAYQAxADAANQAwAGUAOAA4AGIANQA0AGYAYQA1AGEAYwAzAGQA
NgBjADMAMAAwAGIAMwBlADkAMAA3ADcAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADcAMAAyADUALgAzADAAMgA0ADUAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMAAyADUALgAzADAAMgA0ADUAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAkDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Log"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{4685E305-621F-490E-9E03-4B7A0041E088}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; ¬© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{9FCBF8D3-EF16-4F3B-8921-EEF4EC6317A2}"
              SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,1,NULL,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::idAction"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::idTypeEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::idEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\pi√®ce jointe √† extraire"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{536DA569-5C55-4D32-8B8F-A139FEDDE7D5}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="pi√®ce jointe √† extraire"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">1,7,OnError</DTS:Property>
            <DTS:Property
              DTS:EventName="OnError"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
          </DTS:LoggingOptions>
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\pi√®ce jointe √† extraire.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{B5AE7385-A13E-4EF1-AE1C-503A063BDF1B}"
              DTS:EventID="429212340"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{F1CC2A81-2F41-4E0E-B8C6-9CEBB360C0A1}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\pi√®ce jointe √† extraire.EventHandlers[OnError]\Log"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{C02597C7-BD0F-4D99-9AD5-CB1FD8C33ED0}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Log"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; ¬© 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{9FCBF8D3-EF16-4F3B-8921-EEF4EC6317A2}"
                      SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,0,?,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="$Package::idAction"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="$Package::idTypeEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="$Package::idEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="System::ErrorDescription"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ba63f7522b1342f1bbf4e2737a3eca64"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::strDossierDeTraitement,$Package::AccuseReception,$Package::Adresse,$Package::Bcc,$Package::Cc,$Package::ChaineAChercher,$Package::ConnectionString_SQLServer,$Package::Corps,$Package::DossierCible,$Package::DossierSource,$Package::Fichier,$Package::From,$Package::idAction,$Package::idEtape,$Package::idTypeEtape,$Package::Longueur,$Package::NomProcedureStockee,$Package::Port,$Package::Position,$Package::Server,$Package::SmtpLogin,$Package::SmtpPwd,$Package::SmtpTimeout,$Package::Sujet,$Package::To"
              ReadWriteVariables="User::intResultTask,User::strAdresseDestinataire,User::strAdresseDestinataireBcc,User::strAdresseDestinataireCc,User::strAdresseEmetteur,User::strCheminCompletFichier,User::strCheminFichier,User::strCorps,User::strDateFichier,User::strDateReception,User::strDateTraitement,User::strDossierCible,User::strDossierCibleExchange,User::strDossierOrigine,User::strExtension,User::strFormatFichier,User::strIdMail,User::strModeReception,User::strNomFichier,User::strObjet,User::strResultMessage,User::strTexteDuFichier">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_ba63f7522b1342f1bbf4e2737a3eca64.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{79DF458E-D497-4E2C-8B16-99A9D1ECCC6A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_18286d548795476f84f249fe09fe7dfd</RootNamespace>
    <AssemblyName>ST_ba63f7522b1342f1bbf4e2737a3eca64</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Exchange.WebServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Interface\DLL\Microsoft.Exchange.WebServices.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\DLL\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using Microsoft.Exchange.WebServices.Data;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Linq;
using System.Text.RegularExpressions;
using PdfSharp.Pdf;
using PdfSharp.Pdf.Content;
using PdfSharp.Pdf.Content.Objects;
using PdfSharp.Pdf.IO;
using System.Threading;
using System.Text.RegularExpressions;

#endregion

namespace ST_18286d548795476f84f249fe09fe7dfd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        /// 


        public void Main()
        {
            try
            {
                // vidage et creation des dossiers de traitement
                string[] dossiers = Dts.Variables["$Package::DossierCible"].Value.ToString().Split('|');
                Dts.Variables["User::strDossierCibleExchange"].Value = dossiers[0];
                Dts.Variables["User::strDossierDeTraitement"].Value = dossiers[1] + @"\$" + Guid.NewGuid().ToString();
                Dts.Variables["User::strDossierCible"].Value = dossiers[1];
                string[] dossiersSources = Dts.Variables["$Package::DossierSource"].Value.ToString().Split('|');

                if (Directory.Exists(Dts.Variables["User::strDossierDeTraitement"].Value.ToString()))
                    Directory.Delete(Dts.Variables["User::strDossierDeTraitement"].Value.ToString(), true);

                Directory.CreateDirectory(Dts.Variables["User::strDossierDeTraitement"].Value.ToString());



                // connexion √† Exchange
                ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP2);
                service.Timeout = (int)Dts.Variables["$Package::SmtpTimeout"].Value * 1000;
                service.Credentials = new NetworkCredential(Dts.Variables["$Package::SmtpLogin"].Value.ToString(), Dts.Variables["$Package::SmtpPwd"].Value.ToString());
                service.Url = new Uri(Dts.Variables["$Package::Server"].Value.ToString());
                EmailMessage message = new EmailMessage(service);

                // Recherche du r√©pertoire dans Inbox
                FolderView folderView = new FolderView(100);
                folderView.Traversal = FolderTraversal.Shallow;
                SearchFilter sfo = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(FolderSchema.DisplayName, Dts.Variables["$Package::DossierSource"].Value.ToString()));
                SearchFilter sfc = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(FolderSchema.DisplayName, Dts.Variables["User::strDossierCibleExchange"].Value.ToString()));


                FindFoldersResults findFoldersResults = service.FindFolders(WellKnownFolderName.Inbox, sfo, folderView);
                FindFoldersResults findFoldersCibleResults = service.FindFolders(WellKnownFolderName.Inbox, sfc, folderView);


                // si repertoire cible n'existe pas alors on le cr√©√©
                if (findFoldersCibleResults.TotalCount == 0)
                {
                    Folder folder = new Folder(service);
                    folder.DisplayName = Dts.Variables["User::strDossierCibleExchange"].Value.ToString();
                    folder.Save(WellKnownFolderName.Inbox);
                    findFoldersCibleResults = service.FindFolders(WellKnownFolderName.Inbox, sfc, folderView);
                }


                // Recherche des messages
                ItemView iv = new ItemView(Int32.MaxValue);
                iv.OrderBy.Add(EmailMessageSchema.DateTimeReceived, SortDirection.Descending);
                SearchFilter sfm = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));
                FindItemsResults<Item> findResults;


                if (dossiersSources[0].ToString() == "")
                    findResults = service.FindItems(WellKnownFolderName.Inbox, sfm, iv);
                else
                    findResults = service.FindItems(findFoldersResults.Folders[0].Id, sfm, iv);


                foreach (EmailMessage mess in findResults)
                {
                    bool UpdateRead = false;

                    mess.Load(new PropertySet(EmailMessageSchema.Attachments));

                    foreach (Attachment attachment in mess.Attachments)
                    {

                        // si c'est une pi√®ce jointe de type fichier alors on traite
                        if (attachment.GetType().Name.ToString().Equals("FileAttachment"))
                        {
                            UpdateRead = ExtractionFichierAttache(mess, attachment);
                        }
                        else if (attachment.GetType().Name.ToString().Equals("ItemAttachment"))
                        {
                            ItemAttachment itemAttachment = attachment as ItemAttachment;
                            itemAttachment.Load(new PropertySet(EmailMessageSchema.Attachments));

                            foreach (Attachment a in itemAttachment.Item.Attachments)
                            {
                                // si c'est une pi√®ce jointe de type fichier alors on traite
                                if (a.GetType().Name.ToString().Equals("FileAttachment"))
                                {
                                    UpdateRead = ExtractionFichierAttache(mess, a);
                                }
                            }

                        }
                    }


                    // Si un fichier a √©t√© extrait
                    if (UpdateRead)
                    {
                        // marque le message √† lu
                        mess.IsRead = true;
                        mess.Update(ConflictResolutionMode.AutoResolve);

                        // d√©place le message dans le r√©pertoire trait√©
                        mess.Copy(findFoldersCibleResults.Folders[0].Id);

                        // supprime le message du r√©pertoire de r√©ception
                        mess.Delete(DeleteMode.HardDelete);
                    }
                }


                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::strResultMessage"].Value = ex.Message.ToString();
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                //Supression du r√©pertoire de traitement
                Directory.Delete(Dts.Variables["User::strDossierDeTraitement"].Value.ToString(), true);

                Dts.Variables["User::intResultTask"].Value = (Dts.TaskResult == 0 ? 1 : 0);
            }
        }

        private bool ExtractionFichierAttache(EmailMessage Mess, Attachment Attachment)
        {
            FileAttachment fileAttachment = (FileAttachment)Attachment;
            //string fileAttachmentExtension = fileAttachment.Name.Substring(fileAttachment.Name.Length - 4, 4);
            
            string fileAttachmentExtension = "";
            string fileAttachmentName = fileAttachment.Name;

            if (fileAttachment.Name.Contains("."))
                    fileAttachmentExtension = fileAttachment.Name.Substring(fileAttachment.Name.LastIndexOf("."), fileAttachment.Name.Length - fileAttachment.Name.LastIndexOf("."));

            if (fileAttachment.Name.Contains("*"))
                fileAttachmentName = fileAttachment.Name.Replace("*", "-");


            // on ne prend pas les PJ .jpg et .png
            if (!(fileAttachmentExtension.Equals(".jpg") || fileAttachmentExtension.Equals(".png") || fileAttachmentExtension.Equals(".gif")))
            {
                // sauvegarde de la pi√®ce jointe dans le r√©pertoire de traitement
                string pathFileAttachement = Dts.Variables["User::strDossierDeTraitement"].Value.ToString() + @"\" + CleanInputFile(fileAttachmentName);
                fileAttachment.Load(pathFileAttachement);

                // r√©cup√©ration des diff√©rentes informations du mail                                                                                  
                GetInfoMessage(Mess, fileAttachment, fileAttachment.Name);

                // construction de la chaine SQL des diff√©rentes informations du mail et pi√®ce jointes                          
                StringBuilder sb = new StringBuilder("exec [dbo].[Insert_InfoFichier] ");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strNomFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strNomFichier"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strExtension"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strExtension"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strModeReception"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strModeReception"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strFormatFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strFormatFichier"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDossierCible"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDossierCible"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDossierCibleExchange"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDossierCibleExchange"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseEmetteur"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseEmetteur"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseDestinataire"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseDestinataire"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseDestinataireCc"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseDestinataireCc"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseDestinataireBcc"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseDestinataireBcc"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strObjet"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strObjet"].Value.ToString().Replace("'", "''") + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strCorps"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strCorps"].Value.ToString().Replace("'", "''") + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::DossierSource"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["$Package::DossierSource"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDateFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDateFichier"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDateReception"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDateReception"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strTexteDuFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strTexteDuFichier"].Value.ToString().Replace("'", "''").Replace(@"\0", @" ").Replace(@"\", @"\\") + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDossierDeTraitement"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDossierDeTraitement"].Value.ToString().Replace(@"\", @"\\") + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idAction"].Value.ToString()) ? "0," : Dts.Variables["$Package::idAction"].Value + ",");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idEtape"].Value + ",");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strIdMail"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strIdMail"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::ConnectionString_SQLServer"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["$Package::ConnectionString_SQLServer"].Value + "',");
                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::ChaineAChercher"].Value.ToString()) ? "NULL" : "'" + Dts.Variables["$Package::ChaineAChercher"].Value + "'");

                // insertion des informations dans la table InfoFichier de SQL Server
                string idFichier = InsertInfoFichier(Dts.Connections[0].Name, sb.ToString());

                // erreur lors de la r√©cup√©ration de l'idFichier
                if (String.IsNullOrEmpty(idFichier))
                {
                    InsertLog("Erreur sur le mail : " + Dts.Variables["User::strAdresseEmetteur"].Value.ToString() + "- Objet  : " + Dts.Variables["User::strObjet"].Value.ToString() + "- Date : " + Dts.Variables["User::strDateReception"].Value.ToString());
                    return false;
                }

                // archivage des fichiers
                string repIdFichier = ArchivageRepertoire(idFichier);

                if (!Directory.Exists(Dts.Variables["User::strDossierCible"].Value.ToString() + @"\" + repIdFichier))
                    Directory.CreateDirectory(Dts.Variables["User::strDossierCible"].Value.ToString() + @"\" + repIdFichier);

                fileAttachment.Load(Dts.Variables["User::strDossierCible"].Value.ToString() + @"\" + repIdFichier + @"\" + idFichier + ".bak");

                // update du dossierCible dans InfoFichier
                UpdateDossierCible(Dts.Connections[0].Name, Int32.Parse(idFichier), Dts.Variables["User::strDossierCible"].Value.ToString() + @"\" + repIdFichier);

                return true;
            }
            else
                return false;
        }


        private string TraitementTexte(string texte)
        {
            string newTexte = texte.Replace(@"'", @"''");
            newTexte = newTexte.Replace(@"\", @"\\");
            newTexte = newTexte.Replace(@"*", @"-");
            return newTexte;
        }


        private void UpdateDossierCible(string connectionName, int idFichier, string dossierCible)
        {

            using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
            {
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand("Update_InfoFichierDossierCible", cnx);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@idFichier", SqlDbType.Int).Value = idFichier;
                cmd.Parameters.Add("@dossierCible", SqlDbType.VarChar).Value = dossierCible;
                cnx.Open();
                cmd.ExecuteNonQuery();
            }


        }


        private string ArchivageRepertoire(string idFichier)
        {
            int inf = 1;

            if (Int32.Parse(idFichier) <= 1000)
                inf = 1;

            else
                inf = Decimal.ToInt32(1000 * Math.Floor(Decimal.Parse(idFichier) / 1000)) + 1;

            int sup = inf + 999;
            return inf.ToString() + "-" + sup.ToString();
        }


        private void GetInfoMessage(EmailMessage mess, FileAttachment fileMessage, string NewNameFile)
        {

            Dts.Variables["User::strIdMail"].Value = mess.Id.UniqueId;

            mess.Load(new PropertySet(EmailMessageSchema.DateTimeReceived));
            Dts.Variables["User::strDateReception"].Value = mess.DateTimeReceived.Year + "-" + mess.DateTimeReceived.Month.ToString("D2") + "-" + mess.DateTimeReceived.Day.ToString("D2") + " " + mess.DateTimeReceived.Hour.ToString("D2") + ":" + mess.DateTimeReceived.Minute.ToString("D2") + ":" + mess.DateTimeReceived.Second.ToString("D2");

            mess.Load(new PropertySet(EmailMessageSchema.Subject));
            if (mess.Subject == null)
                Dts.Variables["User::strObjet"].Value = "";
            else
                Dts.Variables["User::strObjet"].Value = TraitementTexte(mess.Subject.ToString());

            mess.Load(new PropertySet(EmailMessageSchema.Body));
            if (mess.Body == null)
                Dts.Variables["User::strCorps"].Value = "";
            else
                Dts.Variables["User::strCorps"].Value = TraitementTexte(mess.Body.ToString());

            mess.Load(new PropertySet(EmailMessageSchema.ToRecipients));



            StringBuilder sb = new StringBuilder();
            foreach (EmailAddress ToRecipient in mess.ToRecipients)
            {
                sb.Append(ToRecipient.Address.ToString() + ";");
            }


            Dts.Variables["User::strAdresseDestinataire"].Value = sb.ToString().Substring(0, sb.Length - 1);

            StringBuilder sbCc = new StringBuilder();
            foreach (EmailAddress CcRecipient in mess.CcRecipients)
                sbCc.Append(CcRecipient.Address.ToString() + ";");

            if (!String.IsNullOrEmpty(sbCc.ToString()))
                Dts.Variables["User::strAdresseDestinataireCc"].Value = sbCc.ToString().Substring(0, sbCc.Length - 1);

            StringBuilder sbBcc = new StringBuilder();
            foreach (EmailAddress BccRecipient in mess.BccRecipients)
                sbBcc.Append(BccRecipient.Address.ToString() + ";");

            if (!String.IsNullOrEmpty(sbBcc.ToString()))
                Dts.Variables["User::strAdresseDestinataireBcc"].Value = sbBcc.ToString().Substring(0, sbBcc.Length - 1);

            mess.Load(new PropertySet(EmailMessageSchema.Sender));
            if (mess.Sender != null)
            {
                Dts.Variables["User::strAdresseEmetteur"].Value = mess.Sender.Address.ToString();
                Dts.Variables["User::strModeReception"].Value = mess.Sender.RoutingType.ToString();
            }

            FileInfo file = new FileInfo(fileMessage.FileName);

            Dts.Variables["User::strDateFichier"].Value = file.CreationTime.Year + "-" + file.CreationTime.Month.ToString("D2") + "-" + file.CreationTime.Day.ToString("D2") + " " + file.CreationTime.Hour.ToString("D2") + ":" + file.CreationTime.Minute.ToString("D2") + ":" + file.CreationTime.Second.ToString("D2");
            Dts.Variables["User::strDateTraitement"].Value = DateTime.Now.Year + "-" + DateTime.Now.Month.ToString("D2") + "-" + DateTime.Now.Day.ToString("D2") + " " + DateTime.Now.Hour.ToString("D2") + ":" + DateTime.Now.Minute.ToString("D2") + ":" + DateTime.Now.Second.ToString("D2");


            Dts.Variables["User::strNomFichier"].Value = TraitementTexte(Path.GetFileNameWithoutExtension(file.Name.ToString()));
            Dts.Variables["User::strExtension"].Value = file.Extension.ToString().Replace(".", "");
            Dts.Variables["User::strFormatFichier"].Value = Dts.Variables["User::strExtension"].Value.ToString().ToUpper();



            if (Dts.Variables["User::strExtension"].Value.ToString().ToUpper().Equals("PDF"))
            {

                Dts.Variables["User::strCheminCompletFichier"].Value = Dts.Variables["User::strDossierDeTraitement"].Value.ToString() + @"\" + NewNameFile;

                try
                {

                    Thread th1 = new Thread(ThreadSleep);
                    Thread th2 = new Thread(GetText);
                    th1.Start();
                    th2.Start();

                    while (th1.IsAlive)
                    { }

                    if (th2.IsAlive)
                    {
                        th2.Abort();
                        Dts.Variables["User::strTexteDuFichier"].Value = "## LECTURE DU PDF IMPOSSIBLE ##";
                    }
                }
                catch (Exception ex)
                {
                    Dts.Variables["User::strTexteDuFichier"].Value = ex.Message;
                }

            }
            else if (Dts.Variables["User::strExtension"].Value.ToString().ToUpper().Equals("XML"))
            {
                Dts.Variables["User::strCheminCompletFichier"].Value = Dts.Variables["User::strDossierDeTraitement"].Value.ToString() + @"\" + NewNameFile;

                try
                {
                    StringBuilder sbtemp = new StringBuilder();
                    StreamReader fileReader = new StreamReader(Dts.Variables["User::strCheminCompletFichier"].Value.ToString());
                    sbtemp.Append(fileReader.ReadToEnd());
                    fileReader.Close();
                    Dts.Variables["User::strTexteDuFichier"].Value = sbtemp.ToString();
                }
                catch (Exception ex)
                {
                    Dts.Variables["User::strTexteDuFichier"].Value = ex.Message;
                }

            }
            else
            {
                Dts.Variables["User::strCheminCompletFichier"].Value = "";
                Dts.Variables["User::strTexteDuFichier"].Value = "";
            }
        }


        private static FolderId searchOrCreateFolderId(ExchangeService service, string folderName, bool create)
        {
            Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
            rootfolder.Load();

            foreach (Folder folder in rootfolder.FindFolders(new FolderView(Int32.MaxValue)))
            {
                if (folder.DisplayName == folderName)
                {
                    return folder.Id;
                }
            }

            if (create)
            {
                Folder newFolder = new Folder(service);
                newFolder.DisplayName = folderName;
                newFolder.Save(WellKnownFolderName.MsgFolderRoot);

                return newFolder.Id;
            }
            else
                return null;
        }


        public void InsertLog(string message)
        {

            StringBuilder sb = new StringBuilder("INSERT INTO Log SELECT ");

            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idAction"].Value.ToString()) ? "0" : Dts.Variables["$Package::idAction"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idTypeEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idTypeEtape"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idEtape"].Value + ",");
            sb.Append("0,");
            sb.Append("'" + message + "',");
            sb.Append("getdate()");

            RequeteSQL(Dts.Connections[1].Name, sb.ToString());

            Dts.TaskResult = (int)ScriptResults.Success;
        }


        private void RequeteSQL(string connectionName, string sql)
        {
            using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
            {
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(sql, cnx);
                cnx.Open();
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
            }

        }

        private string InsertInfoFichier(string connectionName, string sql)
        {

            try
            {
                using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
                {
                    System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(sql, cnx);
                    cnx.Open();
                    cmd.CommandType = CommandType.Text;


                    System.Data.OleDb.OleDbDataReader reader = cmd.ExecuteReader();

                    if (reader.HasRows)
                    {
                        reader.Read();
                        return reader.GetFieldValue<string>(0);
                    }
                    else
                        return "";
                }
            }
            catch
            {
                return "";
            }

        }


        public void GetText()
        {
            string pdfFileName = Dts.Variables["User::strCheminCompletFichier"].Value.ToString();

            try
            {
                using (var _document = PdfReader.Open(pdfFileName, PdfDocumentOpenMode.ReadOnly))
                {
                    var result = new StringBuilder();
                    foreach (var page in _document.Pages.OfType<PdfPage>())
                    {
                        ScriptMain.ExtractText(ContentReader.ReadContent(page), result);
                        result.AppendLine();
                    }
                    Dts.Variables["User::strTexteDuFichier"].Value = CleanInput(TraitementTexte(result.ToString()));
                }
            }
            catch
            {
                Dts.Variables["User::strTexteDuFichier"].Value = "## LECTURE DU PDF IMPOSSIBLE ## : ";
            }
        }

        public void ThreadSleep()
        {
            Thread.Sleep(5000);
        }


        private static void ExtractText(CObject obj, StringBuilder target)
        {
            if (obj is CArray)
                ExtractText((CArray)obj, target);
            else if (obj is CComment)
                ExtractText((CComment)obj, target);
            else if (obj is CInteger)
                ExtractText((CInteger)obj, target);
            else if (obj is CName)
                ExtractText((CName)obj, target);
            else if (obj is CNumber)
                ExtractText((CNumber)obj, target);
            else if (obj is COperator)
                ExtractText((COperator)obj, target);
            else if (obj is CReal)
                ExtractText((CReal)obj, target);
            else if (obj is CSequence)
                ExtractText((CSequence)obj, target);
            else if (obj is CString)
                ExtractText((CString)obj, target);
            else
                throw new NotImplementedException(obj.GetType().AssemblyQualifiedName);
        }

        private static void ExtractText(CArray obj, StringBuilder target)
        {
            foreach (var element in obj)
            {
                ExtractText(element, target);
            }
        }
        private static void ExtractText(CComment obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CInteger obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CName obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CNumber obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(COperator obj, StringBuilder target)
        {
            if (obj.OpCode.OpCodeName == OpCodeName.Tj || obj.OpCode.OpCodeName == OpCodeName.TJ)
            {
                foreach (var element in obj.Operands)
                {
                    ExtractText(element, target);
                }
                target.Append(" ");
            }
        }
        private static void ExtractText(CReal obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CSequence obj, StringBuilder target)
        {
            foreach (var element in obj)
            {
                ExtractText(element, target);
            }
        }
        private static void ExtractText(CString obj, StringBuilder target)
        {
            target.Append(obj.Value);
        }

        static string CleanInput(string strIn)
        {
            // Replace invalid characters with empty strings.
            try
            {
                return Regex.Replace(strIn, @"[^\w\.@-]", "",
                                     RegexOptions.None, TimeSpan.FromSeconds(1.5));
            }
            // If we timeout when replacing invalid characters, 
            // we should return Empty.
            catch (RegexMatchTimeoutException)
            {
                return String.Empty;
            }
        }

        static string CleanInputFile(string strIn)
        {
            // Replace invalid characters with empty strings.
            try
            {
                return Regex.Replace(strIn, @"[/:<>]", "", 
                                     RegexOptions.None, TimeSpan.FromSeconds(1.5));
            }
            // If we timeout when replacing invalid characters, 
            // we should return Empty.
            catch (RegexMatchTimeoutException)
            {
                return String.Empty;
            }
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_18286d548795476f84f249fe09fe7dfd</msb:CodeName>
		<msb:DisplayName>ST_18286d548795476f84f249fe09fe7dfd</msb:DisplayName>
		<msb:ProjectId>{BBE79254-B292-4136-BC69-FEE9DDA1F81E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ba63f7522b1342f1bbf4e2737a3eca64.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Breakpoint Include="6e746d62725a4179a086cba4691d32e9">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>113</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="64a292da2d5d4dd7b1dad6d0c73d863c">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>127</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="b626908d461b4f4eaed7e69e838a992c">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>17</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>219</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
		<msb:Breakpoint Include="ba83dcbf603d45499703c962f0aa4e23">
			<msb:FileName>ScriptMain.cs</msb:FileName>
			<msb:ColumnNumber>13</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:LineNumber>242</msb:LineNumber>
			<msb:Condition></msb:Condition>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Settings.get_Default():ST_18286d548795476f84f249fe09fe7dfd.Properties.Sett" +
    "ings")]

namespace ST_18286d548795476f84f249fe09fe7dfd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_18286d548795476f84f249fe09fe7dfd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_18286d548795476f84f249fe09fe7dfd")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_18286d548795476f84f249fe09fe7dfd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_ba63f7522b1342f1bbf4e2737a3eca64.dll">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
AAooXQAACi0/cj8DAHACKBYAAApvFwAACnLlBABwbxgAAApvGQAACm8aAAAKcj8DAHBy3wQAcG9a
AAAKckMDAHAoHgAACisFckkDAHBvXwAACiYRBAIoFgAACm8XAAAKckkBAHBvGAAACm8ZAAAKbxoA
AAooXQAACi0rcj8DAHACKBYAAApvFwAACnJJAQBwbxgAAApvGQAACnJDAwBwKF4AAAorBXJJAwBw
b18AAAomEQQCKBYAAApvFwAACnIDBQBwbxgAAApvGQAACm8aAAAKKF0AAAotK3I/AwBwAigWAAAK
bxcAAApyAwUAcG8YAAAKbxkAAApyQwMAcCheAAAKKwVySQMAcG9fAAAKJhEEAigWAAAKbxcAAApy
LQUAcG8YAAAKbxkAAApvGgAACihdAAAKLStyPwMAcAIoFgAACm8XAAAKci0FAHBvGAAACm8ZAAAK
ckMDAHAoXgAACisFckkDAHBvXwAACiYRBAIoFgAACm8XAAAKclsFAHBvGAAACm8ZAAAKbxoAAAoo
XQAACi1dcj8DAHACKBYAAApvFwAACnJbBQBwbxgAAApvGQAACm8aAAAKcj8DAHBy3wQAcG9aAAAK
cosFAHBykQUAcG9aAAAKctECAHBylQUAcG9aAAAKckMDAHAoHgAACisFckkDAHBvXwAACiYRBAIo
FgAACm8XAAAKct0AAHBvGAAACm8ZAAAKbxoAAAooXQAACi0/cj8DAHACKBYAAApvFwAACnLdAABw
bxgAAApvGQAACm8aAAAKctECAHBylQUAcG9aAAAKckMDAHAoHgAACisFckkDAHBvXwAACiYRBAIo
FgAACm8XAAAKcpsFAHBvGAAACm8ZAAAKbxoAAAooXQAACi0mAigWAAAKbxcAAApymwUAcG8YAAAK
bxkAAApywQUAcChgAAAKKwVyxQUAcG9fAAAKJhEEAigWAAAKbxcAAApyywUAcG8YAAAKbxkAAApv
GgAACihdAAAKLSYCKBYAAApvFwAACnLLBQBwbxgAAApvGQAACnLBBQBwKGAAAAorBXLvBQBwb18A
AAomEQQCKBYAAApvFwAACnLzBQBwbxgAAApvGQAACm8aAAAKKF0AAAotK3I/AwBwAigWAAAKbxcA
AApy8wUAcG8YAAAKbxkAAApyQwMAcCheAAAKKwVySQMAcG9fAAAKJhEEAigWAAAKbxcAAApyEwYA
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
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMx
OQAAAAAFAGwAAAAQDQAAI34AAHwNAABwEgAAI1N0cmluZ3MAAAAA7B8AABAJAAAjVVMA/CgAABAA
AAAjR1VJRAAAAAwpAABkBgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAAAPolMwAWAAABAAAAjAAA
AAUAAAAGAAAAIAAAACkAAAC/AAAAAgAAAA8AAAAMAAAAAgAAAAMAAAAEAAAACwAAAAEAAAAKAAAA
AQAAAAEAAAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGL
ARIAYgI+AhIAbwI+AhIAygI+AhIA6AI+AhIA8QI+AhYAeQNcAwYAjQOBAxYApwNcAxYArgNcAxYA
twNcAxYAwANcAxYAxgNcAxYAzgNcAxYA2ANcAxYA3gNcAxYA6ANcAwYAxwStBAYA8gTgBAYACQXg
BAYAJgXgBAYARQXgBAYAXgXgBAYAdwXgBAYAkgXgBAYArQXgBAYAxgXgBAYA/wXfBQYAHwbfBQYA
dAZhBgYAkQa6AAYAlga6AAYAugbgBAoA5gbQBgoA/wbQBgYAFAffBQ4ANgcUAQ4AWAcUARoAsQeR
BxoAyQeRBwYA7ge6AAYA8we6AAYACgi6AAYAKAgeCAYAQAgeCBIAXgg+AgYAbgi6ABIAdAg+AgoA
nwiUCBIAsQg+Ah4AnwiUCAoA4Qi6AB4A4Qi6ABIA7Qg+AhIA+Ag+AhIAFgk+AhIAIwk+AhIAMAk+
AvcATwkAABIAWQk+AvcAcAkAABIAhwk+AhIAlwk+AhIAqgk+AhIA2Qk+AhIA9Qk+AhIA/gk+AhIA
HAo+AhIAOAo+AhIASgo+AgYAZAq6ABIAeAo+AhIAiwo+AhIAkAo+AiIAwgqjCgYAwgqjCiIA/Qri
CgYA/QriChIAMQs+AhIAPQs+AhIAUAs+AhIAdQs+AgYAmQvgBBIAtAs+AiIAwwviCgYA5AvRCwYA
+Qu6ABIAGAw+AhIAOww+AgYAVQy6ABoAwQyRBxoA3QyRByYAKA0WDSYAOA0WDSYAWA1FDSYAYg0K
DSYAfg0WDSYApg0KDSYAsA0WDSYAvw1FDSYAyw1FDQYA7Q26AAYAAQ66ABIAIA4+AhIAJw4+AiIA
Pg66AAYAPg66ABIArw4+AhIA0Q4+AhIA+Q4+AgYAZA8eCAYAbQ8eCAYAlQ8eCAYA3Q/MDwYA6Q/M
DwYACBAeCAYAFRAeCCYARRAWDSYAYxBFDRYAnxCPEBYAthCpEBYAwhCPEBYA1hCpECoAARH1EAYA
wwviCgYADBHRCxYAHxGpEBYAPBEnEQYAgRG6ABYAmRFcAxYAqxFcAwYAwxG6AAoA9xHYEQoA/RHY
EQoAEBLYEQAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8A
DQAEAAgAAwEAAKMAAAARAAQAIQARAH8BEwARAKwBFwARAPYBOQAGBgoE5QBWgBIE6ABWgBoE6ABQ
IAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIBKQABAKAg
AAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGC8HJwECALwgAAAAAIYAGgIbAAIA8CYA
AAAAgQB6AlAAAgBwMgAAAACBAJMCWAAEALQyAAAAAIEAowJdAAUAXDMAAAAAgQC2AlgACADQMwAA
AACBANkCZAAJALw9AAAAAJEAAQNtAAwAXD4AAAAAhgAYA3YADwDgPwAAAACBACIDewAQAEhAAAAA
AIEALQOBABIA5EAAAAAAhgA/AxsAFADoQQAAAACGAEcDGwAUAPRBAAAAAJEAmwOQABQA0EIAAAAA
kQCbA5gAFgAYQwAAAACRAJsDoAAYABpDAAAAAJEAmwOoABoAHEMAAAAAkQCbA7AAHAAeQwAAAACR
AJsDuAAeACBDAAAAAJEAmwPAACAAmEMAAAAAkQCbA8gAIgCcQwAAAACRAJsD0AAkAORDAAAAAJEA
mwPYACYA9EMAAAAAkQDwA+AAKABARAAAAACRAPsD4AApAIxEAAAAAIYYvAEbACoAAAABACIEAAAB
ACgEAAACAG8CAAABAC0EAAABADMEAAACAEIEAAADAEwEAAABAEIEAAABAFkEAAACAF4EAAADAGoE
AAABAHYEAAACAH4EAAADAIkEAAABAJAEAAABADMEAAACAJgEAAABADMEAAACAJgEAAABAJwEAAAC
AKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAABAJwE
AAACAKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAABAJwEAAACAKAEAAAB
AKcEAAABAKcEuQC8AXYAwQC8AXYAyQC8AXYA0QC8AXYA2QC8AXYA4QC8AXYA6QC8AXYA8QC8AXYA
+QC8AXYAAQG8AXYACQG8AfYAEQG8ARsAGQG8ARsACQC8ARsAIQGoBvsAIQHDBgQBKQC8AQoBOQG8
ARcBSQG8ARsAEQC8ARsAUQG8ARsAGQBqBysBWQG7BzEBYQHSBzcBaQHbBz4BCQDlB0IBeQH6B0YB
aQEACE0BgQEPCFIBeQEXCFgBiQEyCF8BiQE5CGQBiQFOCGoBWQC8AXEBqQGICPYAsQG8AXsAuQHF
CHgBqQHRCIEByQG8AXYAWQDlCIgBOQC8AY8B2QG8AfYA2QEICZUB8QFDCZwBAQK8AaEBEQK8AakB
WQC+CbQBIQLKCcMBMQK8AY8BMQLgCXYAMQLwCccBOQK8AfYAOQIQCs4BSQInCpwBQQJGCtQBWQJd
CpwBeQFsCt4BWQCZCuQBIQLPCvgBDADSBwwCMQLbChICWQCZChcCFAALCzMCHAAZC0YCSQIlC5wB
oQK8AUsCqQJLC1MCcQJlC1oCJAALCzMCLAAZC0YCCQCRC3ACwQKkC0IBeQGtC3YCyQJLC3sCyQLS
B4cC2QLwC40C4QIFDBsAOQANDJECcQIvDJYCcQI2DJ0CcQI5CKUCWQFGDPYA+QJfDEIBWQFrDMMB
QQCkC0IBeQF6DHYCeQGDDBMDeQGPDMMBeQGaDBgDeQGkDIEASQBLC3YAaQC8AXYAeQGsDF8BeQEX
CB4DaQC6DCUDeQEXCCsDWQHNDDEDAQPSBzcDCQOkC0IBeQEXCD4DoQHvDEQDCQP1DEIBEQO8AXYA
GQO8AV0DIQNuDWUDGQOXDWwDMQNGCnIDSQMACE0BUQPYDRsAIQPdDcMBWQO8AfYAWQPvDIMDWQP1
DYoDYQMGDpYDWQMMDooDWQMYDp8DoQHlB0IBcQLbCqsDcQMxDkIBcQJHDrEDgQNcDsMBgQNlDsMB
oQHlB1gAgQNvDsMBgQN3DsMBgQOADsMBgQOLDsMBeQEXCLcDSQKWDpwBcQKeDkIBSQKqDpwBcQK7
Dr0DWQLEDpwBaQC8ARsAOQDoDsMDNAALCzMCPAAZC0YCmQMGD0IBeQEXCNsDaQCPDMMBOQASD8MD
OQAjD8MDWQI1D5wBOQA8D+EDmQNHD0IBSQBXD0IBoQO8AXYAqQN8D+cDgQOND+0DqQOkC0IBsQOa
D+AAqQO2D0IBeQHED0IBuQO8AfMDwQO8AfkDwQPwDxsAwQP2D40CwQMCEBsAyQO8AXYA0QMgEEIB
0QMqEBsAMQIwEJ4EqQJLCxsAMQK+CakEIQILC7IERAAZC0YCMQI1EEIBGQNVEOEE4QNwEI0C4QN8
EI0C4QOBEOcE6QPYDf8E8QPfEAkFCQQYEQ8FTAALCywFVAAZC0YCKQRKET8FaQBWEUcFwQNhEWAF
IQFnEUIBMQS8AXYAqQALC2UFXAAZC0YCmQCgEYMFOQSrEYkFmQC2EY4FsQDbB0IBSQTMEZMFUQSk
DJoFeQEKEqcFGQC8ARsACAAUAOwACAAYAPEAKQCTAB4BLgAbAB0GLgAjAB0GLgBjAEMGLgALAKoF
LgATAPQFLgAzAPQFLgArAB0GLgA7ACMGLgBDAB0GLgBbADoGQwBrAPEASQCTAB4BYQCbAPEAgwCr
APEAEgGsAkkDWQN6A6YDAATGBNwE8gRMBXcFAgABAAMAAwAAAG8BLwAAAO4BNAAAABICQgACAAIA
AwACAAMABQABAAQABQACAAUABwADAioCPQJgAmgCyQPSA70EIwU2BW8FBIAAAAEAAABvH9lhAAAA
AAAAPQYAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAA
AAAKAPUAAAAAAA8AAAAAAAAAAAAAAEcAHwIAAAAAAQAgADAKAAAAAAAAhwBTAwAAAAALAAAAAAAA
AAAAAAAKAHIHAAAAAAIAAAAAAAAAAAAAAAEAugAAAAAAAgAAAAAAAAAAAAAAAQCxAAAAAAAEAAAA
AAAAAAAAAAABAAoNAAAAAAQAAAAAAAAAAAAAAAEA6RAAAAAAAAAAAAEAAAArEgAABQAEAFcB7gRd
AR0FAAAAAAA8TW9kdWxlPgBTVF9iYTYzZjc1MjJiMTM0MmYxYmJmNGUyNzM3YTNlY2E2NC5kbGwA
UmVzb3VyY2VzAFNUXzE4Mjg2ZDU0ODc5NTQ3NmY4NGYyNDlmZTA5ZmU3ZGZkLlByb3BlcnRpZXMA
U2V0dGluZ3MAU2NyaXB0TWFpbgBTVF8xODI4NmQ1NDg3OTU0NzZmODRmMjQ5ZmUwOWZlN2RmZABT
Y3JpcHRSZXN1bHRzAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0
TW9kZWxCYXNlAEVudW0AU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9y
AGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZh
dWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABNYWluAE1pY3Jvc29mdC5FeGNoYW5nZS5X
ZWJTZXJ2aWNlcwBNaWNyb3NvZnQuRXhjaGFuZ2UuV2ViU2VydmljZXMuRGF0YQBFbWFpbE1lc3Nh
Z2UAQXR0YWNobWVudABFeHRyYWN0aW9uRmljaGllckF0dGFjaGUAVHJhaXRlbWVudFRleHRlAFVw
ZGF0ZURvc3NpZXJDaWJsZQBBcmNoaXZhZ2VSZXBlcnRvaXJlAEZpbGVBdHRhY2htZW50AEdldElu
Zm9NZXNzYWdlAEZvbGRlcklkAEV4Y2hhbmdlU2VydmljZQBzZWFyY2hPckNyZWF0ZUZvbGRlcklk
AEluc2VydExvZwBSZXF1ZXRlU1FMAEluc2VydEluZm9GaWNoaWVyAEdldFRleHQAVGhyZWFkU2xl
ZXAAUGRmU2hhcnAAUGRmU2hhcnAuUGRmLkNvbnRlbnQuT2JqZWN0cwBDT2JqZWN0AFN5c3RlbS5U
ZXh0AFN0cmluZ0J1aWxkZXIARXh0cmFjdFRleHQAQ0FycmF5AENDb21tZW50AENJbnRlZ2VyAENO
YW1lAENOdW1iZXIAQ09wZXJhdG9yAENSZWFsAENTZXF1ZW5jZQBDU3RyaW5nAENsZWFuSW5wdXQA
Q2xlYW5JbnB1dEZpbGUAdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUATWVzcwB0ZXh0ZQBj
b25uZWN0aW9uTmFtZQBpZEZpY2hpZXIAZG9zc2llckNpYmxlAG1lc3MAZmlsZU1lc3NhZ2UATmV3
TmFtZUZpbGUAc2VydmljZQBmb2xkZXJOYW1lAGNyZWF0ZQBtZXNzYWdlAHNxbABvYmoAdGFyZ2V0
AHN0ckluAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRl
AFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1
dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBTVF9iYTYzZjc1MjJiMTM0MmYxYmJmNGUyNzM3YTNlY2E2NABTeXN0ZW0uRGlhZ25v
c3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxl
AEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRy
aWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1Zhcmlh
YmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAQ2hhcgBTdHJpbmcAU3Bs
aXQAc2V0X1ZhbHVlAEd1aWQATmV3R3VpZABDb25jYXQAU3lzdGVtLklPAERpcmVjdG9yeQBFeGlz
dHMARGVsZXRlAERpcmVjdG9yeUluZm8AQ3JlYXRlRGlyZWN0b3J5AEV4Y2hhbmdlVmVyc2lvbgBJ
bnQzMgBFeGNoYW5nZVNlcnZpY2VCYXNlAHNldF9UaW1lb3V0AFN5c3RlbS5OZXQATmV0d29ya0Ny
ZWRlbnRpYWwARXhjaGFuZ2VDcmVkZW50aWFscwBvcF9JbXBsaWNpdABzZXRfQ3JlZGVudGlhbHMA
VXJpAHNldF9VcmwARm9sZGVyVmlldwBGb2xkZXJUcmF2ZXJzYWwAc2V0X1RyYXZlcnNhbABTZWFy
Y2hGaWx0ZXIARm9sZGVyU2NoZW1hAFByb3BlcnR5RGVmaW5pdGlvbgBEaXNwbGF5TmFtZQBJc0Vx
dWFsVG8AUHJvcGVydHlEZWZpbml0aW9uQmFzZQBTZWFyY2hGaWx0ZXJDb2xsZWN0aW9uAExvZ2lj
YWxPcGVyYXRvcgBGaW5kRm9sZGVyc1Jlc3VsdHMAV2VsbEtub3duRm9sZGVyTmFtZQBGaW5kRm9s
ZGVycwBnZXRfVG90YWxDb3VudABGb2xkZXIAc2V0X0Rpc3BsYXlOYW1lAFNhdmUASXRlbVZpZXcA
T3JkZXJCeUNvbGxlY3Rpb24AZ2V0X09yZGVyQnkASXRlbVNjaGVtYQBEYXRlVGltZVJlY2VpdmVk
AFNvcnREaXJlY3Rpb24AQWRkAEVtYWlsTWVzc2FnZVNjaGVtYQBJc1JlYWQAQm9vbGVhbgBvcF9F
cXVhbGl0eQBGaW5kSXRlbXNSZXN1bHRzYDEASXRlbQBWaWV3QmFzZQBGaW5kSXRlbXMAU3lzdGVt
LkNvbGxlY3Rpb25zLk9iamVjdE1vZGVsAENvbGxlY3Rpb25gMQBnZXRfRm9sZGVycwBnZXRfSWQA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMASUVudW1lcmF0b3JgMQBHZXRFbnVtZXJhdG9yAGdl
dF9DdXJyZW50AEF0dGFjaG1lbnRzAFByb3BlcnR5U2V0AFNlcnZpY2VPYmplY3QATG9hZABBdHRh
Y2htZW50Q29sbGVjdGlvbgBnZXRfQXR0YWNobWVudHMAQ29tcGxleFByb3BlcnR5Q29sbGVjdGlv
bmAxAEdldFR5cGUATWVtYmVySW5mbwBnZXRfTmFtZQBFcXVhbHMASXRlbUF0dGFjaG1lbnQASUVu
dW1lcmFibGVgMQBTeXN0ZW0uQ29sbGVjdGlvbnMASUVudW1lcmF0b3IATW92ZU5leHQASURpc3Bv
c2FibGUARGlzcG9zZQBzZXRfSXNSZWFkAENvbmZsaWN0UmVzb2x1dGlvbk1vZGUAVXBkYXRlAENv
cHkARGVsZXRlTW9kZQBzZXRfVGFza1Jlc3VsdABFeGNlcHRpb24AZ2V0X01lc3NhZ2UAZ2V0X1Rh
c2tSZXN1bHQAQ29udGFpbnMATGFzdEluZGV4T2YAZ2V0X0xlbmd0aABTdWJzdHJpbmcAUmVwbGFj
ZQBJc051bGxPckVtcHR5AEFwcGVuZABDb25uZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVj
dGlvbk1hbmFnZXIAUGFyc2UAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAU3lzdGVtLkRhdGEAU3lzdGVt
LkRhdGEuT2xlRGIAT2xlRGJDb25uZWN0aW9uAE9sZURiQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21t
b24ARGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBPbGVEYlBhcmFtZXRlckNv
bGxlY3Rpb24AZ2V0X1BhcmFtZXRlcnMAU3FsRGJUeXBlAE9sZURiUGFyYW1ldGVyAERiUGFyYW1l
dGVyAERiQ29ubmVjdGlvbgBPcGVuAEV4ZWN1dGVOb25RdWVyeQBEZWNpbWFsAG9wX0RpdmlzaW9u
AE1hdGgARmxvb3IAb3BfTXVsdGlwbHkAVG9JbnQzMgBJdGVtSWQAU2VydmljZUlkAGdldF9Vbmlx
dWVJZABEYXRlVGltZQBnZXRfRGF0ZVRpbWVSZWNlaXZlZABnZXRfWWVhcgBnZXRfTW9udGgAZ2V0
X0RheQBnZXRfSG91cgBnZXRfTWludXRlAGdldF9TZWNvbmQAU3ViamVjdABnZXRfU3ViamVjdABC
b2R5AE1lc3NhZ2VCb2R5AGdldF9Cb2R5AFRvUmVjaXBpZW50cwBFbWFpbEFkZHJlc3NDb2xsZWN0
aW9uAGdldF9Ub1JlY2lwaWVudHMARW1haWxBZGRyZXNzAGdldF9BZGRyZXNzAGdldF9DY1JlY2lw
aWVudHMAZ2V0X0JjY1JlY2lwaWVudHMAU2VuZGVyAGdldF9TZW5kZXIAZ2V0X1JvdXRpbmdUeXBl
AGdldF9GaWxlTmFtZQBGaWxlSW5mbwBGaWxlU3lzdGVtSW5mbwBnZXRfQ3JlYXRpb25UaW1lAGdl
dF9Ob3cAUGF0aABHZXRGaWxlTmFtZVdpdGhvdXRFeHRlbnNpb24AZ2V0X0V4dGVuc2lvbgBUb1Vw
cGVyAFN5c3RlbS5UaHJlYWRpbmcAVGhyZWFkU3RhcnQAVGhyZWFkAFN0YXJ0AGdldF9Jc0FsaXZl
AEFib3J0AFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFJlYWRUb0VuZABDbG9zZQBCaW5kAGdldF9E
aXNwbGF5TmFtZQBPbGVEYkRhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBEYkRhdGFSZWFkZXIAZ2V0
X0hhc1Jvd3MAUmVhZABHZXRGaWVsZFZhbHVlAFBkZlNoYXJwLlBkZi5JTwBQZGZSZWFkZXIAUGRm
U2hhcnAuUGRmAFBkZkRvY3VtZW50AFBkZkRvY3VtZW50T3Blbk1vZGUAUGRmUGFnZXMAZ2V0X1Bh
Z2VzAFN5c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUASUVudW1lcmFibGUAT2ZUeXBl
AFBkZlBhZ2UAUGRmU2hhcnAuUGRmLkNvbnRlbnQAQ29udGVudFJlYWRlcgBSZWFkQ29udGVudABB
cHBlbmRMaW5lAFNsZWVwAGdldF9Bc3NlbWJseVF1YWxpZmllZE5hbWUATm90SW1wbGVtZW50ZWRF
eGNlcHRpb24AT3BDb2RlAGdldF9PcENvZGUAT3BDb2RlTmFtZQBnZXRfT3BlcmFuZHMAVGltZVNw
YW4ARnJvbVNlY29uZHMAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25zAFJlZ2V4AFJlZ2V4
T3B0aW9ucwBFbXB0eQBSZWdleE1hdGNoVGltZW91dEV4Y2VwdGlvbgBTVF8xODI4NmQ1NDg3OTU0
NzZmODRmMjQ5ZmUwOWZlN2RmZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAcVMA
VABfADEAOAAyADgANgBkADUANAA4ADcAOQA1ADQANwA2AGYAOAA0AGYAMgA0ADkAZgBlADAAOQBm
AGUANwBkAGYAZAAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAALSQA
UABhAGMAawBhAGcAZQA6ADoARABvAHMAcwBpAGUAcgBDAGkAYgBsAGUAADtVAHMAZQByADoAOgBz
AHQAcgBEAG8AcwBzAGkAZQByAEMAaQBiAGwAZQBFAHgAYwBoAGEAbgBnAGUAADlVAHMAZQByADoA
OgBzAHQAcgBEAG8AcwBzAGkAZQByAEQAZQBUAHIAYQBpAHQAZQBtAGUAbgB0AAAFXAAkAAArVQBz
AGUAcgA6ADoAcwB0AHIARABvAHMAcwBpAGUAcgBDAGkAYgBsAGUAAC8kAFAAYQBjAGsAYQBnAGUA
OgA6AEQAbwBzAHMAaQBlAHIAUwBvAHUAcgBjAGUAACskAFAAYQBjAGsAYQBnAGUAOgA6AFMAbQB0
AHAAVABpAG0AZQBvAHUAdAAAJyQAUABhAGMAawBhAGcAZQA6ADoAUwBtAHQAcABMAG8AZwBpAG4A
ACMkAFAAYQBjAGsAYQBnAGUAOgA6AFMAbQB0AHAAUAB3AGQAACEkAFAAYQBjAGsAYQBnAGUAOgA6
AFMAZQByAHYAZQByAAABAB1GAGkAbABlAEEAdAB0AGEAYwBoAG0AZQBuAHQAAB1JAHQAZQBtAEEA
dAB0AGEAYwBoAG0AZQBuAHQAAC1VAHMAZQByADoAOgBzAHQAcgBSAGUAcwB1AGwAdABNAGUAcwBz
AGEAZwBlAAAnVQBzAGUAcgA6ADoAaQBuAHQAUgBlAHMAdQBsAHQAVABhAHMAawAAAy4AAAMqAAAD
LQABCS4AagBwAGcAAAkuAHAAbgBnAAAJLgBnAGkAZgAAA1wAAEFlAHgAZQBjACAAWwBkAGIAbwBd
AC4AWwBJAG4AcwBlAHIAdABfAEkAbgBmAG8ARgBpAGMAaABpAGUAcgBdACAAACdVAHMAZQByADoA
OgBzAHQAcgBOAG8AbQBGAGkAYwBoAGkAZQByAAADJwABBScALAABC04AVQBMAEwALAAAJVUAcwBl
AHIAOgA6AHMAdAByAEUAeAB0AGUAbgBzAGkAbwBuAAAtVQBzAGUAcgA6ADoAcwB0AHIATQBvAGQA
ZQBSAGUAYwBlAHAAdABpAG8AbgAALVUAcwBlAHIAOgA6AHMAdAByAEYAbwByAG0AYQB0AEYAaQBj
AGgAaQBlAHIAADFVAHMAZQByADoAOgBzAHQAcgBBAGQAcgBlAHMAcwBlAEUAbQBlAHQAdABlAHUA
cgAAOVUAcwBlAHIAOgA6AHMAdAByAEEAZAByAGUAcwBzAGUARABlAHMAdABpAG4AYQB0AGEAaQBy
AGUAAD1VAHMAZQByADoAOgBzAHQAcgBBAGQAcgBlAHMAcwBlAEQAZQBzAHQAaQBuAGEAdABhAGkA
cgBlAEMAYwAAP1UAcwBlAHIAOgA6AHMAdAByAEEAZAByAGUAcwBzAGUARABlAHMAdABpAG4AYQB0
AGEAaQByAGUAQgBjAGMAAB1VAHMAZQByADoAOgBzAHQAcgBPAGIAagBlAHQAAAUnACcAAR1VAHMA
ZQByADoAOgBzAHQAcgBDAG8AcgBwAHMAAClVAHMAZQByADoAOgBzAHQAcgBEAGEAdABlAEYAaQBj
AGgAaQBlAHIAAC1VAHMAZQByADoAOgBzAHQAcgBEAGEAdABlAFIAZQBjAGUAcAB0AGkAbwBuAAAv
VQBzAGUAcgA6ADoAcwB0AHIAVABlAHgAdABlAEQAdQBGAGkAYwBoAGkAZQByAAAFXAAwAAADIAAA
BVwAXAAAJSQAUABhAGMAawBhAGcAZQA6ADoAaQBkAEEAYwB0AGkAbwBuAAADLAAABTAALAAAIyQA
UABhAGMAawBhAGcAZQA6ADoAaQBkAEUAdABhAHAAZQAAAzAAAB9VAHMAZQByADoAOgBzAHQAcgBJ
AGQATQBhAGkAbAAASSQAUABhAGMAawBhAGcAZQA6ADoAQwBvAG4AbgBlAGMAdABpAG8AbgBTAHQA
cgBpAG4AZwBfAFMAUQBMAFMAZQByAHYAZQByAAAzJABQAGEAYwBrAGEAZwBlADoAOgBDAGgAYQBp
AG4AZQBBAEMAaABlAHIAYwBoAGUAcgAACU4AVQBMAEwAACtFAHIAcgBlAHUAcgAgAHMAdQByACAA
bABlACAAbQBhAGkAbAAgADoAIAAAFy0AIABPAGIAagBlAHQAIAAgADoAIAABEy0AIABEAGEAdABl
ACAAOgAgAAEJLgBiAGEAawAAPVUAcABkAGEAdABlAF8ASQBuAGYAbwBGAGkAYwBoAGkAZQByAEQA
bwBzAHMAaQBlAHIAQwBpAGIAbABlAAAVQABpAGQARgBpAGMAaABpAGUAcgAAG0AAZABvAHMAcwBp
AGUAcgBDAGkAYgBsAGUAAAVEADIAAAM6AAADOwAAL1UAcwBlAHIAOgA6AHMAdAByAEQAYQB0AGUA
VAByAGEAaQB0AGUAbQBlAG4AdAAAB1AARABGAAA7VQBzAGUAcgA6ADoAcwB0AHIAQwBoAGUAbQBp
AG4AQwBvAG0AcABsAGUAdABGAGkAYwBoAGkAZQByAAA/IwAjACAATABFAEMAVABVAFIARQAgAEQA
VQAgAFAARABGACAASQBNAFAATwBTAFMASQBCAEwARQAgACMAIwAAB1gATQBMAAAvSQBOAFMARQBS
AFQAIABJAE4AVABPACAATABvAGcAIABTAEUATABFAEMAVAAgAAArJABQAGEAYwBrAGEAZwBlADoA
OgBpAGQAVAB5AHAAZQBFAHQAYQBwAGUAABNnAGUAdABkAGEAdABlACgAKQAARSMAIwAgAEwARQBD
AFQAVQBSAEUAIABEAFUAIABQAEQARgAgAEkATQBQAE8AUwBTAEkAQgBMAEUAIAAjACMAIAA6ACAA
ABNbAF4AXAB3AFwALgBAAC0AXQABDVsALwA6ADwAPgBdAAAAomzH+iDpI0uwHjtOa6lfmAAIt3pc
Vhk04IkIiYRdzYCAzJEDBhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwE
AAASDAQIABIMCDG/OFatNk41ByACAhIdEiEEIAEODgYgAwEOCA4IIAMBEh0SJQ4IAAMSKRItDgIE
IAEBDgUgAgEODgUgAg4ODgj5RhWqBCT56wcAAgESMRI1BwACARI5EjUHAAIBEj0SNQcAAgESQRI1
BwACARJFEjUHAAIBEkkSNQcAAgESTRI1BwACARJREjUHAAIBElUSNQcAAgESWRI1BAABDg4CBggD
BhEUBAAAAAAEAQAAAAQgAQEICAABEoCREYCVBSAAEoCZByACAQ4SgJkEBwESFQYgAQERgKEIAQAC
AAAAAAADAAABBSAAEoCtBSAAEoCxBiABEoC1HAMgABwDIAAOBiABHQ4dAwQgAQEcBQAAEYDBBgAD
Dg4ODgQAAQIOBQACAQ4CBgABEoDJDgYgAQERgM0IAAESgN0SgOEGIAEBEoDdBiABARKA6QUgAQES
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
ZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEAOAAyADgANgBkADUANAA4ADcAOQA1ADQANwA2AGYA
OAA0AGYAMgA0ADkAZgBlADAAOQBmAGUANwBkAGYAZAAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBp
AG8AbgAAAAAAMQAuADAALgA4ADAANAA3AC4AMgA1ADAANAA5AAAAAABwACgAAQBJAG4AdABlAHIA
bgBhAGwATgBhAG0AZQAAAFMAVABfAGIAYQA2ADMAZgA3ADUAMgAyAGIAMQAzADQAMgBmADEAYgBi
AGYANABlADIANwAzADcAYQAzAGUAYwBhADYANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMA
bwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAeAAo
AAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGIAYQA2ADMAZgA3ADUA
MgAyAGIAMQAzADQAMgBmADEAYgBiAGYANABlADIANwAzADcAYQAzAGUAYwBhADYANAAuAGQAbABs
AAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwAxADgAMgA4ADYAZAA1ADQA
OAA3ADkANQA0ADcANgBmADgANABmADIANAA5AGYAZQAwADkAZgBlADcAZABmAGQAAABEAA8AAQBQ
AHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAMAA0ADcALgAyADUAMAA0ADkA
AAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAMAA0
ADcALgAyADUAMAA0ADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwAAAMAAAAEDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA</BinaryItem>
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="113"
                Column="17" />
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="127"
                Column="17" />
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="219"
                Column="17" />
              <Breakpoint
                Enabled="True"
                File="ScriptMain.cs"
                Line="242"
                Column="13" />
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{E72606A7-E27B-4517-990E-EA82F47EE3E1}"
          DTS:From="Package\Sequence Container\pi√®ce jointe √† extraire"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Log" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{FD53C490-1EC6-4490-9045-7249ECA932CC}"
          DTS:From="Package\Sequence Container\pi√®ce jointe √† extraire"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Insert LOG en erreur"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Sequence Container\Insert LOG en erreur"
          TopLeft="381,215" />
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\Log"
          TopLeft="128,211" />
        <NodeLayout
          Size="181,42"
          Id="Package\Sequence Container\pi√®ce jointe √† extraire"
          TopLeft="240,56" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="301.666666666667,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-125.666666666667,113"
              Start="0,0"
              End="-125.666666666667,105.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.7940854326397" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.7940854326397"
                    Point2="0,45.7940854326397"
                    Point3="-4,45.7940854326397" />
                  <mssgle:LineSegment
                    End="-121.666666666667,45.7940854326397" />
                  <mssgle:CubicBezierSegment
                    Point1="-121.666666666667,45.7940854326397"
                    Point2="-125.666666666667,45.7940854326397"
                    Point3="-125.666666666667,49.7940854326397" />
                  <mssgle:LineSegment
                    End="-125.666666666667,105.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="359.333333333333,98">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110.166666666667,117"
              Start="0,0"
              End="110.166666666667,109.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.4151150054765" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.4151150054765"
                    Point2="0,47.4151150054765"
                    Point3="4,47.4151150054765" />
                  <mssgle:LineSegment
                    End="106.166666666667,47.4151150054765" />
                  <mssgle:CubicBezierSegment
                    Point1="106.166666666667,47.4151150054765"
                    Point2="110.166666666667,47.4151150054765"
                    Point3="110.166666666667,51.4151150054765" />
                  <mssgle:LineSegment
                    End="110.166666666667,109.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="39.8419856770833,52.4151150054765,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="654,342"
          Size="654,385"
          Id="Package\Sequence Container"
          TopLeft="152,74" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\pi√®ce jointe √† extraire.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\pi√®ce jointe √† extraire.EventHandlers[OnError]\Log"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>