<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/30/2017 2:30:29 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SPVMDEVAPP33"
  DTS:CreatorName="LPDP\vbarski"
  DTS:DTSID="{CAF62635-02CC-4ACC-AB93-80357FA66AB5}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="16.0.5035.3"
  DTS:LocaleID="1036"
  DTS:ObjectName="MAILExtrairePiece"
  DTS:PackageType="5"
  DTS:VersionBuild="429"
  DTS:VersionGUID="{131E7176-7C16-47EB-95EB-E3B899D13C61}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InfosFichiers]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B1F8AEA3-F81E-4404-8C03-0EE8D39216BB}"
      DTS:ObjectName="InfosFichiers">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_InfosFichiers]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=InfosFichiers;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL Server]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
      DTS:ObjectName="SQL Server">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::ConnectionString_SQLServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=TraitementsInternes;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="SQL Server"
      DTS:CreationName="DTS.LogProviderSQLServer.3"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{448BAFC8-5015-4917-87C1-FF83296A29DB}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{F18CC670-FF7C-4A23-9D2B-FCB641FFF0BC}"
      DTS:ObjectName="AccuseReception">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C8C4B439-E31B-4ADC-ACF6-255BC2C8859F}"
      DTS:ObjectName="Adresse">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{23F306C6-15C9-4F6C-9D0E-143BB96687C7}"
      DTS:ObjectName="Bcc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8B283542-9BA8-41F9-9CA8-97F2C2CAE855}"
      DTS:ObjectName="Cc">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5F89FCCB-B404-471A-A8BB-27F62794FF13}"
      DTS:ObjectName="ChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">|||||||||oui</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0CE22C9B-377E-4B75-B9E5-AA90FF5E78F8}"
      DTS:ObjectName="ChaineDeParametres">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">expediteurMail|destinataireToMail|destinataireCcMail|destinataireBccMail|objetMail|corpsMail|contenuFichier|nomFichier|extensionFichier|MailPasseEnLu</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E18EAE66-2F70-41D7-849A-EC3C4851DEC2}"
      DTS:ObjectName="ConnectionString_InfosFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=InfosFichiers;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1CE716E4-D638-4C78-A92E-FF6A19AB5E4E}"
      DTS:ObjectName="ConnectionString_SQLServer">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=SPVMDEVAPP33\INTERFACES;Initial Catalog=TraitementsInternes;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{729DA159-0619-4E6A-9FF7-3586A387B843}"
      DTS:ObjectName="Corps">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D0318404-EA5B-40DB-A05A-4FCBC6B8928A}"
      DTS:ObjectName="DossierCible">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\test\out3|c:\test\out2</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4EB3BCC2-1E00-4156-98DD-0D9C512676B0}"
      DTS:ObjectName="DossierSource">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Test</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{288EEEF1-0CED-4073-9BB1-501F75AC64E6}"
      DTS:ObjectName="Extension">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4A2F62A7-4BB7-4AEF-AB1D-0698C477FDCB}"
      DTS:ObjectName="Fichier">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">dateCourante|nomDomaine|nomOrigineMail</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{34BFE429-ED90-4283-8AE8-A6ED23C56EAC}"
      DTS:ObjectName="From">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{5B504CF5-AFC9-4235-A0E9-D229375E6694}"
      DTS:ObjectName="FtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{1E44952B-D5B6-402B-BF62-F167D838B729}"
      DTS:ObjectName="idAction">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{86AB00D8-E8DD-43E0-B3FD-F94704E73B6D}"
      DTS:ObjectName="idEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{1C171402-1ED7-4E57-91C2-86B5CADB4289}"
      DTS:ObjectName="idTypeEtape">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D74F9FD3-4D5A-4A3D-B84E-305A352C244C}"
      DTS:ObjectName="Login">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{485C521D-B37F-408A-8721-4E66906C9DBA}"
      DTS:ObjectName="Longueur">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7C8FE456-81B9-400F-8CE4-0251A52B8569}"
      DTS:ObjectName="ModeReceptionFichiers">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FCF435B1-2A8E-419E-89E5-AA2FCB970C10}"
      DTS:ObjectName="NomBDD">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B9EC2C2D-B6D9-425C-90E7-FF7908C86377}"
      DTS:ObjectName="NomColonneRetour">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B9C2954E-9631-4E59-A207-5E823AEC399E}"
      DTS:ObjectName="NomInstance">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6C67800C-69C4-4276-A1BB-2B73AF9A43A8}"
      DTS:ObjectName="NomProcedureStockee">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{51369153-CC48-4182-919D-DF8F95CEE6BC}"
      DTS:ObjectName="Port">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{D464CDF8-AB71-4563-8922-8F56C42C754B}"
      DTS:ObjectName="Position">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{41182273-1E74-442A-92B4-2A712B3279B7}"
      DTS:ObjectName="Pwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DBAFD1A9-681B-4EB6-9CDE-55A5600D2EFF}"
      DTS:ObjectName="RenommerChaineAChercher">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{061C0B42-AA8D-42D8-AA1E-C2CB03F290DA}"
      DTS:ObjectName="RenommerChaineRemplacement">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A24E9DEA-868E-4BE2-B971-465A2E440AFE}"
      DTS:ObjectName="Server">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://mail.grammeo.com/EWS/exchange.asmx</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8727ABAD-9178-45A2-B84C-6CE730A9C9B5}"
      DTS:ObjectName="SmtpLogin">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">vbarski</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E62C3D3F-8B02-4225-A8FE-F52AC477A24D}"
      DTS:ObjectName="SmtpPwd">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">barski01</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{55A12814-D1C3-487D-AA6A-3675F9BDD700}"
      DTS:ObjectName="SmtpTimeout">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">60</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4699BEB8-FC54-4F66-9F2D-56569E1E7757}"
      DTS:ObjectName="Sujet">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{44CCAACC-8021-4D5E-B9AB-BC8507ACF94E}"
      DTS:ObjectName="To">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A38C68E9-322A-45E9-A9AF-E1F7A9750D59}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="intResultTask">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{64DF0B1A-56CE-49A2-A824-120607128045}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseDestinataire">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B062AC2C-B9BD-466A-83E0-FD13FBB574ED}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strAdresseEmetteur">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FF8D3675-4EA0-4E79-B51C-CCE8901D496C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCheminCompletFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BA9CF30-57D3-46AC-9DA8-BE3B74CC1A1D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCheminFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02603F24-C55F-4240-A49C-22E6CB24199D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strCorps">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3064031E-E94B-485E-83FA-7232C7D54354}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{96672A39-D528-48AC-A267-B45BC05D776F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateReception">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65FF8C32-301C-49DF-AAA7-8D75E13FB065}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDateTraitement">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AA82F0B-EAD1-4C62-8DFE-EA86BAC45D3B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierCible">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C49655D2-9072-453B-98D3-2417ED37C2EA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strDossierOrigine">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{40DE3914-B885-498E-A7E1-80DE12F52D79}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strExtension">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74EC1377-B58C-4E01-BD08-7A8A6698B678}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strFormatFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2CB12BEC-7434-41C0-91C5-6F7668227343}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strIdMail">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CEF70755-B405-47C7-A6D2-F09D5B637A6B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strModeReception">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6A1F527B-E968-4259-91EC-1173E6BA90CC}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strNomFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8B3F04A-C1E5-4A41-A423-A887657D7EC6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strObjet">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6BBE6989-890A-4B1E-88D2-6FBFB06C36BB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strResultMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C72EA700-8510-4659-A09E-46E8D042969B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strTexteDuFichier">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{448BAFC8-5015-4917-87C1-FF83296A29DB}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{4F12470D-2591-4904-A960-B0EC92733280}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="0"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Insert LOG en erreur"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{BCB94DE9-99AD-40A6-93C8-884C0A67F79C}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert LOG en erreur"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a2331506826945bbb991786089d690cc"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::strResultMessage,$Package::idAction,$Package::idEtape,$Package::idTypeEtape">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text;
#endregion

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{

            StringBuilder sb = new StringBuilder("INSERT INTO Log SELECT ");
            
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idAction"].Value.ToString()) ? "0" : Dts.Variables["$Package::idAction"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idTypeEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idTypeEtape"].Value + ",");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idEtape"].Value + ",");
            sb.Append("0,");
            sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strResultMessage"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strResultMessage"].Value.ToString().Replace("'","''") + "',");
            sb.Append("getdate()");

            RequeteSQL(Dts.Connections[1].Name, sb.ToString());

			Dts.TaskResult = (int)ScriptResults.Success;
		}


        private void RequeteSQL(string connectionName, string sql)
        {
            using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
            {
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(sql, cnx);
                cnx.Open();
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e2a1050e88b54fa5ac3d6c300b3e9077</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e2a1050e88b54fa5ac3d6c300b3e9077</msb:DisplayName>
		<msb:ProjectId>{22371720-AFE6-4DA1-BAAC-442C7E8DC664}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a2331506826945bbb991786089d690cc.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Settings.get_Default():ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties.Sett" +
    "ings")]

namespace ST_e2a1050e88b54fa5ac3d6c300b3e9077.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e2a1050e88b54fa5ac3d6c300b3e9077")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e2a1050e88b54fa5ac3d6c300b3e9077")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_a2331506826945bbb991786089d690cc.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{97F04926-4C9D-4E57-B60F-71B4748A59DA}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_e2a1050e88b54fa5ac3d6c300b3e9077</RootNamespace><AssemblyName>ST_a2331506826945bbb991786089d690cc</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile /></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel><Prefer32Bit>false</Prefer32Bit></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon><DesignTime>True</DesignTime></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon><DesignTimeSharedInput>True</DesignTimeSharedInput></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_a2331506826945bbb991786089d690cc.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACvWblwAAAAAAAAAAOAAAiELAQsAABQAAAAIAAAAAAAAjjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADQzAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
MwAAAAAAAEgAAAACAAUAwCMAAHQPAAABAAAAAAAAAAgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBQDQAQAAAgAAEXJzAABwcxYAAAoKBgIoFwAACm8YAAAKcqMAAHBv
GQAACm8aAAAKbxsAAAooHAAACi0mAigXAAAKbxgAAApyowAAcG8ZAAAKbxoAAApyyQAAcCgdAAAK
KwVyzQAAcG8eAAAKJgYCKBcAAApvGAAACnLRAABwbxkAAApvGgAACm8bAAAKKBwAAAotJgIoFwAA
Cm8YAAAKctEAAHBvGQAACm8aAAAKcskAAHAoHQAACisFcs0AAHBvHgAACiYGAigXAAAKbxgAAApy
/QAAcG8ZAAAKbxoAAApvGwAACigcAAAKLSYCKBcAAApvGAAACnL9AABwbxkAAApvGgAACnLJAABw
KB0AAAorBXLNAABwbx4AAAomBnIhAQBwbx4AAAomBgIoFwAACm8YAAAKcicBAHBvGQAACm8aAAAK
bxsAAAooHAAACi0/clUBAHACKBcAAApvGAAACnInAQBwbxkAAApvGgAACm8bAAAKclUBAHByWQEA
cG8fAAAKcl8BAHAoIAAACisFcmUBAHBvHgAACiYGcnEBAHBvHgAACiYCAigXAAAKbyEAAAoXjCEA
AAFvIgAACm8jAAAKBm8bAAAKKAkAAAYCKBcAAAoWbyQAAAoqGzACAEoAAAADAAARAigXAAAKbyEA
AAoDbyIAAApvJQAACm8bAAAKcyYAAAoKBAZzJwAACgsGbygAAAoHF28pAAAKB28qAAAKJt4KBiwG
Bm8rAAAK3CoAAAEQAAACACEAHj8ACgAAAAAeAigsAAAKKrQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACQBAAAI34AAPwEAAAwBwAAI1N0cmluZ3MAAAAALAwA
AIgBAAAjVVMAtA0AABAAAAAjR1VJRAAAAMQNAACwAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAA
APolMwAWAAABAAAAKAAAAAUAAAAGAAAACgAAAAMAAAAsAAAAAgAAAA8AAAADAAAAAgAAAAMAAAAE
AAAAAQAAAAUAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAKAN0AyAAOAD0BFAEGAFkBugAGAG8B
XgEGAKABiwEGAHUCWwIGAKACjgIGALcCjgIGANQCjgIGAPMCjgIGAAwDjgIGACUDjgIGAEADjgIG
AFsDjgIGAHQDjgIGAK0DjQMGAM0DjQMGACIEDwQGAD8EugAGAEQEugAGAGgEjgIKAJQEfgQKAK0E
fgQGAMIEjQMOAOQEFAEGABIFBgUOACAFFAESAHkFWQUSAJEFWQUGALYFugASAOEFWQUGAP0FugAS
AAMGWQUWAGAGTgYWAHAGTgYWAJAGfQYWAKIGfQYWAKwGQgYGANgGugAAAAAAAQAAAAAAAQABAAAA
EAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAAEQAEAAsAEQB/
ARMAEQCsARcAEQD2ATkABgYqAk0AVoAyAlAAVoA6AlAAUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIB
HwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEb
AAIApyAAAAAAkRjdBI8AAgC8IAAAAACGABoCGwACAJgiAAAAAIEAHwJHAAIAACMAAAAAhhi8ARsA
BAAAAAEAQgIAAAEASAIAAAIAVwI5ALwBXgBBALwBXgBJALwBXgBRALwBXgBZALwBXgBhALwBXgBp
ALwBXgBxALwBXgB5ALwBXgCBALwBXgCJALwBYwCRALwBGwCZALwBGwAJALwBGwChAFYEaAChAHEE
bwApALwBdAC5ALwBgADJALwBGwARALwBGwDRALwBGwDZALwBXgAZADIFkwDhAIMFmADpAJoFnQDx
AKMFowAJAK0FpwD5AL0FqwD5AMsFsADZANIFtgD5ANkFvAD5AMsFwgDhAO0FyQABAZoFzwARARUG
pwDhAB4GYwARAS0GpwAZAbwBXgAhAbwB2wApAZ0GGwAxAbgG4wAxAcgG6gBBAeQGGwAZALwBGwAI
ABQAVAAIABgAWQApAJMAhgAuABsAagEuACMAagEuAGMAkAEuAAsA9wAuABMAQQEuADMAQQEuACsA
agEuADsAcAEuAEMAagEuAFsAhwFDAGsAWQBJAJMAhgBhAJsAWQCDAKsAWQB7ANYA7gACAAEAAwAD
AAAAbwEvAAAA7gE0AAAAEgJCAAIAAgADAAIAAwAFAAEABAAFAAIABQAHAASAAAABAAAATxsdfQAA
AAAAAOsDAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAAAAAAAAEAugAAAAAACwAAAAAAAAAA
AAAACgD1AAAAAAALAAAAAAAAAAAAAAAKADoFAAAAAAQAAAAAAAAAAAAAAAEAQgYAAAAAAAAAAAEA
AADsBgAABQAEAAAAADxNb2R1bGU+AFNUX2EyMzMxNTA2ODI2OTQ1YmJiOTkxNzg2MDg5ZDY5MGNj
LmRsbABSZXNvdXJjZXMAU1RfZTJhMTA1MGU4OGI1NGZhNWFjM2Q2YzMwMGIzZTkwNzcuUHJvcGVy
dGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUX2UyYTEwNTBlODhiNTRmYTVhYzNkNmMzMDBiM2U5
MDc3AFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJh
dGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRh
c2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRP
YmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNv
dXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUA
LmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJl
AGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AUmVxdWV0ZVNRTAB2YWx1
ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBjb25uZWN0aW9uTmFtZQBzcWwAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNUX2EyMzMxNTA2
ODI2OTQ1YmJiOTkxNzg2MDg5ZDY5MGNjAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVz
ZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
QXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1
dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTeXN0ZW0uVGV4dABT
dHJpbmdCdWlsZGVyAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZl
ci5NYW5hZ2VkRFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdl
dF9WYXJpYWJsZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFN0cmluZwBJ
c051bGxPckVtcHR5AENvbmNhdABBcHBlbmQAUmVwbGFjZQBDb25uZWN0aW9ucwBnZXRfQ29ubmVj
dGlvbnMASW50MzIAQ29ubmVjdGlvbk1hbmFnZXIAZ2V0X05hbWUAc2V0X1Rhc2tSZXN1bHQAZ2V0
X0Nvbm5lY3Rpb25TdHJpbmcAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2xlRGIAT2xlRGJDb25u
ZWN0aW9uAE9sZURiQ29tbWFuZABTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9wZW4A
RGJDb21tYW5kAENvbW1hbmRUeXBlAHNldF9Db21tYW5kVHlwZQBFeGVjdXRlTm9uUXVlcnkASURp
c3Bvc2FibGUARGlzcG9zZQBTVF9lMmExMDUwZTg4YjU0ZmE1YWMzZDZjMzAwYjNlOTA3Ny5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAABxUwBUAF8AZQAyAGEAMQAwADUAMABlADgAOABi
ADUANABmAGEANQBhAGMAMwBkADYAYwAzADAAMABiADMAZQA5ADAANwA3AC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAvSQBOAFMARQBSAFQAIABJAE4AVABPACAATABv
AGcAIABTAEUATABFAEMAVAAgAAAlJABQAGEAYwBrAGEAZwBlADoAOgBpAGQAQQBjAHQAaQBvAG4A
AAMsAAADMAAAKyQAUABhAGMAawBhAGcAZQA6ADoAaQBkAFQAeQBwAGUARQB0AGEAcABlAAAjJABQ
AGEAYwBrAGEAZwBlADoAOgBpAGQARQB0AGEAcABlAAAFMAAsAAAtVQBzAGUAcgA6ADoAcwB0AHIA
UgBlAHMAdQBsAHQATQBlAHMAcwBhAGcAZQAAAycAAQUnACcAAQUnACwAAQtOAFUATABMACwAABNn
AGUAdABkAGEAdABlACgAKQAAAAAAx9gjyW6/qUG0fYyVAjuXWQAIt3pcVhk04IkIiYRdzYCAzJED
BhIVAwYSGQMgAAEEAAASFQQAABIZBQABARIZBAgAEhUECAASGQMGEgwEAAASDAQIABIMBSACAQ4O
AgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgABElERVQQgABJZBiACAQ4SWQQHARIVBSABARFh
CAEAAgAAAAAAAwAAAQQgABJxBCAAEnUFIAESeRwDIAAcAyAADgQAAQIOBQACDhwcBSABEm0OBSAC
Dg4OBgADDg4ODgUgABKAgQYgARKAiRwEBwESbQcgAgEOEoCNBiABARGAnQMgAAgIBwISgI0SgJFJ
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5O
RVQgRnJhbWV3b3JrIDQuNSgBACNTVF9lMmExMDUwZTg4YjU0ZmE1YWMzZDZjMzAwYjNlOTA3NwAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBAFwzAAAAAAAAAAAAAH4zAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwMwAA
AAAAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAACwAwAAAAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAHX1PGwAAAQAdfU8bPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEEAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAA
MAAwADQAYgAwAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
AGUAMgBhADEAMAA1ADAAZQA4ADgAYgA1ADQAZgBhADUAYQBjADMAZAA2AGMAMwAwADAAYgAzAGUA
OQAwADcANwAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADkAOQAx
AC4AMwAyADAAMgA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGEA
MgAzADMAMQA1ADAANgA4ADIANgA5ADQANQBiAGIAYgA5ADkAMQA3ADgANgAwADgAOQBkADYAOQAw
AGMAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBs
AGUAbgBhAG0AZQAAAFMAVABfAGEAMgAzADMAMQA1ADAANgA4ADIANgA5ADQANQBiAGIAYgA5ADkA
MQA3ADgANgAwADgAOQBkADYAOQAwAGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABO
AGEAbQBlAAAAAABTAFQAXwBlADIAYQAxADAANQAwAGUAOAA4AGIANQA0AGYAYQA1AGEAYwAzAGQA
NgBjADMAMAAwAGIAMwBlADkAMAA3ADcAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADYAOQA5ADEALgAzADIAMAAyADkAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYAOQA5ADEALgAzADIAMAAyADkAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAkDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Log"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5B363F19-CC11-49C8-A254-8AD0DD582F02}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Log"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
              SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,1,NULL,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="$Package::idAction"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="$Package::idTypeEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="$Package::idEtape"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\pièce jointe à extraire"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{5C3E0701-CFFF-4330-AC10-8E1C4DC4140C}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="pièce jointe à extraire"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:EventHandlers>
            <DTS:EventHandler
              DTS:refId="Package\Sequence Container\pièce jointe à extraire.EventHandlers[OnError]"
              DTS:CreationName="OnError"
              DTS:DTSID="{A888874E-489E-4E4F-95AF-D633A4546695}"
              DTS:EventID="429212340"
              DTS:EventName="OnError"
              DTS:LocaleID="-1">
              <DTS:Variables>
                <DTS:Variable
                  DTS:CreationName=""
                  DTS:Description="The propagate property of the event"
                  DTS:DTSID="{266D12BD-247E-4A92-8081-14309380FA71}"
                  DTS:IncludeInDebugDump="6789"
                  DTS:Namespace="System"
                  DTS:ObjectName="Propagate">
                  <DTS:VariableValue
                    DTS:DataType="11">-1</DTS:VariableValue>
                </DTS:Variable>
              </DTS:Variables>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\pièce jointe à extraire.EventHandlers[OnError]\Log"
                  DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{b096342c-e02e-45aa-b274-f62b01637edd}"
                  DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Log"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{7E555F1D-E2F0-4C60-AB19-499D66305229}"
                      SQLTask:SqlStatementSource="INSERT INTO Log&#xA;SELECT &#xA;?,?,?,0,?,getdate()" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="$Package::idAction"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="$Package::idTypeEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="$Package::idEtape"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="3"
                        SQLTask:DtsVariableName="System::ErrorDescription"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="130"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:EventHandler>
          </DTS:EventHandlers>
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_ba63f7522b1342f1bbf4e2737a3eca64"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="$Package::AccuseReception,$Package::Adresse,$Package::Bcc,$Package::Cc,$Package::ChaineAChercher,$Package::ConnectionString_SQLServer,$Package::Corps,$Package::DossierCible,$Package::DossierSource,$Package::Fichier,$Package::From,$Package::idAction,$Package::idEtape,$Package::idTypeEtape,$Package::Longueur,$Package::Port,$Package::Position,$Package::Server,$Package::SmtpLogin,$Package::SmtpPwd,$Package::SmtpTimeout,$Package::Sujet,$Package::To"
              ReadWriteVariables="User::intResultTask,User::strAdresseDestinataire,User::strAdresseEmetteur,User::strCheminCompletFichier,User::strCheminFichier,User::strCorps,User::strDateFichier,User::strDateReception,User::strDateTraitement,User::strDossierCible,User::strDossierOrigine,User::strExtension,User::strFormatFichier,User::strIdMail,User::strModeReception,User::strNomFichier,User::strObjet,User::strResultMessage,User::strTexteDuFichier">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_ba63f7522b1342f1bbf4e2737a3eca64.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{79DF458E-D497-4E2C-8B16-99A9D1ECCC6A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_18286d548795476f84f249fe09fe7dfd</RootNamespace>
    <AssemblyName>ST_ba63f7522b1342f1bbf4e2737a3eca64</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Exchange.WebServices, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Interface\DLL\Microsoft.Exchange.WebServices.dll</HintPath>
    </Reference>
    <Reference Include="PdfSharp, Version=1.32.2608.0, Culture=neutral, PublicKeyToken=f94615aa0424f9eb, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\DLL\PdfSharp.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using Microsoft.Exchange.WebServices.Data;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Linq;
using System.Text.RegularExpressions;
using PdfSharp.Pdf;
using PdfSharp.Pdf.Content;
using PdfSharp.Pdf.Content.Objects;
using PdfSharp.Pdf.IO;
using System.Threading;

#endregion

namespace ST_18286d548795476f84f249fe09fe7dfd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP2);
                service.Timeout = (int)Dts.Variables["$Package::SmtpTimeout"].Value * 1000;
                service.Credentials = new NetworkCredential(Dts.Variables["$Package::SmtpLogin"].Value.ToString(), Dts.Variables["$Package::SmtpPwd"].Value.ToString());
                service.Url = new Uri(Dts.Variables["$Package::Server"].Value.ToString());

                EmailMessage message = new EmailMessage(service);

                string[] dossiers = Dts.Variables["$Package::DossierCible"].Value.ToString().Split('|');
                Dts.Variables["User::strCheminFichier"].Value = dossiers[0];

                foreach (string dossier in dossiers)
                {
                    if (!Directory.Exists(dossier))
                    {
                        Directory.CreateDirectory(dossier);
                    }
                }

                // Recherche du répertoire dans Inbox
                FolderView folderView = new FolderView(100);
                folderView.Traversal = FolderTraversal.Shallow;
                SearchFilter sfo = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(FolderSchema.DisplayName, Dts.Variables["$Package::DossierSource"].Value.ToString()));
                FindFoldersResults findFoldersResults = service.FindFolders(WellKnownFolderName.Inbox, sfo, folderView);

                // Recherche des messages
                ItemView iv = new ItemView(Int32.MaxValue);
                iv.OrderBy.Add(EmailMessageSchema.DateTimeReceived, SortDirection.Descending);
                SearchFilter sfm = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));
                FindItemsResults<Item> findResults;


                if (Dts.Variables["$Package::DossierSource"].Value.ToString() == "")
                {
                    findResults = service.FindItems(WellKnownFolderName.Inbox, sfm, iv);
                }
                else
                {
                    findResults = service.FindItems(findFoldersResults.Folders[0].Id, sfm, iv);
                }


               
                foreach (EmailMessage mess in findResults)
                {
                    bool UpdateRead = false;

                    mess.Load(new PropertySet(EmailMessageSchema.Attachments));

                    

                    foreach (Attachment attachment in mess.Attachments)
                    {
                        FileAttachment fileAttachment = attachment as FileAttachment;
                        if (IsFoundEmail(mess, fileAttachment, Dts.Variables["$Package::ChaineAChercher"].Value.ToString()))
                        {

                            string newNameFile = RenommageNomFichier(mess, fileAttachment.Name, Dts.Variables["$Package::Fichier"].Value.ToString());
                            
                            foreach (string dossier in dossiers)
                            {
                                fileAttachment.Load(dossier + @"\" + newNameFile);
                            }

                            try
                            {
                                SaveInfoFichier(mess, fileAttachment, newNameFile);
                            }
                            catch (Exception ex)
                            {
                                Dts.Events.FireError(1, Dts.Variables["System::TaskName"].Value.ToString(), ex.Message, null, 0);
                            }


                                StringBuilder sb = new StringBuilder("exec [dbo].[Insert_InfoFichier] ");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strNomFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strNomFichier"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strExtension"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strExtension"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strModeReception"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strModeReception"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strFormatFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strFormatFichier"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDossierCible"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDossierCible"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseEmetteur"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseEmetteur"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strAdresseDestinataire"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strAdresseDestinataire"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strObjet"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strObjet"].Value.ToString().Replace("'", "''") + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strCorps"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strCorps"].Value.ToString().Replace("'", "''") + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDossierOrigine"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDossierOrigine"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDateFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDateFichier"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strDateReception"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strDateReception"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strTexteDuFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strTexteDuFichier"].Value + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strCheminFichier"].Value.ToString()) ? "NULL," : "'" + Dts.Variables["User::strCheminFichier"].Value.ToString().Replace(@"\",@"\\") + "',");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idAction"].Value.ToString()) ? "0," : Dts.Variables["$Package::idAction"].Value + ",");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["$Package::idEtape"].Value.ToString()) ? "0" : Dts.Variables["$Package::idEtape"].Value + ",");
                                sb.Append(String.IsNullOrEmpty(Dts.Variables["User::strIdMail"].Value.ToString()) ? "NULL" : "'" + Dts.Variables["User::strIdMail"].Value + "'");
                                
                            try
                            {
                                InsertInfoFichier(Dts.Connections[0].Name, sb.ToString());
                                UpdateRead = true;
                            }
                            catch (Exception ex)
                            {
                                Dts.Events.FireError(1, Dts.Variables["System::TaskName"].Value.ToString(), ex.Message , null, 0);
                            }
                        }
                    }

                    // Si un fichier a été extrait alors on passe l'email à lu
                    if (UpdateRead)
                    {
                        string[] ListResearch = Dts.Variables["$Package::ChaineAChercher"].Value.ToString().Split('|');
                        if (ListResearch[9].ToUpper().Equals("OUI"))
                        {
                            mess.IsRead = true;
                            mess.Update(ConflictResolutionMode.AutoResolve);
                        }
                    }
                }

                
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch(Exception ex)
            {
                Dts.Variables["User::strResultMessage"].Value = ex.Message.ToString();
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            finally
            {
                Dts.Variables["User::intResultTask"].Value = (Dts.TaskResult==0 ? 1 : 0);
            }
		}

        private string TraitementTexte(string texte)
        {
            string newTexte = texte.Replace(@"'", @"''");
            newTexte = newTexte.Replace(@"\", @"\\");
           
            return newTexte;
        }


        private string RenommageNomFichier(EmailMessage Mess, string NomFichier, string OptionRenommage)
        {
            string newNomFichier = NomFichier;

            if (OptionRenommage.Contains("nomOrigineMail"))
            {
                Mess.Load(new PropertySet(EmailMessageSchema.Sender));
                string senderMessage = Mess.Sender.Address.ToString();
                newNomFichier = senderMessage + "-" + newNomFichier;
            }
            if (OptionRenommage.Contains("nomDomaine"))
            {
                Mess.Load(new PropertySet(EmailMessageSchema.Sender));
                string[] mailAdress = Mess.Sender.Address.Split('@');
                newNomFichier = mailAdress[1].ToString() + "-" + newNomFichier;
            }
            if (OptionRenommage.Contains("dateCourante"))
            {
                Mess.Load(new PropertySet(EmailMessageSchema.DateTimeReceived));
                string dateMessage = Mess.DateTimeReceived.ToString("yyyyMMdd");
                newNomFichier = dateMessage + "-" + newNomFichier;
            }
            
            
           
            return newNomFichier;
        }

        private bool IsFoundEmail(EmailMessage Mess, FileAttachment PJ, string StringResearch)
        {
            if (!String.IsNullOrEmpty(StringResearch))
            {
                string[] ListResearch = StringResearch.Split('|');
                if (ListResearch.Length != 10)
                {
                    throw new System.IndexOutOfRangeException("Erreur dans le parametrage de la chaine de recherche");
                }

                // expediteur
                if (!String.IsNullOrEmpty(ListResearch[0]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.Sender));
                    if (!Mess.Sender.Address.ToUpper().Contains(ListResearch[0].ToString().ToUpper()))
                    {
                        return false;
                    }
                }

                // destinataireTo
                if (!String.IsNullOrEmpty(ListResearch[1]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.ToRecipients));
                    string chaine = "";
                    foreach (EmailAddress ToRecipient in Mess.ToRecipients)
                    {
                        chaine = chaine + " " + ToRecipient.Address;
                    }

                    if (!chaine.ToUpper().Contains(ListResearch[1].ToString().ToUpper()))
                    {
                        return false;
                    }
                }

                // destinataireCc
                if (!String.IsNullOrEmpty(ListResearch[2]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.CcRecipients));
                    string chaine = "";
                    foreach (EmailAddress CcRecipient in Mess.CcRecipients)
                    {
                        chaine = chaine + " " + CcRecipient.Address;
                    }

                    if (!chaine.ToUpper().Contains(ListResearch[2].ToString().ToUpper()))
                    {
                        return false;
                    }
                }

                // destinataireBcc
                if (!String.IsNullOrEmpty(ListResearch[3]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.BccRecipients));
                    string chaine = "";
                    foreach (EmailAddress BccRecipient in Mess.BccRecipients)
                    {
                        chaine = chaine + " " + BccRecipient.Address;
                    }

                    if (!chaine.ToUpper().Contains(ListResearch[3].ToString().ToUpper()))
                    {
                        return false;
                    }
                }

                // objet
                if (!String.IsNullOrEmpty(ListResearch[4]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.Subject));
                    if (!Mess.Subject.Contains(ListResearch[4].ToString()))
                    {
                        return false;
                    }
                }

                // corpsMail
                if (!String.IsNullOrEmpty(ListResearch[5]))
                {
                    Mess.Load(new PropertySet(EmailMessageSchema.Body));
                    if (!Mess.Body.Text.Contains(ListResearch[5].ToString()))
                    {
                        return false;
                    }
                }

                // contenuFichier
                if (!String.IsNullOrEmpty(ListResearch[6]) && (PJ == null))
                {
                    return false;
                }

                if (!String.IsNullOrEmpty(ListResearch[6]) && (PJ != null) && (new FileInfo(PJ.Name).Extension.ToUpper().Equals(".TXT") || new FileInfo(PJ.Name).Extension.ToUpper().Equals(".XML")))
                {
                    try
                    {
                        Stream fileStream = new MemoryStream();
                        PJ.Load(fileStream);
                        fileStream.Seek(0, SeekOrigin.Begin);
                        using (StreamReader sr = new StreamReader(fileStream))
                        {

                            string contents = sr.ReadToEnd();
                            if (!contents.ToString().Contains(ListResearch[6].ToString()))
                            {
                                return false;
                            }
                        }
                    }
                    catch
                    {
                        return false;
                    }
                }


                // extension de la PJ

                if (!String.IsNullOrEmpty(ListResearch[8]) && (PJ == null))
                {
                    return false;
                }

                if (!String.IsNullOrEmpty(ListResearch[8]) && (PJ != null) && !new FileInfo(PJ.Name).Extension.ToUpper().Contains(ListResearch[8].ToString().ToUpper()))
                {
                    return false;
                }


                // dernière recherche sur le nom de la PJ
                if (!String.IsNullOrEmpty(ListResearch[7]) && (PJ == null))
                {
                    return false;
                }


                if (!String.IsNullOrEmpty(ListResearch[7]) && (PJ != null))
                {
                    string[] tabNomFichier = ListResearch[7].ToString().Split('-');
                    foreach (string nomFichier in tabNomFichier)
                    {
                        string extractFileName = Path.GetFileNameWithoutExtension(new FileInfo(PJ.Name).Name);

                        if (extractFileName.Contains(nomFichier))
                        {
                            //OK trouvé
                            return true;
                        }
                    }

                    return false;
                }

            }

            // OK trouvé
            return true;
        }



         private void SaveInfoFichier(EmailMessage mess, FileAttachment fileMessage, string NewNameFile)
         {
            
            Dts.Variables["User::strIdMail"].Value = mess.Id.UniqueId; 
             
            mess.Load(new PropertySet(EmailMessageSchema.DateTimeReceived));
            Dts.Variables["User::strDateReception"].Value = mess.DateTimeReceived.Year + "-" + mess.DateTimeReceived.Month.ToString("D2") + "-" + mess.DateTimeReceived.Day.ToString("D2") + " " + mess.DateTimeReceived.Hour.ToString("D2") + ":" + mess.DateTimeReceived.Minute.ToString("D2") + ":" + mess.DateTimeReceived.Second.ToString("D2");

            mess.Load(new PropertySet(EmailMessageSchema.Subject));
            if(mess.Subject==null) 
                Dts.Variables["User::strObjet"].Value = "";
            else
                Dts.Variables["User::strObjet"].Value =  TraitementTexte(mess.Subject.ToString());

            mess.Load(new PropertySet(EmailMessageSchema.Body));
            if (mess.Body==null)
                Dts.Variables["User::strCorps"].Value = "";
            else
                Dts.Variables["User::strCorps"].Value = TraitementTexte(mess.Body.ToString());

            mess.Load(new PropertySet(EmailMessageSchema.ToRecipients));
            

            
            StringBuilder sb = new StringBuilder();
            foreach (EmailAddress ToRecipient in mess.ToRecipients)
            {
                sb.Append(ToRecipient.Address.ToString() + ";");
            }
            Dts.Variables["User::strAdresseDestinataire"].Value = sb.ToString().Substring(0,sb.Length-1); 

            
            mess.Load(new PropertySet(EmailMessageSchema.Sender));
            if (mess.Sender != null)
            {
                Dts.Variables["User::strAdresseEmetteur"].Value = mess.Sender.Address.ToString();
                Dts.Variables["User::strModeReception"].Value = mess.Sender.RoutingType.ToString();
            }

            FileInfo file = new FileInfo(fileMessage.FileName);

            Dts.Variables["User::strDateFichier"].Value = file.CreationTime.Year + "-" + file.CreationTime.Month.ToString("D2") + "-" + file.CreationTime.Day.ToString("D2") + " " + file.CreationTime.Hour.ToString("D2") + ":" + file.CreationTime.Minute.ToString("D2") + ":" + file.CreationTime.Second.ToString("D2");
            Dts.Variables["User::strDateTraitement"].Value = DateTime.Now.Year + "-" + DateTime.Now.Month.ToString("D2") + "-" + DateTime.Now.Day.ToString("D2") + " " + DateTime.Now.Hour.ToString("D2") + ":" + DateTime.Now.Minute.ToString("D2") + ":" + DateTime.Now.Second.ToString("D2");
            
                
            Dts.Variables["User::strNomFichier"].Value = TraitementTexte(Path.GetFileNameWithoutExtension(file.Name.ToString()));
            Dts.Variables["User::strExtension"].Value = file.Extension.ToString().Replace(".","");
            Dts.Variables["User::strFormatFichier"].Value = Dts.Variables["User::strExtension"].Value.ToString().ToUpper();
            Dts.Variables["User::strDossierCible"].Value = Dts.Variables["$Package::DossierCible"].Value.ToString();

            if (Dts.Variables["User::strExtension"].Value.ToString().ToUpper().Equals("PDF"))
            {

                Dts.Variables["User::strCheminCompletFichier"].Value = Dts.Variables["User::strCheminFichier"].Value.ToString() + @"\" + NewNameFile;

                try
                {

                    Thread th1 = new Thread(ThreadSleep);
                    Thread th2 = new Thread(GetText);
                    th1.Start();
                    th2.Start();

                    while (th1.IsAlive)
                    { }

                    if (th2.IsAlive)
                    {
                        th2.Abort();
                        Dts.Variables["User::strTexteDuFichier"].Value = "## LECTURE DU PDF IMPOSSIBLE ##";
                    }
                }
                catch (Exception ex)
                {
                    Dts.Variables["User::strTexteDuFichier"].Value = ex.Message;
                }

            }
            else if (Dts.Variables["User::strExtension"].Value.ToString().ToUpper().Equals("XML"))
            {
                Dts.Variables["User::strCheminCompletFichier"].Value = Dts.Variables["User::strCheminFichier"].Value.ToString() + @"\" + NewNameFile;

                try
                {                    
                    StringBuilder sbtemp = new StringBuilder();
                    StreamReader fileReader = new StreamReader(Dts.Variables["User::strCheminCompletFichier"].Value.ToString());
                    sbtemp.Append(fileReader.ReadToEnd());
                    fileReader.Close();
                    Dts.Variables["User::strTexteDuFichier"].Value = sbtemp.ToString();
                }
                catch (Exception ex)
                {
                    Dts.Variables["User::strTexteDuFichier"].Value = ex.Message;
                }

            }
            else
            {
                Dts.Variables["User::strCheminCompletFichier"].Value = "";
                Dts.Variables["User::strTexteDuFichier"].Value = "";
            }
         }


        private static FolderId searchOrCreateFolderId(ExchangeService service, string folderName, bool create)
        {
            Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
            rootfolder.Load();

            foreach (Folder folder in rootfolder.FindFolders(new FolderView(Int32.MaxValue)))
            {
                if (folder.DisplayName == folderName)
                {
                    return folder.Id;
                }
            }

            if (create)
            {
                Folder newFolder = new Folder(service);
                newFolder.DisplayName = folderName;
                newFolder.Save(WellKnownFolderName.MsgFolderRoot);

                return newFolder.Id;
            }
            else
                return null;
        }

        


        private void InsertInfoFichier(string connectionName, string sql)
        {
            using (System.Data.OleDb.OleDbConnection cnx = new System.Data.OleDb.OleDbConnection(Dts.Connections[connectionName].ConnectionString.ToString()))
            {
                System.Data.OleDb.OleDbCommand cmd = new System.Data.OleDb.OleDbCommand(sql, cnx);
                cnx.Open();
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
            }
                
        }

       

        public void GetText()
        {
            string pdfFileName = Dts.Variables["User::strCheminCompletFichier"].Value.ToString();
            
            try
            {
                using (var _document = PdfReader.Open(pdfFileName, PdfDocumentOpenMode.ReadOnly))
                {
                

                        var result = new StringBuilder();
                        foreach (var page in _document.Pages.OfType<PdfPage>())
                        {
                            ScriptMain.ExtractText(ContentReader.ReadContent(page), result);
                            result.AppendLine();
                        }
                        Dts.Variables["User::strTexteDuFichier"].Value = TraitementTexte(result.ToString());
                
            
                }
            }
            catch
            {
                Dts.Variables["User::strTexteDuFichier"].Value = "## LECTURE DU PDF IMPOSSIBLE ##";
            }
        }

        public void ThreadSleep()
        {
            Thread.Sleep(5000);
        }


        private static void ExtractText(CObject obj, StringBuilder target)
        {
            if (obj is CArray)
                ExtractText((CArray)obj, target);
            else if (obj is CComment)
                ExtractText((CComment)obj, target);
            else if (obj is CInteger)
                ExtractText((CInteger)obj, target);
            else if (obj is CName)
                ExtractText((CName)obj, target);
            else if (obj is CNumber)
                ExtractText((CNumber)obj, target);
            else if (obj is COperator)
                ExtractText((COperator)obj, target);
            else if (obj is CReal)
                ExtractText((CReal)obj, target);
            else if (obj is CSequence)
                ExtractText((CSequence)obj, target);
            else if (obj is CString)
                ExtractText((CString)obj, target);
            else
                throw new NotImplementedException(obj.GetType().AssemblyQualifiedName);
        }

        private static void ExtractText(CArray obj, StringBuilder target)
        {
            foreach (var element in obj)
            {
                ExtractText(element, target);
            }
        }
        private static void ExtractText(CComment obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CInteger obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CName obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CNumber obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(COperator obj, StringBuilder target)
        {
            if (obj.OpCode.OpCodeName == OpCodeName.Tj || obj.OpCode.OpCodeName == OpCodeName.TJ)
            {
                foreach (var element in obj.Operands)
                {
                    ExtractText(element, target);
                }
                target.Append(" ");
            }
        }
        private static void ExtractText(CReal obj, StringBuilder target) { /* nothing */ }
        private static void ExtractText(CSequence obj, StringBuilder target)
        {
            foreach (var element in obj)
            {
                ExtractText(element, target);
            }
        }
        private static void ExtractText(CString obj, StringBuilder target)
        {
            target.Append(obj.Value);
        }



        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_18286d548795476f84f249fe09fe7dfd</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_18286d548795476f84f249fe09fe7dfd</msb:DisplayName>
		<msb:ProjectId>{BBE79254-B292-4136-BC69-FEE9DDA1F81E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_ba63f7522b1342f1bbf4e2737a3eca64.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Settings.get_Default():ST_18286d548795476f84f249fe09fe7dfd.Properties.Sett" +
    "ings")]

namespace ST_18286d548795476f84f249fe09fe7dfd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_18286d548795476f84f249fe09fe7dfd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_18286d548795476f84f249fe09fe7dfd")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_18286d548795476f84f249fe09fe7dfd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_18286d548795476f84f249fe09fe7dfd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_ba63f7522b1342f1bbf4e2737a3eca64.dll">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
AigXAAAKbxgAAApyvwIAcG8ZAAAKbxoAAApyhwIAcChIAAAKKwVyjQIAcG9JAAAKJhEQAigXAAAK
bxgAAApy7QIAcG8ZAAAKbxoAAApvHAAACihHAAAKLStygwIAcAIoFwAACm8YAAAKcu0CAHBvGQAA
Cm8aAAAKcocCAHAoSAAACisFco0CAHBvSQAACiYREAIoFwAACm8YAAAKchsDAHBvGQAACm8aAAAK
bxwAAAooRwAACi0rcoMCAHACKBcAAApvGAAACnIbAwBwbxkAAApvGgAACnKHAgBwKEgAAAorBXKN
AgBwb0kAAAomERACKBcAAApvGAAACnJHAwBwbxkAAApvGgAACm8cAAAKKEcAAAotK3KDAgBwAigX
AAAKbxgAAApyRwMAcG8ZAAAKbxoAAApyhwIAcChIAAAKKwVyjQIAcG9JAAAKJhEQAigXAAAKbxgA
AApyeQMAcG8ZAAAKbxoAAApvHAAACihHAAAKLStygwIAcAIoFwAACm8YAAAKcnkDAHBvGQAACm8a
AAAKcocCAHAoSAAACisFco0CAHBvSQAACiYREAIoFwAACm8YAAAKcrMDAHBvGQAACm8aAAAKbxwA
AAooRwAACi0/coMCAHACKBcAAApvGAAACnKzAwBwbxkAAApvGgAACm8cAAAKcoMCAHBy0QMAcG9K
AAAKcocCAHAoQQAACisFco0CAHBvSQAACiYREAIoFwAACm8YAAAKctcDAHBvGQAACm8aAAAKbxwA
AAooRwAACi0/coMCAHACKBcAAApvGAAACnLXAwBwbxkAAApvGgAACm8cAAAKcoMCAHBy0QMAcG9K
AAAKcocCAHAoQQAACisFco0CAHBvSQAACiYREAIoFwAACm8YAAAKcvUDAHBvGQAACm8aAAAKbxwA
AAooRwAACi0rcoMCAHACKBcAAApvGAAACnL1AwBwbxkAAApvGgAACnKHAgBwKEgAAAorBXKNAgBw
b0kAAAomERACKBcAAApvGAAACnIlBABwbxkAAApvGgAACm8cAAAKKEcAAAotK3KDAgBwAigXAAAK
bxgAAApyJQQAcG8ZAAAKbxoAAApyhwIAcChIAAAKKwVyjQIAcG9JAAAKJhEQAigXAAAKbxgAAApy
TwQAcG8ZAAAKbxoAAApvHAAACihHAAAKLStygwIAcAIoFwAACm8YAAAKck8EAHBvGQAACm8aAAAK
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
EwAAAQMoGAAABioCdRQAAAEsDQJ0FAAAAQMoGQAABioCdRUAAAEsDQJ0FQAAAQMoGgAABioCb6QA
AApvpQAACnOmAAAKegAAGzACACwAAAAKAAARAm+nAAAKCysOB2+oAAAKCgYDKBEAAAYHb08AAAot
6t4KBywGB29QAAAK3CoBEAAAAgAHABohAAoAAAAABioGKgYqBiobMAIAWwAAAAoAABECb6kAAAp7
qgAACh86Lg8Cb6kAAAp7qgAACh87MzwCb6sAAApvpwAACgsrDgdvqAAACgoGAygRAAAGB29PAAAK
LereCgcsBgdvUAAACtwDcmEGAHBvSQAACiYqAAEQAAACACoAGkQACgAAAAAGKgAAGzACACwAAAAK
AAARAm+nAAAKCysOB2+oAAAKCgYDKBEAAAYHb08AAAot6t4KBywGB29QAAAK3CoBEAAAAgAHABoh
AAoAAAAAOgMCb6wAAApvSQAACiYqHgIorQAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAD0CwAAI34AAGAMAAAkEQAAI1N0cmluZ3MAAAAAhB0A
AEgHAAAjVVMAzCQAABAAAAAjR1VJRAAAANwkAAAYBgAAI0Jsb2IAAAAAAAAAAgAAAVcdogkJCwAA
APolMwAWAAABAAAAgQAAAAUAAAAGAAAAGwAAACQAAACtAAAAAgAAAA8AAAAKAAAAAgAAAAMAAAAE
AAAACwAAAAEAAAAKAAAAAQAAAAEAAAABAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYA
WQG6AAYAbwFeAQYAoAGLARIAcgJOAhIAkwJOAhIAvwJOAhIAyAJOAhYAOwMeAwYATwNDAxYAaQMe
AxYAcAMeAxYAeQMeAxYAggMeAxYAiAMeAxYAkAMeAxYAmgMeAxYAoAMeAxYAqgMeAwYAdwRdBAYA
ogSQBAYAuQSQBAYA1gSQBAYA9QSQBAYADgWQBAYAJwWQBAYAQgWQBAYAXQWQBAYAdgWQBAYArwWP
BQYAzwWPBQYAJAYRBgYAQQa6AAYARga6AAYAagaQBAoAlgaABgoArwaABgYAxAaPBQ4A5gYUARIA
CAdOAg4AGAcUARoAcQdRBxoAiQdRBwYApQe6ABIAqwdOAgoA3wfUBxIA8QdOAh4A3wfUBwoAIQi6
AB4AIQi6AAYALQi6AAYAMgi6AAYAUwhJCAYAZAhJCBIAgghOAhIAjQhOAhIAqwhOAhIAuAhOAhIA
xQhOAu8A5AgAABIA7ghOAu8ABQkAABIAHAlOAhIALAlOAhIAPwlOAhIAXwlOAhIAaAlOAhIAhglO
AhIAoglOAhIAtAlOAgYAzgm6ABIA4glOAhIA9QlOAhIA+glOAiIALAoNChIAOQpOAgYALAoNCiIA
bgpTCgYAbgpTChIAogpOAhIArgpOAhIAwQpOAhIA5gpOAhIAAgtOAg4AHQsUAQYAPAu6ABoAeQtR
BxoAlQtRBwYAugunCwYAzwu6ABIA/QtOAhIASQxOAiIAbQy6AAYAbQy6AAYAiwy6ABIAsQxOAhIA
MA1OAgYATg1JCAYAVw1JCAYAdA1JCCIAgQ1JCAYAgQ1JCAYAiA1JCAYAmA1JCAYApQ1JCAYAug1J
CBIA2w1OAhIA4g1OAgYAjw5+DgYAmw5+DiYAHQ8LDyYALQ8LDyYATQ86DyYAXw86DyYAaQ//DhYA
pQ+VDxYAvA+vDxYAyA+VDxYA3A+vDyoABxD7DwYAEhBTCgYAIBCnCxYAMxCvDxYAUBA7EAYAnRC6
ABYAtRAeAxYAxxAeAwAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEA
EAB0AH8ADQAEAAgAAwEAAKMAAAARAAQAHAARAH8BEwARAKwBFwARAPYBOQAGBrID1wBWgLoD2gBW
gMID2gBQIAAAAACDGLwBGwABAFggAAAAAJMIwgEfAAEAkSAAAAAAkwjWASQAAQCYIAAAAACTCOIB
KQABAKAgAAAAAJYIBgI9AAIAsyAAAAAAhhi8ARsAAgCnIAAAAACRGN8GHgECALwgAAAAAIYAGgIb
AAIAtCwAAAAAgQAfAkcAAgDkLAAAAACBAH8CVQADAOwtAAAAAIEAogJdAAYAhDIAAAAAgQCvAmYA
CQBoOwAAAACRANgCbwAMAAg8AAAAAIEA7wJ4AA8AcDwAAAAAhgABAxsAEQBwPQAAAACGAAkDGwAR
AHw9AAAAAJEAXQOHABEAWD4AAAAAkQBdA48AEwCgPgAAAACRAF0DlwAVAKI+AAAAAJEAXQOfABcA
pD4AAAAAkQBdA6cAGQCmPgAAAACRAF0DrwAbAKg+AAAAAJEAXQO3AB0AID8AAAAAkQBdA78AHwAk
PwAAAACRAF0DxwAhAGw/AAAAAJEAXQPPACMAez8AAAAAhhi8ARsAJQAAAAEAygMAAAEA0AMAAAEA
1gMAAAIA2wMAAAMA5gMAAAEA1gMAAAIA9gMAAAMA+QMAAAEACAQAAAIADQQAAAMAGQQAAAEAJQQA
AAIALQQAAAMAOAQAAAEAPwQAAAIATgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIA
VgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIAVgQAAAEAUgQA
AAIAVgQAAAEAUgQAAAIAVgQAAAEAUgQAAAIAVgSxALwB6AC5ALwB6ADBALwB6ADJALwB6ADRALwB
6ADZALwB6ADhALwB6ADpALwB6ADxALwB6AD5ALwB6AABAbwB7QAJAbwBGwARAbwBGwAJALwBGwAZ
AVgG8gAZAXMG+wApALwBAQExAbwBDgFBAbwBGwARALwBGwBJAbwBGwBRALwBIgEZACoHKQFZAXsH
LwFhAZIHNQFpAZsHPAF5Ab8H7QAJAMsHQAGBAbwBeACJAQUIRAF5AREITQGZAbwB6ABRACUIVAE5
ALwBWwGxATkIYQFpAT8IaAG5AV0IbQG5AXIIcgHJAbwB7QDJAZ0IeQHhAdgIgAHxAbwBhQEBArwB
jQFRAFMJmAEhArwB7QAhAnoJpwExApEJgAEpArAJrQFBAscJgAGxAdYJtwFRAAMKvQERAkAK0QEM
AJIH5QFxAkwK6wFRAAMK8AEUAHwKDAIcAIoKHwIxApYKgAGRArwBJAKZArwKLAJZAtYKMwIkAHwK
DAIsAIoKHwKxAg0LQAGxARYLSwJBALwK6ABZATELUgLBAkYLQAG5AlILWAJhALwB6ACxAVwLbQGx
ARYLYQJhAGoLaAKxAXELbgKxARYLdAJZAYULegLJApIHgALRAg0LQAHZAsYLhwLhAtsLGwCxAeML
QAGxAesLiwI5APILkAJZAhQMlQJZARsM7QBZASoMnAKxATkMiwJBAkIMgAE5AFYMAAPxAmEMQAFZ
AnYMBgMBA8sHRwAJA7wB6ABBAqQMgAE5AMgMJQM0AHwKDAI8AIoKHwJBAtkMgAE5AOYMJQNBAvcM
gAE5AAUNJQMxAhcNgAFZAh8NQAExAisNgAFZAjwNPQMZA0UNQAEhA7wB6AApA2YNQAExA7wBGwBB
ALwKQwNBA5MNSgNRA7wBUgNZA7ANQAEpAw0LQAFhA78NWQNZAkwKsgNxA+wNQAEBA/kNnAIBAwIO
nAJxAcsHRwABAwwOnAIBAxQOnAIBAx0OnAIBAygOnAKxARYLuANhALwBGwCxARYLvgNhADMOnAKx
AT4OxAPxAkgOQAFBAFgOQAEpA2UOygMBA3YO0AN5A7wB1gOBA7wB3AOBA6IOGwCBA6gOhwKBA7QO
GwBRA7wB6ABZA7oOGwBxAsAOZwSZArwKGwBxAlMJcgQRAnwKewREAIoKHwJxAsUOQAFxArwBWwFx
AtUO6ABxAuUOjwTRAuoOQAGJA7wB6ACRA7wBrASZA1oPGwChA3UPtAShA4UPnAKxA1oPxAS5A+UP
zgTRAywQ1ARMAHwK8QRUAIoKHwLxA14QBAVhAGoQDAWBA3UQJQUJAHsQKgUZAYMQQAH5A7wB6ACh
AHwKMAVcAIoKHwKRALwQTgUBBMcQVAWRANIQWQWpAJsHQAEZALwBGwAIABQA3gAIABgA4wApAJMA
FQEuABsA0QUuACMA0QUuAGMA9wUuAAsAXgUuABMAqAUuADMAqAUuACsA0QUuADsA1wUuAEMA0QUu
AFsA7gVDAGsA4wBJAJMAFQFhAJsA4wCDAKsA4wAJAaAC/AIMA14D4wOWBLsEEQVCBQIAAQADAAMA
AABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUAAQAEAAUAAgAFAAcA3AEDAhYCOQJCAisDNAOG
BOgE+wQ6BQSAAAABAAAAYxsNcQAAAAAAAO0FAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAAAAAA
AAAAAAEAugAAAAAACwAAAAAAAAAAAAAACgD1AAAAAAAPAAAAAAAAAAAAAABMAC8CAAAAAAEAIAAw
CgAAAAAAAH4AFQMAAAAACwAAAAAAAAAAAAAACgAyBwAAAAACAAAAAAAAAAAAAAABALoAAAAAAAIA
AAAAAAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQD/DgAAAAAEAAAAAAAAAAAAAAABAO8PAAAA
AAAAAAABAAAA3xAAAAUABAA9AeIEAAAAPE1vZHVsZT4AU1RfYmE2M2Y3NTIyYjEzNDJmMWJiZjRl
MjczN2EzZWNhNjQuZGxsAFJlc291cmNlcwBTVF8xODI4NmQ1NDg3OTU0NzZmODRmMjQ5ZmUwOWZl
N2RmZC5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfMTgyODZkNTQ4Nzk1NDc2Zjg0
ZjI0OWZlMDlmZTdkZmQAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3Rl
bS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFZT
VEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VN
YW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291
cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQATWFpbgBUcmFp
dGVtZW50VGV4dGUATWljcm9zb2Z0LkV4Y2hhbmdlLldlYlNlcnZpY2VzAE1pY3Jvc29mdC5FeGNo
YW5nZS5XZWJTZXJ2aWNlcy5EYXRhAEVtYWlsTWVzc2FnZQBSZW5vbW1hZ2VOb21GaWNoaWVyAEZp
bGVBdHRhY2htZW50AElzRm91bmRFbWFpbABTYXZlSW5mb0ZpY2hpZXIARm9sZGVySWQARXhjaGFu
Z2VTZXJ2aWNlAHNlYXJjaE9yQ3JlYXRlRm9sZGVySWQASW5zZXJ0SW5mb0ZpY2hpZXIAR2V0VGV4
dABUaHJlYWRTbGVlcABQZGZTaGFycABQZGZTaGFycC5QZGYuQ29udGVudC5PYmplY3RzAENPYmpl
Y3QAU3lzdGVtLlRleHQAU3RyaW5nQnVpbGRlcgBFeHRyYWN0VGV4dABDQXJyYXkAQ0NvbW1lbnQA
Q0ludGVnZXIAQ05hbWUAQ051bWJlcgBDT3BlcmF0b3IAQ1JlYWwAQ1NlcXVlbmNlAENTdHJpbmcA
dmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUAdmFsdWUAdGV4dGUATWVzcwBOb21GaWNoaWVyAE9wdGlv
blJlbm9tbWFnZQBQSgBTdHJpbmdSZXNlYXJjaABtZXNzAGZpbGVNZXNzYWdlAE5ld05hbWVGaWxl
AHNlcnZpY2UAZm9sZGVyTmFtZQBjcmVhdGUAY29ubmVjdGlvbk5hbWUAc3FsAG9iagB0YXJnZXQA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVt
LlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3Nl
bWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFNUX2JhNjNmNzUyMmIxMzQyZjFiYmY0ZTI3MzdhM2VjYTY0AFN5c3RlbS5EaWFnbm9zdGljcwBE
ZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBF
eGNoYW5nZVZlcnNpb24AU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBWYXJpYWJsZXMA
Z2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUASW50MzIARXhjaGFuZ2VT
ZXJ2aWNlQmFzZQBzZXRfVGltZW91dABUb1N0cmluZwBTeXN0ZW0uTmV0AE5ldHdvcmtDcmVkZW50
aWFsAEV4Y2hhbmdlQ3JlZGVudGlhbHMAb3BfSW1wbGljaXQAc2V0X0NyZWRlbnRpYWxzAFVyaQBz
ZXRfVXJsAENoYXIAU3RyaW5nAFNwbGl0AHNldF9WYWx1ZQBTeXN0ZW0uSU8ARGlyZWN0b3J5AEV4
aXN0cwBEaXJlY3RvcnlJbmZvAENyZWF0ZURpcmVjdG9yeQBGb2xkZXJWaWV3AEZvbGRlclRyYXZl
cnNhbABzZXRfVHJhdmVyc2FsAFNlYXJjaEZpbHRlcgBGb2xkZXJTY2hlbWEAUHJvcGVydHlEZWZp
bml0aW9uAERpc3BsYXlOYW1lAElzRXF1YWxUbwBQcm9wZXJ0eURlZmluaXRpb25CYXNlAFNlYXJj
aEZpbHRlckNvbGxlY3Rpb24ATG9naWNhbE9wZXJhdG9yAEZpbmRGb2xkZXJzUmVzdWx0cwBXZWxs
S25vd25Gb2xkZXJOYW1lAEZpbmRGb2xkZXJzAEl0ZW1WaWV3AE9yZGVyQnlDb2xsZWN0aW9uAGdl
dF9PcmRlckJ5AEl0ZW1TY2hlbWEARGF0ZVRpbWVSZWNlaXZlZABTb3J0RGlyZWN0aW9uAEFkZABF
bWFpbE1lc3NhZ2VTY2hlbWEASXNSZWFkAEJvb2xlYW4Ab3BfRXF1YWxpdHkARmluZEl0ZW1zUmVz
dWx0c2AxAEl0ZW0AVmlld0Jhc2UARmluZEl0ZW1zAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RN
b2RlbABDb2xsZWN0aW9uYDEARm9sZGVyAGdldF9Gb2xkZXJzAGdldF9JZABTeXN0ZW0uQ29sbGVj
dGlvbnMuR2VuZXJpYwBJRW51bWVyYXRvcmAxAEdldEVudW1lcmF0b3IAZ2V0X0N1cnJlbnQAQXR0
YWNobWVudHMAUHJvcGVydHlTZXQAU2VydmljZU9iamVjdABMb2FkAEF0dGFjaG1lbnRDb2xsZWN0
aW9uAGdldF9BdHRhY2htZW50cwBDb21wbGV4UHJvcGVydHlDb2xsZWN0aW9uYDEAQXR0YWNobWVu
dABnZXRfTmFtZQBDb25jYXQARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEV4Y2VwdGlv
bgBnZXRfTWVzc2FnZQBGaXJlRXJyb3IASXNOdWxsT3JFbXB0eQBBcHBlbmQAUmVwbGFjZQBDb25u
ZWN0aW9ucwBnZXRfQ29ubmVjdGlvbnMAQ29ubmVjdGlvbk1hbmFnZXIAU3lzdGVtLkNvbGxlY3Rp
b25zAElFbnVtZXJhdG9yAE1vdmVOZXh0AElEaXNwb3NhYmxlAERpc3Bvc2UAVG9VcHBlcgBFcXVh
bHMAc2V0X0lzUmVhZABDb25mbGljdFJlc29sdXRpb25Nb2RlAFVwZGF0ZQBzZXRfVGFza1Jlc3Vs
dABnZXRfVGFza1Jlc3VsdABDb250YWlucwBTZW5kZXIARW1haWxBZGRyZXNzAGdldF9TZW5kZXIA
Z2V0X0FkZHJlc3MARGF0ZVRpbWUAZ2V0X0RhdGVUaW1lUmVjZWl2ZWQASW5kZXhPdXRPZlJhbmdl
RXhjZXB0aW9uAFRvUmVjaXBpZW50cwBFbWFpbEFkZHJlc3NDb2xsZWN0aW9uAGdldF9Ub1JlY2lw
aWVudHMAQ2NSZWNpcGllbnRzAGdldF9DY1JlY2lwaWVudHMAQmNjUmVjaXBpZW50cwBnZXRfQmNj
UmVjaXBpZW50cwBTdWJqZWN0AGdldF9TdWJqZWN0AEJvZHkATWVzc2FnZUJvZHkAZ2V0X0JvZHkA
Z2V0X1RleHQARmlsZUluZm8ARmlsZVN5c3RlbUluZm8AZ2V0X0V4dGVuc2lvbgBNZW1vcnlTdHJl
YW0AU3RyZWFtAFNlZWtPcmlnaW4AU2VlawBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBSZWFkVG9F
bmQAUGF0aABHZXRGaWxlTmFtZVdpdGhvdXRFeHRlbnNpb24ASXRlbUlkAFNlcnZpY2VJZABnZXRf
VW5pcXVlSWQAZ2V0X1llYXIAZ2V0X01vbnRoAGdldF9EYXkAZ2V0X0hvdXIAZ2V0X01pbnV0ZQBn
ZXRfU2Vjb25kAGdldF9MZW5ndGgAU3Vic3RyaW5nAGdldF9Sb3V0aW5nVHlwZQBnZXRfRmlsZU5h
bWUAZ2V0X0NyZWF0aW9uVGltZQBnZXRfTm93AFN5c3RlbS5UaHJlYWRpbmcAVGhyZWFkU3RhcnQA
VGhyZWFkAFN0YXJ0AGdldF9Jc0FsaXZlAEFib3J0AENsb3NlAEJpbmQAZ2V0X0Rpc3BsYXlOYW1l
AHNldF9EaXNwbGF5TmFtZQBTYXZlAGdldF9Db25uZWN0aW9uU3RyaW5nAFN5c3RlbS5EYXRhAFN5
c3RlbS5EYXRhLk9sZURiAE9sZURiQ29ubmVjdGlvbgBPbGVEYkNvbW1hbmQAU3lzdGVtLkRhdGEu
Q29tbW9uAERiQ29ubmVjdGlvbgBPcGVuAERiQ29tbWFuZABDb21tYW5kVHlwZQBzZXRfQ29tbWFu
ZFR5cGUARXhlY3V0ZU5vblF1ZXJ5AFBkZlNoYXJwLlBkZi5JTwBQZGZSZWFkZXIAUGRmU2hhcnAu
UGRmAFBkZkRvY3VtZW50AFBkZkRvY3VtZW50T3Blbk1vZGUAUGRmUGFnZXMAZ2V0X1BhZ2VzAFN5
c3RlbS5Db3JlAFN5c3RlbS5MaW5xAEVudW1lcmFibGUASUVudW1lcmFibGVgMQBJRW51bWVyYWJs
ZQBPZlR5cGUAUGRmUGFnZQBQZGZTaGFycC5QZGYuQ29udGVudABDb250ZW50UmVhZGVyAFJlYWRD
b250ZW50AEFwcGVuZExpbmUAU2xlZXAAR2V0VHlwZQBnZXRfQXNzZW1ibHlRdWFsaWZpZWROYW1l
AE5vdEltcGxlbWVudGVkRXhjZXB0aW9uAE9wQ29kZQBnZXRfT3BDb2RlAE9wQ29kZU5hbWUAZ2V0
X09wZXJhbmRzAFNUXzE4Mjg2ZDU0ODc5NTQ3NmY4NGYyNDlmZTA5ZmU3ZGZkLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8AMQA4ADIAOAA2AGQANQA0ADgANwA5ADUANAA3
ADYAZgA4ADQAZgAyADQAOQBmAGUAMAA5AGYAZQA3AGQAZgBkAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAArJABQAGEAYwBrAGEAZwBlADoAOgBTAG0AdABwAFQAaQBt
AGUAbwB1AHQAACckAFAAYQBjAGsAYQBnAGUAOgA6AFMAbQB0AHAATABvAGcAaQBuAAAjJABQAGEA
YwBrAGEAZwBlADoAOgBTAG0AdABwAFAAdwBkAAAhJABQAGEAYwBrAGEAZwBlADoAOgBTAGUAcgB2
AGUAcgAALSQAUABhAGMAawBhAGcAZQA6ADoARABvAHMAcwBpAGUAcgBDAGkAYgBsAGUAAC1VAHMA
ZQByADoAOgBzAHQAcgBDAGgAZQBtAGkAbgBGAGkAYwBoAGkAZQByAAAvJABQAGEAYwBrAGEAZwBl
ADoAOgBEAG8AcwBzAGkAZQByAFMAbwB1AHIAYwBlAAABADMkAFAAYQBjAGsAYQBnAGUAOgA6AEMA
aABhAGkAbgBlAEEAQwBoAGUAcgBjAGgAZQByAAAjJABQAGEAYwBrAGEAZwBlADoAOgBGAGkAYwBo
AGkAZQByAAADXAAAIVMAeQBzAHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAEFlAHgAZQBjACAA
WwBkAGIAbwBdAC4AWwBJAG4AcwBlAHIAdABfAEkAbgBmAG8ARgBpAGMAaABpAGUAcgBdACAAACdV
AHMAZQByADoAOgBzAHQAcgBOAG8AbQBGAGkAYwBoAGkAZQByAAADJwABBScALAABC04AVQBMAEwA
LAAAJVUAcwBlAHIAOgA6AHMAdAByAEUAeAB0AGUAbgBzAGkAbwBuAAAtVQBzAGUAcgA6ADoAcwB0
AHIATQBvAGQAZQBSAGUAYwBlAHAAdABpAG8AbgAALVUAcwBlAHIAOgA6AHMAdAByAEYAbwByAG0A
YQB0AEYAaQBjAGgAaQBlAHIAACtVAHMAZQByADoAOgBzAHQAcgBEAG8AcwBzAGkAZQByAEMAaQBi
AGwAZQAAMVUAcwBlAHIAOgA6AHMAdAByAEEAZAByAGUAcwBzAGUARQBtAGUAdAB0AGUAdQByAAA5
VQBzAGUAcgA6ADoAcwB0AHIAQQBkAHIAZQBzAHMAZQBEAGUAcwB0AGkAbgBhAHQAYQBpAHIAZQAA
HVUAcwBlAHIAOgA6AHMAdAByAE8AYgBqAGUAdAAABScAJwABHVUAcwBlAHIAOgA6AHMAdAByAEMA
bwByAHAAcwAAL1UAcwBlAHIAOgA6AHMAdAByAEQAbwBzAHMAaQBlAHIATwByAGkAZwBpAG4AZQAA
KVUAcwBlAHIAOgA6AHMAdAByAEQAYQB0AGUARgBpAGMAaABpAGUAcgAALVUAcwBlAHIAOgA6AHMA
dAByAEQAYQB0AGUAUgBlAGMAZQBwAHQAaQBvAG4AAC9VAHMAZQByADoAOgBzAHQAcgBUAGUAeAB0
AGUARAB1AEYAaQBjAGgAaQBlAHIAAAVcAFwAACUkAFAAYQBjAGsAYQBnAGUAOgA6AGkAZABBAGMA
dABpAG8AbgAAAywAAAUwACwAACMkAFAAYQBjAGsAYQBnAGUAOgA6AGkAZABFAHQAYQBwAGUAAAMw
AAAfVQBzAGUAcgA6ADoAcwB0AHIASQBkAE0AYQBpAGwAAAlOAFUATABMAAAHTwBVAEkAAC1VAHMA
ZQByADoAOgBzAHQAcgBSAGUAcwB1AGwAdABNAGUAcwBzAGEAZwBlAAAnVQBzAGUAcgA6ADoAaQBu
AHQAUgBlAHMAdQBsAHQAVABhAHMAawAAHW4AbwBtAE8AcgBpAGcAaQBuAGUATQBhAGkAbAAAAy0A
ARVuAG8AbQBEAG8AbQBhAGkAbgBlAAAZZABhAHQAZQBDAG8AdQByAGEAbgB0AGUAABF5AHkAeQB5
AE0ATQBkAGQAAGlFAHIAcgBlAHUAcgAgAGQAYQBuAHMAIABsAGUAIABwAGEAcgBhAG0AZQB0AHIA
YQBnAGUAIABkAGUAIABsAGEAIABjAGgAYQBpAG4AZQAgAGQAZQAgAHIAZQBjAGgAZQByAGMAaABl
AAADIAAACS4AVABYAFQAAAkuAFgATQBMAAAFRAAyAAADOgAAAzsAAC9VAHMAZQByADoAOgBzAHQA
cgBEAGEAdABlAFQAcgBhAGkAdABlAG0AZQBuAHQAAAMuAAAHUABEAEYAADtVAHMAZQByADoAOgBz
AHQAcgBDAGgAZQBtAGkAbgBDAG8AbQBwAGwAZQB0AEYAaQBjAGgAaQBlAHIAAD8jACMAIABMAEUA
QwBUAFUAUgBFACAARABVACAAUABEAEYAIABJAE0AUABPAFMAUwBJAEIATABFACAAIwAjAAAHWABN
AEwAAACtDySKkBccQ6pBS1cHZ6PAAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIV
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
UwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQANcWMbAAABAA1xYxs/
AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAA
AAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBG
AGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQA
ZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQA4ADIAOAA2AGQANQA0ADgANwA5ADUANAA3
ADYAZgA4ADQAZgAyADQAOQBmAGUAMAA5AGYAZQA3AGQAZgBkAAAAQAAPAAEARgBpAGwAZQBWAGUA
cgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMAAxADEALgAyADgAOQA0ADEAAAAAAHAAKAABAEkAbgB0
AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AYgBhADYAMwBmADcANQAyADIAYgAxADMANAAyAGYA
MQBiAGIAZgA0AGUAMgA3ADMANwBhADMAZQBjAGEANgA0AC4AZABsAGwAAABIABIAAQBMAGUAZwBh
AGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADcA
AAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYgBhADYAMwBm
ADcANQAyADIAYgAxADMANAAyAGYAMQBiAGIAZgA0AGUAMgA3ADMANwBhADMAZQBjAGEANgA0AC4A
ZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADEAOAAyADgANgBk
ADUANAA4ADcAOQA1ADQANwA2AGYAOAA0AGYAMgA0ADkAZgBlADAAOQBmAGUANwBkAGYAZAAAAEQA
DwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMQAuADIAOAA5
ADQAMQAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NwAwADEAMQAuADIAOAA5ADQAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAGAAAAwAAACQOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{4DC89239-E8E9-4F87-932F-A5C01A76CD00}"
          DTS:From="Package\Sequence Container\pièce jointe à extraire"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Log" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{7701F7F0-4977-4D41-8ACA-524FB59DAA6F}"
          DTS:From="Package\Sequence Container\pièce jointe à extraire"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Insert LOG en erreur"
          DTS:Value="1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Sequence Container\Insert LOG en erreur"
          TopLeft="340,216" />
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\Log"
          TopLeft="85,213" />
        <NodeLayout
          Size="181,42"
          Id="Package\Sequence Container\pièce jointe à extraire"
          TopLeft="187,54" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="248.666666666667,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-115.666666666667,117"
              Start="0,0"
              End="-115.666666666667,109.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.4151150054764" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.4151150054764"
                    Point2="0,47.4151150054764"
                    Point3="-4,47.4151150054764" />
                  <mssgle:LineSegment
                    End="-111.666666666667,47.4151150054764" />
                  <mssgle:CubicBezierSegment
                    Point1="-111.666666666667,47.4151150054764"
                    Point2="-115.666666666667,47.4151150054764"
                    Point3="-115.666666666667,51.4151150054764" />
                  <mssgle:LineSegment
                    End="-115.666666666667,109.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="306.333333333333,96">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="122.166666666667,120"
              Start="0,0"
              End="122.166666666667,112.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.6308871851041" />
                  <mssgle:CubicBezierSegment
                    Point1="0,44.6308871851041"
                    Point2="0,48.6308871851041"
                    Point3="4,48.6308871851041" />
                  <mssgle:LineSegment
                    End="118.166666666667,48.6308871851041" />
                  <mssgle:CubicBezierSegment
                    Point1="118.166666666667,48.6308871851041"
                    Point2="122.166666666667,48.6308871851041"
                    Point3="122.166666666667,52.6308871851041" />
                  <mssgle:LineSegment
                    End="122.166666666667,112.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="45.8419856770835,53.6308871851041,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="563,342"
          Size="563,385"
          Id="Package\Sequence Container"
          TopLeft="205,74" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Sequence Container\pièce jointe à extraire.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="96,42"
          Id="Package\Sequence Container\pièce jointe à extraire.EventHandlers[OnError]\Log"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>